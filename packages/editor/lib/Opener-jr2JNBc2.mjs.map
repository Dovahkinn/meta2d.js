{"version":3,"file":"Opener-jr2JNBc2.mjs","sources":["../src/components/ViewCopy.vue","../src/views/Opener.vue"],"sourcesContent":["<template>\r\n  <div id=\"meta2d-sub\" :class=\"{ 'is--preview': preview, 'is--opener': isOpener }\"></div>\r\n\r\n  <t-dialog\r\n    :visible=\"visible\"\r\n    :close-btn=\"true\"\r\n    :on-confirm=\"onConfirmAnother\"\r\n    cancel-btn=\"取消\"\r\n    :on-close=\"close\"\r\n  >\r\n    <template #header>设置</template>\r\n    <template #body>\r\n      <t-form ref=\"form\" :data=\"formData\">\r\n        <t-form-item label=\"ID\" name=\"id\" disabled>\r\n          <t-input placeholder=\"请输入内容\" v-model=\"formData.id\" disabled />\r\n        </t-form-item>\r\n        <t-form-item label=\"名称\" name=\"Name\">\r\n          <t-input placeholder=\"请输入内容\" v-model=\"formData.Name\" disabled />\r\n        </t-form-item>\r\n        <t-form-item\r\n          label=\"设置状态值\"\r\n          name=\"State\"\r\n          v-if=\"formData.State != -1\"\r\n        >\r\n          <t-input\r\n            placeholder=\"请输入\"\r\n            v-model=\"formData.State\"\r\n            :disabled=\"formData.fault == 1\"\r\n          />\r\n        </t-form-item>\r\n      </t-form>\r\n    </template>\r\n  </t-dialog>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { onMounted, onUnmounted, reactive, ref } from \"vue\";\r\nimport {\r\n  Meta2d,\r\n  Pen,\r\n  register,\r\n  registerAnchors,\r\n  registerCanvasDraw,\r\n} from \"@meta2d/core\";\r\nimport { flowPens, flowAnchors } from \"@meta2d/flow-diagram\";\r\nimport {\r\n  activityDiagram,\r\n  activityDiagramByCtx,\r\n} from \"@meta2d/activity-diagram\";\r\nimport { classPens } from \"@meta2d/class-diagram\";\r\nimport { sequencePens, sequencePensbyCtx } from \"@meta2d/sequence-diagram\";\r\nimport { register as registerEcharts } from \"@meta2d/chart-diagram\";\r\nimport { formPens } from \"@meta2d/form-diagram\";\r\nimport { chartsPens } from \"@meta2d/le5le-charts\";\r\nimport { ftaPens, ftaPensbyCtx, ftaAnchors } from \"@meta2d/fta-diagram\";\r\n\r\nimport { WebSocketClient } from \"@qs/websocket-client\";\r\nimport { useWsHandlers } from \"../services/useHandlers\";\r\n\r\nconst props = defineProps({\r\n  preview: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  data: {\r\n    type: Object,\r\n  },\r\n  customWsHandler: {\r\n    type: Function,\r\n  },\r\n\r\n  isOpener: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  \r\n});\r\n\r\n\r\nconst meta2dOptions: any = {\r\n  rule: false,\r\n  drawingLineName: \"line\",\r\n  rotateCursor: \"rotate.cur\",\r\n};\r\n\r\nconst visible = ref(false);\r\nlet formData = reactive({\r\n  id: \"\",\r\n  Name: \"\",\r\n  fault: 0,\r\n  State: 0,\r\n});\r\n\r\n\r\nconst emit = defineEmits([\"ready\"]);\r\n\r\nlet wsClient: any;\r\nlet _meta2d: any;\r\n\r\n\r\nonMounted(() => {\r\n  // 创建实例\r\n  _meta2d = new Meta2d(\"meta2d-sub\", meta2dOptions);\r\n\r\n  // ! 恢复主画布\r\n  globalThis.meta2d = globalThis.mainMeta2d;\r\n\r\n  // 按需注册图形库\r\n  // 以下为自带基础图形库\r\n  register(flowPens());\r\n  registerAnchors(flowAnchors());\r\n  register(activityDiagram());\r\n  registerCanvasDraw(activityDiagramByCtx());\r\n  register(classPens());\r\n  register(sequencePens());\r\n  registerCanvasDraw(sequencePensbyCtx());\r\n  registerEcharts();\r\n  registerCanvasDraw(formPens());\r\n  registerCanvasDraw(chartsPens());\r\n  register(ftaPens());\r\n  registerCanvasDraw(ftaPensbyCtx());\r\n  registerAnchors(ftaAnchors());\r\n  // 注册其他自定义图形库\r\n  // ...\r\n\r\n  const data = props.data;\r\n  if (data) {\r\n    const { resolver } = useWsHandlers(data);\r\n\r\n    if (props.preview) {\r\n      data.locked = 1;\r\n      if (data.lockState) {\r\n        data.locked = data.lockState;\r\n      }\r\n      const msgTypes = (data.msgTypes || [])\r\n        .map((item: string) => {\r\n          return Number(item);\r\n        })\r\n        .filter((item: number) => {\r\n          return !isNaN(item);\r\n        });\r\n\r\n      const jsStr = data.onMessageJsCode;\r\n      if (data.wsUrl) {\r\n        wsClient = WebSocketClient.getInstance(data.wsUrl, {\r\n          busName: data.busName,\r\n          msgTypes,\r\n          enableLog: false,\r\n          onReady: () => {\r\n            console.log(\"%c连接成功！\", \"color: green; font-weight: bold;\");\r\n            wsClient.subscribe(data.busName, msgTypes, (response: any) => {\r\n              console.log(\"response: \", response);\r\n              try {\r\n                if (jsStr) {\r\n                  const fn = new Function(\"data\", jsStr);\r\n                  fn(response);\r\n                } else {\r\n                  if (props.customWsHandler) {\r\n                    // 自定义处理，如电路消息需要考虑更新不显示的，对消息进行缓存等等\r\n                    props.customWsHandler(response, meta2d);\r\n                  } else {\r\n                    // TODO：需要根据 msg 中的实际字段信息，转换为具体的 meta2d 执行逻辑\r\n                    resolver(response);\r\n                  }\r\n                }\r\n              } catch (error) {\r\n                console.log(\"error: \", error);\r\n              }\r\n            });\r\n          },\r\n        });\r\n        wsClient.connect();\r\n\r\n      }\r\n    } else {\r\n      data.locked = 0;\r\n    }\r\n    _meta2d.open(data as any);\r\n\r\n    emit(\"ready\", _meta2d);\r\n\r\n  }\r\n\r\n});\r\n// WebSocket重新连接的方法\r\nconst reconnectWebSocket = (data: any) => {\r\n  const { resolver } = useWsHandlers(data);\r\n  if (data.wsUrl) {\r\n    data.locked = 1;\r\n    const msgTypes = (data.msgTypes || [])\r\n      .map((item: string) => {\r\n        return Number(item);\r\n      })\r\n      .filter((item: number) => {\r\n        return !isNaN(item);\r\n      });\r\n\r\n    const jsStr = data.onMessageJsCode;\r\n    wsClient = WebSocketClient.getInstance(data.wsUrl, {\r\n      busName: data.busName,\r\n      msgTypes,\r\n      enableLog: false,\r\n      onReady: () => {\r\n        console.log(\"%c连接成功！\", \"color: green; font-weight: bold;\");\r\n        wsClient.subscribe(data.busName, msgTypes, (response: any) => {\r\n          try {\r\n            if (jsStr) {\r\n              const fn = new Function(\"data\", jsStr);\r\n              fn(response);\r\n            } else {\r\n              if (props.customWsHandler) {\r\n                // 自定义处理，如电路消息需要考虑更新不显示的，对消息进行缓存等等\r\n                props.customWsHandler(response, meta2d);\r\n              } else {\r\n                // TODO：需要根据 msg 中的实际字段信息，转换为具体的 meta2d 执行逻辑\r\n                resolver(response);\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.log(\"error: \", error);\r\n          }\r\n        });\r\n      },\r\n    });\r\n    wsClient.connect();\r\n  }\r\n};\r\n// 发送消息设置  1设置元器件属性  2设置元器件故障分别发送消息\r\nconst sendMessageSocket = (pen: any, type: any) => {\r\n  let data: any = localStorage.getItem(\"meta2d\");\r\n  if (props.data || data) {\r\n    data = props.data || JSON.parse(data);\r\n  }\r\n\r\n  // 发送故障\r\n  if (data.wsUrl && type === \"fault\") {\r\n    wsClient.sendMessage(data.busName, 7000, {\r\n      Name: pen.Name,\r\n      Type: 28,\r\n      Code: pen.fault,\r\n    });\r\n    let color = pen.fault == 0 ? \"\" : \"#FF0000\";\r\n    _meta2d.setValue(\r\n      { id: pen.id, color: color, fault: pen.fault },\r\n      { render: false }\r\n    );\r\n  }\r\n  // 发送开关状态\r\n  if (data.wsUrl && type === \"setting\") {\r\n    wsClient.sendMessage(data.busName, 3000, {\r\n      Name: pen.Name,\r\n      Type: 28,\r\n      State: pen.State,\r\n    });\r\n    _meta2d.setValue({ id: pen.id, showChild: pen.State }, { render: false });\r\n  }\r\n};\r\n// 发送请求同步电路\r\nconst Sendrequestsyn = () => {\r\n  let data: any = props.data;\r\n\r\n  if (data.wsUrl) {\r\n    wsClient.sendMessage(data.busName, 1002, {});\r\n  }\r\n};\r\n\r\nconst close = () => {\r\n  visible.value = false;\r\n};\r\nconst onConfirmAnother = (context: any) => {\r\n  visible.value = false;\r\n  sendMessageSocket(formData, \"setting\");\r\n  // sendMessageSocket 点击确定后发送消息\r\n};\r\ndefineExpose({\r\n  reconnectWebSocket,\r\n  Sendrequestsyn,\r\n});\r\n\r\n\r\nonUnmounted(() => {\r\n  _meta2d.destroy(true);\r\n  wsClient && wsClient.close();\r\n});\r\n\r\n</script>\r\n<style lang=\"postcss\" scoped>\r\n#meta2d-sub {\r\n  overflow: hidden;\r\n\r\n  &.is--opener {\r\n    min-height: 400px;\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"app-page is--opener\">\r\n\r\n    <View\r\n      v-if=\"data\"\r\n      preview\r\n      isOpener\r\n      :data=\"data\"\r\n      @ready=\"ready\"\r\n    />\r\n    <t-empty v-else></t-empty>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport {\r\n  defineEmits,\r\n  defineProps,\r\n  ref,\r\n  reactive,\r\n  computed,\r\n  onMounted,\r\n} from \"vue\";\r\nimport View from \"../components/ViewCopy.vue\";\r\nimport { EventAction } from \"../types/Event.ts\";\r\nimport { deepClone } from \"@meta2d/core\";\r\nimport { useLogTable, useScripts } from \"../services/useTable.ts\";\r\nimport { useExtendEvent } from \"../services/useHandlers.ts\";\r\n\r\nconst emit = defineEmits([\"ready\"]);\r\nconst props = defineProps({\r\n  url: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  \r\n});\r\n\r\nconst data = ref<any>(null);\r\n\r\nconst applyTable = (res: any, instance: any) => {\r\n\r\n  const { tasks } = useScripts(res, instance);\r\n  setTimeout(async () => {\r\n    for (const task of tasks) {\r\n      const r = await task();\r\n    }\r\n  });\r\n};\r\n\r\n\r\nif (props.url) {\r\n  globalThis.mainMeta2d = globalThis.meta2d;\r\n\r\n  fetch(props.url)\r\n    .then((res) => res.json())\r\n    .then((res) => {\r\n      data.value = res;\r\n    }).catch(error => {\r\n      console.log('opener: fetch error: ', error);\r\n    })\r\n}\r\n\r\nconst { extendOn } = useExtendEvent();\r\n\r\nonMounted(() => {\r\n  meta2d?.resize();\r\n\r\n  // * 扩展事件\r\n  extendOn();\r\n});\r\n\r\nconst ready = (_meta2d: any) => {\r\n  console.log(\"opener ready: \", _meta2d);\r\n  _meta2d.fitView(true, 20)\r\n  applyTable(data.value, _meta2d);\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.sidebar-transition-enter-active,\r\n.sidebar-transition-leave-active {\r\n  transition: transform 0.3s ease, opacity 0.3s ease;\r\n}\r\n\r\n.sidebar-transition-enter,\r\n.sidebar-transition-leave-to {\r\n  transform: translateX(-250px);\r\n  opacity: 0;\r\n}\r\n\r\n.sidebar-transition-enter-to {\r\n  transform: translateX(0);\r\n  opacity: 1;\r\n}\r\n\r\n.app-page {\r\n  display: flex;\r\n  height: 100%;\r\n  min-height: 400px;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  &.is--full-height {    \r\n    height: 100vh;\r\n  }\r\n \r\n}\r\n</style>\r\n"],"names":["props","__props","meta2dOptions","visible","ref","formData","reactive","emit","__emit","wsClient","_meta2d","onMounted","Meta2d","register","flowPens","registerAnchors","flowAnchors","activityDiagram","registerCanvasDraw","activityDiagramByCtx","classPens","sequencePens","sequencePensbyCtx","registerEcharts","formPens","chartsPens","ftaPens","ftaPensbyCtx","ftaAnchors","data","resolver","useWsHandlers","msgTypes","item","jsStr","WebSocketClient","response","error","reconnectWebSocket","sendMessageSocket","pen","type","Sendrequestsyn","close","onConfirmAnother","context","__expose","onUnmounted","applyTable","res","instance","tasks","useScripts","task","extendOn","useExtendEvent","ready"],"mappings":"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"}