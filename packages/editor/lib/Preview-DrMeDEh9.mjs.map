{"version":3,"file":"Preview-DrMeDEh9.mjs","sources":["../src/services/usePlayer.ts","../src/views/Preview.vue"],"sourcesContent":["import { ref, computed } from 'vue';\r\n\r\ntype StepDataType = {\r\n  name: string;\r\n  order?: number;\r\n  description?: string;\r\n  // 元件状态集合\r\n  stateList: ElectricState[];\r\n  currentStateList: ElectricCurrentState[];\r\n  // meta2d 内置属性集合，用于电路协议未支持的状态：颜色、大小等等\r\n  privatePropList: any[];\r\n};\r\n\r\n// 元件 msgType 1001\r\ntype ElectricState = {\r\n  // 电路元件名称, 对应图元标签\r\n  Name: string;\r\n  // 电路元件类型\r\n  Type: number;\r\n  // 电路元件是否有电\r\n  Value: number;\r\n  // 开关的状态\r\n  State: 0 | 1 | 2;\r\n};\r\n\r\n// 电流 msgType 8002\r\ntype ElectricCurrentState = {\r\n  // 对应图元标签\r\n  Name: string;\r\n  // 电流值，带正负，决定流向\r\n  Value: number;\r\n};\r\n\r\nfunction transformToPenProps(state: ElectricCurrentState | ElectricState, type: number) {\r\n  // 电流\r\n  if (type == 1) {\r\n    const { Name, Value } = state;\r\n    // TODO: value 决定流向\r\n    // TODO: name 目前感觉是线路，其他类型有什么效果需要特别处理\r\n  } else {\r\n    const { Name, Type, Value, State, } = state;\r\n\r\n    // * 开关取 state\r\n    // 修改开关组合状态 0 1 2\r\n    if (Type == 28) {\r\n      return {\r\n        tag: Name,\r\n        showChild: State || 0, // 制作组合时和电路元件定义的状态保持一致\r\n      }\r\n    }\r\n    // * 其他取 value, 代表有电无电\r\n    // ? 什么效果\r\n    else {\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport const usePlayer = () => {\r\n  const playList = ref<StepDataType[]>([]);\r\n  const currentStep = ref(0);\r\n  const currentStepData = computed(() => playList.value[currentStep.value]);\r\n\r\n  const changePage = (key: string | number) => {\r\n    // 名称、序号\r\n    if (typeof key === 'string') {\r\n      const step = playList.value.findIndex((step) => step.name === key);\r\n      if (~step) {\r\n        currentStep.value = step;\r\n      } else {\r\n        console.warn('没有这个步骤: ', key);\r\n      }\r\n    } else if (typeof key == 'number') {\r\n      const max = playList.value.length - 1;\r\n      if (max == -1) {\r\n        currentStep.value = 0;\r\n        return;\r\n      }\r\n      const normalKey = parseInt(key);\r\n      if (normalKey > max) {\r\n        currentStep.value = max;\r\n        console.warn('指定序号超出上限');\r\n      } else if (normalKey < 0) {\r\n        currentStep.value = 0;\r\n      } else {\r\n        currentStep.value = key;\r\n      }\r\n    }\r\n  };\r\n\r\n  const play = () => {\r\n    console.log('play: ', currentStepData.value, meta2d.data());\r\n    if (currentStepData.value) {\r\n      const { stateList, currentStateList } = currentStepData.value;\r\n      if (stateList?.length) {\r\n        stateList.forEach((state) => {\r\n          transformToPenProps(state, 0);\r\n        });\r\n      }\r\n      if (currentStateList?.length) {\r\n        currentStateList.forEach((state) => {\r\n          transformToPenProps(state, 1);\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const pause = () => {};\r\n  const stop = () => {};\r\n  const replay = () => {};\r\n\r\n  const prev = () => {\r\n    changePage(currentStep.value - 1);\r\n  };\r\n  const next = () => {\r\n    changePage(currentStep.value + 1);\r\n  };\r\n\r\n  return {\r\n    playList,\r\n    currentStep,\r\n    changePage,\r\n    play,\r\n    pause,\r\n    stop,\r\n    replay,\r\n    prev,\r\n    next,\r\n    currentStepData,\r\n  };\r\n};\r\n","<template>\r\n  <div class=\"app-page is--preview\">\r\n    <transition\r\n      name=\"sidebar-transition\"\r\n      @after-leave=\"afterLeave\"\r\n      @after-enter=\"afterEnter\"\r\n    >\r\n      <div v-if=\"!isCollapsed\" class=\"left__panel\">\r\n        <t-row justify=\"end\">\r\n          <t-col :span=\"2\">\r\n            <t-icon\r\n              name=\"fullscreen\"\r\n              size=\"large\"\r\n              @click=\"handleToolClick('fullscreen')\"\r\n            ></t-icon>\r\n          </t-col>\r\n          <t-col :span=\"2\">\r\n            <t-icon\r\n              name=\"rectangle\"\r\n              size=\"large\"\r\n              @click=\"handleToolClick('fit')\"\r\n            ></t-icon>\r\n          </t-col>\r\n        </t-row>\r\n        <t-divider></t-divider>\r\n        <t-tree :data=\"treeData\" expandAll activable @click=\"changeData\" />\r\n      </div>\r\n    </transition>\r\n\r\n    <View v-bind=\"$attrs\" preview :data=\"data\" @ready=\"emit('ready', $event)\" />\r\n\r\n    <div v-if=\"showRightPanel\" class=\"right__panel\">\r\n      <slot name=\"right-panel\">\r\n        <t-list v-if=\"playList.length\" :split=\"true\">\r\n          <t-list-item>\r\n            <t-list-item-meta\r\n              title=\"内容\"\r\n              :description=\"currentStepData?.description\"\r\n            />\r\n          </t-list-item>\r\n        </t-list>\r\n        <t-empty v-else></t-empty>\r\n        <t-divider></t-divider>\r\n        <t-space direction=\"vertical\" align=\"center\">\r\n          <t-button\r\n            block\r\n            theme=\"primary\"\r\n            variant=\"base\"\r\n            @click=\"clickHandler(0)\"\r\n            >上一页</t-button\r\n          >\r\n          <t-button block variant=\"outline\" @click=\"clickHandler(1)\"\r\n            >下一页</t-button\r\n          >\r\n          <t-button block variant=\"dashed\" @click=\"clickHandler(2)\"\r\n            >播放</t-button\r\n          >\r\n          <t-button block variant=\"text\" @click=\"clickHandler(3)\"\r\n            >暂停</t-button\r\n          >\r\n          <t-button block variant=\"text\" @click=\"clickHandler(4)\"\r\n            >停止</t-button\r\n          >\r\n          <t-button block variant=\"dashed\" @click=\"clickHandler(5)\"\r\n            >重播</t-button\r\n          >\r\n        </t-space>\r\n      </slot>\r\n    </div>\r\n\r\n    <t-sticky-tool\r\n      v-if=\"showStickyTool\"\r\n      type=\"compact\"\r\n      placement=\"left-bottom\"\r\n      style=\"z-index: 999\"\r\n      @click=\"handleClick\"\r\n    >\r\n      <template v-for=\"tool in sidebarTools\" :key=\"tool.label\">\r\n        <t-sticky-item\r\n          v-if=\"tool.show()\"\r\n          :label=\"tool.label\"\r\n          :icon=\"renderIcon(tool.icon)\"\r\n          :popup=\"tool.popup\"\r\n        >\r\n        </t-sticky-item>\r\n      </template>\r\n    </t-sticky-tool>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport {\r\n  defineEmits,\r\n  defineProps,\r\n  h,\r\n  ref,\r\n  reactive,\r\n  computed,\r\n  watch,\r\n  nextTick,\r\n} from \"vue\";\r\nimport View from \"../components/View.vue\";\r\nimport { Icon } from \"tdesign-vue-next\";\r\nimport { toggleFullScreen } from \"../utils\";\r\nimport { usePlayer } from \"../services/usePlayer.ts\";\r\n\r\nconst emit = defineEmits([\"ready\"]);\r\nconst props = defineProps({\r\n  data: {\r\n    type: Object,\r\n  },\r\n  projectTreeData: {\r\n    type: Array,\r\n  },\r\n  showStickyTool: {\r\n    type: Boolean,\r\n    default: true,\r\n  },\r\n  showRightPanel: {\r\n    type: Boolean,\r\n    default: false,\r\n  }\r\n});\r\n\r\n// * 侧边工具栏\r\nconst isCollapsed = ref(true);\r\nconst sidebarTools = reactive([\r\n  {\r\n    label: \"fullscreen\",\r\n    icon: \"fullscreen\",\r\n    popup: \"全屏\",\r\n    show: () => {\r\n      return isCollapsed.value;\r\n    },\r\n  },\r\n  {\r\n    label: \"fit\",\r\n    icon: \"rectangle\",\r\n    popup: \"适应窗口\",\r\n    show: () => {\r\n      return isCollapsed.value;\r\n    },\r\n  },\r\n  {\r\n    label: \"expand\",\r\n    icon: \"menu-fold\",\r\n    popup: \"展开侧边栏\",\r\n    show: () => {\r\n      return isCollapsed.value;\r\n    },\r\n  },\r\n  {\r\n    label: \"collapse\",\r\n    icon: \"menu-unfold\",\r\n    popup: \"收起侧边栏\",\r\n    show: () => {\r\n      return !isCollapsed.value;\r\n    },\r\n  },\r\n]);\r\n\r\nconst treeData = computed(() => {\r\n  if (props.projectTreeData) return props.projectTreeData;\r\n  if (globalThis.__meta2d_env__?.projectTreeData) {\r\n    return globalThis.__meta2d_env__.projectTreeData;\r\n  }\r\n  // ! 未提供目录数据，生成默认目录\r\n  let data: any = localStorage.getItem(\"meta2d\");\r\n  if (data) {\r\n    const tmp = JSON.parse(data);\r\n    return [\r\n      {\r\n        label: \"默认\",\r\n        value: \"\",\r\n        children: [\r\n          {\r\n            label: `meta2d.${tmp.template}`,\r\n            value: \"\",\r\n          },\r\n        ],\r\n      },\r\n    ];\r\n  }\r\n  return [];\r\n});\r\n\r\nconst renderIcon = (icon: string) => {\r\n  return () =>\r\n    h(Icon, {\r\n      name: icon,\r\n    });\r\n};\r\n\r\nconst handleToolClick = (code: string) => {\r\n  if (code == \"fit\") {\r\n    meta2d.fitView(true, 20);\r\n  } else if (code == \"fullscreen\") {\r\n    toggleFullScreen();\r\n  }\r\n};\r\n\r\nconst handleClick = ({ e, item }: { e: MouseEvent; item: any }) => {\r\n  if (item.label == \"expand\") {\r\n    isCollapsed.value = false;\r\n  } else if (item.label == \"collapse\") {\r\n    isCollapsed.value = true;\r\n  } else {\r\n    handleToolClick(item.label);\r\n  }\r\n};\r\n\r\nconst changeData = ({ e, node }: { e: MouseEvent; node: any }) => {\r\n  console.log(\"change node: \", node);\r\n\r\n  if (node.value) {\r\n    fetch(node.value)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res) {\r\n          res.locked = 1;\r\n          meta2d.open(res);\r\n          meta2d.emit(\"clear\");\r\n          meta2d.fitView();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err: \", err);\r\n      });\r\n  }\r\n};\r\nconst afterEnter = () => {\r\n  meta2d?.resize();\r\n};\r\nconst afterLeave = () => {\r\n  meta2d?.resize();\r\n};\r\n\r\n// * 控制逻辑，页面切换\r\nconst { playList, currentStepData, prev, next, play } = usePlayer();\r\nplayList.value = [\r\n  {\r\n    name: \"page1\",\r\n    description: \"text1\",\r\n    stateList: [\r\n      {\r\n        Name: \"Switch\",\r\n        Type: 0,\r\n        State: 0,\r\n      },\r\n      {\r\n        Name: \"继电器A\",\r\n        Type: 18,\r\n        Value: 1, // 有电无电\r\n      },\r\n    ],\r\n    currentStateList: [\r\n      {\r\n        name: \"LineA\",\r\n        value: 1.1, // 电流值\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"page2\",\r\n    description: \"text2\",\r\n    stateList: [\r\n      {\r\n        Name: \"Switch\",\r\n        Type: 0,\r\n        State: 1,\r\n      },\r\n      {\r\n        Name: \"继电器\",\r\n        Type: 17,\r\n        Value: 0,\r\n      },\r\n    ],\r\n    currentStateList: [\r\n      {\r\n        name: \"LineB\",\r\n        value: 1.1, // 电流值\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"page3\",\r\n    description: \"text3\",\r\n    stateList: [\r\n      {\r\n        Name: \"Switch\",\r\n        Type: 0,\r\n        State: 2,\r\n      },\r\n      {\r\n        Name: \"R\",\r\n        Type: 0,\r\n        Value: 1,\r\n      },\r\n    ],\r\n    currentStateList: [\r\n      {\r\n        name: \"LineC\",\r\n        value: 1.1, // 电流值\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n// 测试用\r\nconst clickHandler = (code: number) => {\r\n  switch (code) {\r\n    case 0:\r\n      prev();\r\n      break;\r\n    case 1:\r\n      next();\r\n      break;\r\n    case 2:\r\n      play();\r\n      break;\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"postcss\" scoped>\r\n.sidebar-transition-enter-active,\r\n.sidebar-transition-leave-active {\r\n  transition:\r\n    transform 0.3s ease,\r\n    opacity 0.3s ease;\r\n}\r\n\r\n.sidebar-transition-enter, .sidebar-transition-leave-to /* .sidebar-transition-leave-active in <2.1.8 */ {\r\n  transform: translateX(-250px);\r\n  opacity: 0;\r\n}\r\n\r\n.sidebar-transition-enter-to {\r\n  transform: translateX(0);\r\n  opacity: 1;\r\n}\r\n\r\n.sidebar-transition-leave-to {\r\n  transform: translateX(-250px);\r\n  opacity: 0;\r\n}\r\n\r\n.app-page {\r\n  height: 100vh;\r\n  display: flex;\r\n\r\n  .left__panel {\r\n    width: 250px;\r\n    height: 100%;\r\n    border-right: 2px solid #f5f5f5;\r\n    padding: 20px;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  .right__panel {\r\n    width: 250px;\r\n    height: 100%;\r\n    border-left: 2px solid #f5f5f5;\r\n    padding: 20px;\r\n    overflow-y: auto;\r\n    z-index: 999;\r\n  }\r\n}\r\n</style>\r\n"],"names":["usePlayer","playList","ref","currentStep","currentStepData","computed","changePage","key","step","max","normalKey","stateList","currentStateList","state","emit","__emit","props","__props","isCollapsed","sidebarTools","reactive","treeData","_a","data","renderIcon","icon","h","Icon","handleToolClick","code","toggleFullScreen","handleClick","e","item","changeData","node","res","err","afterEnter","afterLeave","prev","next","play","clickHandler"],"mappings":"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"}