{"version":3,"file":"Preview-z6I9jeGn.mjs","sources":["../src/services/useTable.ts","../src/views/dialog/ExtendDialog.vue","../src/views/widgets/MultipleDataForm.vue","../src/views/Preview.vue"],"sourcesContent":["import { reactive, ref } from 'vue';\r\nimport {\r\n  EventAction,\r\n  ExtendAction,\r\n  ExtendEventSource,\r\n  ExtendActionEventNameMap,\r\n  ExtendActionMessageTypeMap,\r\n} from '../types/Event';\r\nimport { s12 } from '@meta2d/core';\r\nimport { callExtendAction } from './useHandlers';\r\nimport { createPathAnimation } from '../utils/pathAnimate';\r\n\r\nexport const useLogTable = (metaData: any = {}) => {\r\n  const { presetScriptsConfig = {} } = metaData || {};\r\n\r\n  const {\r\n    columns = [],\r\n    scripts = [],\r\n    style,\r\n    ...tableProps\r\n  } = presetScriptsConfig || {};\r\n  const tableLogData = ref([]);\r\n\r\n  let tableStyle: any = {};\r\n  if (style) {\r\n    const {\r\n      evenRowBackgroundColor,\r\n      oddRowBackgroundColor,\r\n      textColor,\r\n      backgroundImageUrl,\r\n    } = style;\r\n    tableStyle = {\r\n      '--td-bg-color-secondarycontainer': oddRowBackgroundColor,\r\n      '--td-bg-color-container': evenRowBackgroundColor,\r\n      '--td-text-color-primary': textColor || '#FFFFFF',\r\n      '--td-text-color-placeholder': textColor || '#FFFFFF',\r\n      '--table-background-image-url': `url(${backgroundImageUrl || ''})`,\r\n    };\r\n    if (backgroundImageUrl && !evenRowBackgroundColor) {\r\n      tableStyle['--td-bg-color-container'] = 'transparent';\r\n    }\r\n    if (backgroundImageUrl && !oddRowBackgroundColor) {\r\n      tableStyle['--td-bg-color-secondarycontainer'] = 'transparent';\r\n    }\r\n  }\r\n\r\n  return {\r\n    columns,\r\n    tableLogData,\r\n    tableProps,\r\n    tableStyle,\r\n  };\r\n};\r\n\r\nfunction executeAnimate(type: string | number, target: string[], meta2d: any) {\r\n  if (!meta2d) {\r\n    meta2d = globalThis.meta2d;\r\n  }\r\n\r\n  const fnMap: any = {\r\n    0: 'startAnimate',\r\n    1: 'pauseAnimate',\r\n    2: 'stopAnimate',\r\n  };\r\n  const pens: any[] = [];\r\n  if (target?.length) {\r\n    target.forEach((tag) => {\r\n      const res = meta2d.find(tag);\r\n      if (res) {\r\n        pens.push(...res);\r\n      }\r\n    });\r\n  }\r\n  const fnName = fnMap[type];\r\n  if (fnName) {\r\n    pens.forEach((pen) => {\r\n      if (Array.isArray(pen.pathFrames)) {\r\n        let control = pen.pathAnimateControl;\r\n        if (!control || !control.play) {\r\n          pen.pathAnimateControl = createPathAnimation(pen, pen.pathFrames);\r\n          control = pen.pathAnimateControl;\r\n        }\r\n        // console.log('pathAnimateControl =============> ', control, type);\r\n        if (type == 0) {\r\n          if (control.isPaused.value) {\r\n            control.resume();\r\n          } else {\r\n            control.play();\r\n          }\r\n        } else if (type == 1) {\r\n          control.pause();\r\n        } else if (type == 2) {\r\n          control.stop();\r\n        }\r\n      }\r\n    });\r\n    meta2d[fnName](pens);\r\n  }\r\n}\r\n\r\nexport const useScripts = (metaData: any = {}, meta2dInstance?: any) => {\r\n  let meta2d = globalThis.meta2d;\r\n  if (meta2dInstance) {\r\n    meta2d = meta2dInstance;\r\n  }\r\n\r\n  const { presetScriptsConfig = {} } = metaData || {};\r\n  const { scripts = [] } = presetScriptsConfig || {};\r\n\r\n  const tasks: Function[] = [];\r\n  if (Array.isArray(scripts)) {\r\n    scripts.forEach((item, index) => {\r\n      const { handlers = [], duration = 3000, rowPropList = [] } = item;\r\n      // 创建任务\r\n      if (Array.isArray(handlers) && handlers.length) {\r\n        //\r\n        // * 自定义消息: 不能跨进程\r\n        // ! 实际的调用时间是不可预测的，只能被动接收\r\n        let msgHandler = (params?: any) => {\r\n          console.log(\r\n            'default custom message handler: ',\r\n            params,\r\n            item,\r\n            msgHandler._cbs\r\n          );\r\n          msgHandler._cache = params;\r\n          // ! 可能没有值，因为靠后的队列还没执行到\r\n          if (msgHandler._cbs.length) {\r\n            msgHandler._cbs.forEach((cb: any) => {\r\n              setTimeout(() => {\r\n                cb(params);\r\n              }, duration);\r\n            });\r\n            msgHandler._cbs = []\r\n          }\r\n        };\r\n        msgHandler._cbs = [];\r\n\r\n        // * 消息监听\r\n        if (meta2d || globalThis.meta2d) {\r\n          (meta2d || globalThis.meta2d).on(\r\n            ExtendActionEventNameMap.CustomMessage,\r\n            msgHandler\r\n          );\r\n        } else {\r\n          setTimeout(() => {\r\n            (meta2d || globalThis.meta2d).on(\r\n              ExtendActionEventNameMap.CustomMessage,\r\n              msgHandler\r\n            );\r\n          }, 1000);\r\n        }\r\n\r\n        // 一个步骤下有多个动作, 统一处理为一个 Promise\r\n        const fnQueue = () => {\r\n          if (!meta2d) {\r\n            meta2d = globalThis.meta2d;\r\n          }\r\n          const syncQueue = [];\r\n          const asyncQueue = [];\r\n\r\n          handlers.forEach((handler) => {\r\n            const { target, action, value = {}, where } = handler;\r\n            // 配置解析执行，同步\r\n            const executer = () => {\r\n              if (Array.isArray(target)) {\r\n                switch (action) {\r\n                  case EventAction.SetProps:\r\n                    target.forEach((tag) => {\r\n                      meta2d.setValue(\r\n                        {\r\n                          tag,\r\n                          ...value,\r\n                        },\r\n                        {\r\n                          render: false,\r\n                        }\r\n                      );\r\n                    });\r\n                    meta2d.render();\r\n                    break;\r\n                  case EventAction.StartAnimate:\r\n                    executeAnimate('0', target, meta2d);\r\n                    break;\r\n                  case EventAction.PauseAnimate:\r\n                    executeAnimate('1', target, meta2d);\r\n                    break;\r\n                  case EventAction.StopAnimate:\r\n                    executeAnimate('2', target, meta2d);\r\n                    break;\r\n                  case EventAction.Dialog:\r\n                    meta2d.canvas.dialog.show(value, handler.params);\r\n                    break;\r\n                  case ExtendAction.DialogClose:\r\n                    meta2d.canvas.dialog.hide();\r\n                    // 复用\r\n                    callExtendAction(ExtendEventSource.ExternalCall, handler);\r\n                    break;\r\n                  case ExtendAction.AnimateReverse:\r\n                    target.forEach((tag) => {\r\n                      const pens = meta2d.find(tag);\r\n                      pens.forEach((pen) => {\r\n                        const { id, animateReverse } = pen;\r\n                        meta2d.setValue(\r\n                          {\r\n                            id,\r\n                            animateReverse: !animateReverse,\r\n                          },\r\n                          {\r\n                            render: false,\r\n                          }\r\n                        );\r\n                      });\r\n                    });\r\n\r\n                    break;\r\n\r\n                  case ExtendAction.Video:\r\n                    callExtendAction(ExtendEventSource.ExternalCall, handler);\r\n                    break;\r\n\r\n                  case ExtendAction.ScriptEnd:\r\n                    // * 没有具体行为，只是通知消息\r\n                    // ! 发送给主画布\r\n                    globalThis.meta2d.emit(\r\n                      ExtendActionEventNameMap.CustomMessage,\r\n                      {\r\n                        type: ExtendActionMessageTypeMap.ScriptEnded,\r\n                        key: handler.name || handler.id,\r\n                      }\r\n                    );\r\n                    break;\r\n\r\n                  case ExtendAction.ShowMeta2D:\r\n                    callExtendAction(ExtendEventSource.ExternalCall, handler);\r\n                    break;\r\n\r\n                  case ExtendAction.GoToView:\r\n                    // TODO: 瞬移，缺少平滑效果，考虑如何优化\r\n                    if (typeof value == 'string') {\r\n                      const pen = meta2d.findOne(value);\r\n                      if (pen) {\r\n                        meta2d.gotoView(pen);\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    console.warn('unknown action:', action, handler);\r\n                    break;\r\n                }\r\n              }\r\n            };\r\n\r\n            // * 设置了触发条件，异步\r\n            if (\r\n              where &&\r\n              where.type == ExtendActionEventNameMap.CustomMessage &&\r\n              ![null, undefined, ''].includes(where.value) && where.key\r\n            ) {\r\n              // - 消息触发是异步的，封装成 Promise，等待完成\r\n              const p = new Promise((resolve) => {\r\n\r\n                // * 根据具体参数生成消息处理器\r\n                if (where.value === ExtendActionMessageTypeMap.VideoEnded) {\r\n                  const _msgHandler = ({ type, key }) => {\r\n                    console.log(\r\n                      '-------------- custom message: ',\r\n                      type,\r\n                      key,\r\n                      handler\r\n                    );\r\n                    if (\r\n                      type == ExtendActionMessageTypeMap.VideoEnded &&\r\n                      key == where.key\r\n                    ) {\r\n                      resolve(executer());\r\n                      meta2d.off(\r\n                        ExtendActionEventNameMap.CustomMessage,\r\n                        msgHandler\r\n                      );\r\n                    }\r\n                  };\r\n                  msgHandler._cbs.push(_msgHandler);\r\n                } else if (\r\n                  where.value === ExtendActionMessageTypeMap.ScriptEnded\r\n                ) {\r\n                  const _msgHandler = ({ type, key }) => {\r\n                    if (\r\n                      type == ExtendActionMessageTypeMap.ScriptEnded &&\r\n                      key == where.key\r\n                    ) {\r\n                      resolve(executer());\r\n                      meta2d.off(\r\n                        ExtendActionEventNameMap.CustomMessage,\r\n                        msgHandler\r\n                      );\r\n                    }\r\n                  };\r\n                  msgHandler._cbs.push(_msgHandler);\r\n                }\r\n\r\n                // TODO：扩展其他自定义消息\r\n              });\r\n\r\n              asyncQueue.push(p);\r\n\r\n              console.log(\r\n                'asasas ----------------',\r\n                handler,\r\n                msgHandler._cbs\r\n              );\r\n            } else {\r\n              // * 未设置条件，直接执行\r\n              // executer();\r\n              syncQueue.push(Promise.resolve(executer()));\r\n            }\r\n          });\r\n\r\n          return [syncQueue, asyncQueue];\r\n        };\r\n\r\n        // 生成任务, 按照步骤\r\n        \r\n        const task = () => {\r\n          const [syncQueue, asyncQueue] = fnQueue();\r\n          // console.group('task')\r\n          // console.log(\"sync queue: \", syncQueue)\r\n          // console.log('async queue: ', asyncQueue)\r\n          // console.log('msgHandler._cache: ', msgHandler._cache, msgHandler._cbs, duration)\r\n          // console.log('---------------', item)\r\n          // console.groupEnd()\r\n          if (msgHandler._cache && msgHandler._cbs.length) {\r\n            msgHandler._cbs.forEach((cb: any) => {\r\n              setTimeout(() => {\r\n                cb(msgHandler._cache);\r\n              }, duration);\r\n            });\r\n            // msgHandler._cbs = []\r\n          }\r\n\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              const row: any = {\r\n                sid: s12(),\r\n              };\r\n              if (Array.isArray(rowPropList) && rowPropList.length) {\r\n                rowPropList.forEach((rowItem) => {\r\n                  const { prop, value } = rowItem;\r\n                  if (prop) {\r\n                    row[prop] = value;\r\n                  }\r\n                });\r\n              }\r\n\r\n              Promise.all([...syncQueue, ...asyncQueue]).then((res) => {\r\n                resolve(row);\r\n              });\r\n            }, duration);\r\n          });\r\n        };\r\n\r\n        tasks.push(task);\r\n      }\r\n    });\r\n  }\r\n\r\n  return {\r\n    tasks,\r\n  };\r\n};\r\n","<template>\r\n  <t-dialog v-model:visible=\"visible\" dialogClassName=\"extend-action__dialog\" :header=\"title\" closeOnEscKeydown\r\n    :footer=\"false\" :mode=\"mode\" :width=\"width\" destroyOnClose :style=\"styleObject\" @close-btn-click=\"onCloseBtnClick\">\r\n    <component :is=\"dialogContent\" v-bind=\"contentProps\" @ended=\"onEnd\"></component>\r\n  </t-dialog>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport {\r\n  defineProps,\r\n  ref,\r\n  onMounted,\r\n  onBeforeUnmount,\r\n  computed,\r\n  defineAsyncComponent,\r\n} from \"vue\";\r\nimport {\r\n  ExtendActionEventNameMap,\r\n  ExtendAction,\r\n  ExtendActionMessageTypeMap,\r\n} from \"../../types/Event\";\r\n\r\ntype ModeValues = \"full-screen\" | \"modal\" | undefined;\r\ntype WidthValues = Number | String | undefined;\r\n\r\nconst props = defineProps({});\r\n\r\nconst visible = ref(false);\r\nconst eventParams = ref<any>({});\r\n\r\nconst mode = computed(() => {\r\n  return eventParams.value?.mode as ModeValues;\r\n});\r\nconst width = computed(() => {\r\n  return eventParams.value?.width as WidthValues;\r\n});\r\n\r\nconst title = computed(() => {\r\n  return eventParams.value?.title;\r\n});\r\n\r\nconst dialogContent = computed<any>(() => {\r\n  switch (eventParams.value?.action) {\r\n    case ExtendAction.Video:\r\n      return defineAsyncComponent(() => import(\"./content/Video.vue\"));\r\n\r\n    case ExtendAction.ShowMeta2D:\r\n      return defineAsyncComponent(() => import(\"../Opener.vue\"));\r\n    case ExtendAction.ShowText:\r\n      return defineAsyncComponent(() => import(\"./content/Text.vue\"));\r\n  }\r\n  return null;\r\n});\r\n\r\nconst contentProps = computed(() => {\r\n  const { url, text, textColor, ...rest } = eventParams.value || {};\r\n  switch (eventParams.value?.action) {\r\n    case ExtendAction.Video:\r\n      if (!url) {\r\n        console.error(\"video url is required\");\r\n      }\r\n      return {\r\n        src: url,\r\n      };\r\n\r\n    case ExtendAction.ShowMeta2D:\r\n      return {\r\n        url,\r\n      };\r\n    case ExtendAction.ShowText:\r\n      return {\r\n        text,\r\n        textColor,\r\n        height: rest.height,\r\n      }\r\n\r\n\r\n  }\r\n});\r\n\r\nconst dialogHandler = (options: any) => {\r\n  console.log(\"dialog action params: \", options);\r\n  const { params = {}, id } = options;\r\n  if (params && typeof params == \"object\") {\r\n    params.id = id;\r\n    eventParams.value = params;\r\n    // const { action } = params;\r\n  }\r\n\r\n  visible.value =\r\n    (params?.action || options?.action) != ExtendAction.DialogClose;\r\n};\r\n\r\nonMounted(() => {\r\n  meta2d.on(ExtendActionEventNameMap.Dialog, dialogHandler);\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  meta2d.off(ExtendActionEventNameMap.Dialog, dialogHandler);\r\n});\r\n\r\nconst onEnd = (event: any, params: any) => {\r\n  // console.log(\"video end: \", event, params);\r\n  // 通过消息实现联动逻辑\r\n  meta2d.emit(ExtendActionEventNameMap.CustomMessage, {\r\n    type: ExtendActionMessageTypeMap.VideoEnded,\r\n    url: params?.src || params?.url,\r\n    key: eventParams.value?.id,\r\n  });\r\n};\r\n\r\nconst onCloseBtnClick = (event: Event) => {\r\n  if (eventParams.value?.action == ExtendAction.Video) {\r\n    onEnd(event, eventParams.value);\r\n  }\r\n};\r\n\r\n// * 样式定制\r\nconst styleObject = computed(() => {\r\n  return {\r\n    \"--td-bg-color-container\": eventParams.value?.backgroundColor || \"white\",\r\n    \"--td-text-color-primary\": eventParams.value?.titleColor || eventParams.value?.textColor || \"black\",\r\n    \"--td-text-color-secondary\": eventParams.value?.titleColor || eventParams.value?.textColor || \"black\",\r\n\r\n    // 自定义的变量\r\n    \"--extend-dialog-bg-image\": `url(${eventParams.value?.backgroundImageUrl || \"\"\r\n      })`,\r\n    '--extend-dialog-header-margin-top': eventParams.value?.headerMarginTop || '0px',\r\n    '--extend-dialog-content-padding-bottom': eventParams.value?.contentPaddingBottom || '16px',\r\n\r\n    // 控制栏\r\n    \"--vjs-control-bar-background-color\":\r\n      eventParams.value?.controlBarBackgroundColor || \"black\",\r\n    \"--vjs-play-control-color\": eventParams.value?.controlColor || \"white\",\r\n    \"--vjs-play-progress-bar-color\":\r\n      eventParams.value?.controlPlayProgressBarColor || \"white\",\r\n    \"--vjs-load-progress-bar-color\":\r\n      eventParams.value?.controlLoadProgressBarColor || \"#73859f80\",\r\n  };\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n:global(.extend-action__dialog.t-dialog__fullscreen) {\r\n  --td-comp-paddingTB-xl: 0;\r\n  --td-comp-paddingLR-xxl: 0;\r\n}\r\n\r\n:global(.t-dialog__position_fullscreen) {\r\n  height: 100%;\r\n}\r\n\r\n:global(.extend-action__dialog.t-dialog) {\r\n  background-image: var(--extend-dialog-bg-image);\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n:global(.extend-action__dialog.t-dialog .t-dialog__header) {\r\n  margin-top: var(--extend-dialog-header-margin-top);\r\n}\r\n\r\n:global(.extend-action__dialog.t-dialog .t-dialog__body) {\r\n  padding-bottom: var(--extend-dialog-content-padding-bottom);\r\n}\r\n\r\n:deep(.video-js) .vjs-control-bar {\r\n  background-color: var(--vjs-control-bar-background-color) !important;\r\n  color: var(--vjs-play-control-color);\r\n\r\n  .vjs-play-progress {\r\n    background-color: var(--vjs-play-progress-bar-color);\r\n  }\r\n\r\n  .vjs-load-progress {\r\n    background-color: var(--vjs-load-progress-bar-color);\r\n\r\n    >div {\r\n      background: none;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n    <div v-show=\"!!config\" class=\"multiple-data__form\" :style=\"formStyle\">\r\n        <t-form v-if=\"config && config.options\" class=\"demo-form-inline\" layout=\"inline\">\r\n            <t-form-item :label=\"config.label || '分系统选择'\">\r\n                <t-select v-model=\"formInline.data\" clearable :popupProps=\"{\r\n                    attach: '.multiple-data__form',\r\n                }\" style=\"width: 240px;\" @change=\"change\">\r\n                    <t-option v-for=\"item in config.options\" :key=\"item.value\" :label=\"item.label\"\r\n                        :value=\"item.value\" />\r\n                </t-select>\r\n            </t-form-item>\r\n            <t-form-item labelWidth=\"0px\">\r\n                <t-button theme=\"warning\" @click=\"submit\" style=\"margin-right: 16px\">\r\n                    {{ config.submitButtonText || '搜索' }}\r\n                </t-button>\r\n                <t-button theme=\"primary\" @click=\"reset\">\r\n                    {{ config.resetButtonText || '重置' }}\r\n                </t-button>\r\n            </t-form-item>\r\n        </t-form>\r\n    </div>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, } from 'vue'\r\nimport { MessagePlugin } from \"tdesign-vue-next\";\r\n\r\nconst props = defineProps({\r\n    config: {\r\n        type: Object,\r\n        // default: () => ({\r\n        //     label: '',\r\n        //     labelTextColor: '',\r\n        //     options: [],\r\n        //     submitButtonText: '',\r\n        //     resetButtonText: '',\r\n        // })\r\n    }\r\n})\r\n\r\n// 表单所需的样式变量\r\nconst formStyle = computed(() => {\r\n    const { \r\n        labelTextColor = 'white',\r\n        selectBackgroundColor = '',\r\n        selectPopupBackgroundColor = '',\r\n        selectBorderColor = '',\r\n        selectHoverBackgroundColor = '',\r\n        buttonSubmitBackgroundColor = '',\r\n        buttonResetBackgroundColor = '',\r\n    } = props.config || {}\r\n    return {\r\n        // display: props.config ? 'block' : 'none',\r\n        // 表单背景\r\n        backgroundColor: 'transparent',\r\n        '--td-text-color-primary': labelTextColor || 'white',\r\n        '--td-text-color-placeholder': 'white',\r\n\r\n        // 下拉框\r\n        '--td-bg-color-specialcomponent': selectBackgroundColor || '#13345d', // 选择框背景\r\n        '--td-border-level-2-color': selectBorderColor || '#709ec0',\r\n        '--td-brand-color-focus': selectBorderColor || '#709ec0',\r\n        '--td-bg-color-container': selectPopupBackgroundColor || '#26588d', // 选择框弹出层\r\n        '--td-bg-color-container-hover': selectHoverBackgroundColor || '#528bce',\r\n        '--td-brand-color-light': selectHoverBackgroundColor || '#528bce',\r\n        '--td-text-color-disabled': selectBorderColor || '#709ec0', // 空提示文字\r\n\r\n        // 按钮\r\n        '--td-brand-color': buttonResetBackgroundColor || '#204D87',\r\n        '--td-warning-color-active': buttonSubmitBackgroundColor || '#5D5437',\r\n        '--td-warning-color': buttonSubmitBackgroundColor || '#5D5437',\r\n    }\r\n})\r\n\r\nconst formInline = ref({\r\n    data: ''\r\n})\r\n\r\nconst emit = defineEmits(['submit', 'reset', 'change'])\r\n\r\nconst submit = () => {\r\n    if (!props.config?.dataMap) {\r\n        MessagePlugin.warning('数据映射不存在')\r\n        console.error('数据映射不存在, 请在 multipleDataConfig 中配置 dataMap 参数')\r\n        return\r\n    }\r\n    if (!formInline.value.data) {\r\n        reset()\r\n        return\r\n    }\r\n    const data = props.config.dataMap[formInline.value.data] || {}\r\n    // console.log('submit: ', formInline.value.data, data)\r\n    emit('submit', formInline.value.data, data)\r\n\r\n    if (data) {\r\n        // 打开图纸\r\n        meta2d.open(data);\r\n        meta2d.emit(\"clear\");\r\n        meta2d.fitView();\r\n    }\r\n}\r\n\r\nconst reset = () => {\r\n    formInline.value.data = ''\r\n    // console.log('reset: ', formInline.value.data, props.config)\r\n    emit('reset')\r\n    meta2d.clear();\r\n}\r\n\r\nconst change = (value: string) => {\r\n    // console.log('change: ', value)\r\n    emit('change', value)\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n$selectBackgroundColor: #26588d;\r\n$selectBorderColor: #375879;\r\n$selectHoverBackgroundColor: #528bce;\r\n\r\n.multiple-data__form {\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: 9px;\r\n    left: 0px;\r\n    width: 100%;\r\n    height: 50px;\r\n    background: transparent;\r\n}\r\n</style>","<template>\r\n  <div class=\"app-page is--preview\" :style=\"{\r\n    paddingTop: props.multipleDataConfig ? '50px' : '0px',\r\n  }\">\r\n    <MultipleDataForm :config=\"multipleDataConfig\" @submit=\"multipleDataSubmit\" @reset=\"multipleDataReset\">\r\n    </MultipleDataForm>\r\n    <transition name=\"sidebar-transition\" @after-leave=\"afterLeave\" @after-enter=\"afterEnter\">\r\n      <div v-if=\"!isCollapsed\" class=\"left__panel\">\r\n        <t-row justify=\"end\" style=\"cursor: pointer\">\r\n          <t-col :span=\"2\">\r\n            <t-icon name=\"fullscreen\" size=\"large\" @click=\"handleToolClick('fullscreen')\"></t-icon>\r\n          </t-col>\r\n          <t-col :span=\"2\">\r\n            <t-icon name=\"rectangle\" size=\"large\" @click=\"handleToolClick('fit')\"></t-icon>\r\n          </t-col>\r\n          <t-col :span=\"2\">\r\n            <t-icon name=\"refresh\" size=\"large\" @click=\"handleToolClick('refresh')\"></t-icon>\r\n          </t-col>\r\n        </t-row>\r\n        <t-divider></t-divider>\r\n        <t-tree :data=\"treeData\" expandAll activable @click=\"changeData\" />\r\n      </div>\r\n    </transition>\r\n    <View v-bind=\"$attrs\" preview :data=\"data\" :customWsHandler=\"customWsHandler\" @ready=\"emit('ready', $event)\"\r\n      ref=\"childComponentRef\" />\r\n\r\n    <div v-if=\"showRightPanel || tableProps.show\" class=\"right__panel\">\r\n      <slot name=\"right-panel\">\r\n        <t-table v-if=\"tableColumns.length\" ref=\"tableRef\" class=\"table-flex-right\" row-key=\"sid\" :data=\"tableLogData\"\r\n          :columns=\"tableColumns\" active-row-type=\"single\" v-bind=\"tableProps\" :style=\"tableStyle\"></t-table>\r\n      </slot>\r\n    </div>\r\n\r\n    <t-sticky-tool v-if=\"showStickyTool\" type=\"compact\" placement=\"left-bottom\" style=\"z-index: 999\"\r\n      @click=\"handleClick\">\r\n      <template v-for=\"tool in sidebarTools\" :key=\"tool.label\">\r\n        <t-sticky-item v-if=\"tool.show()\" :label=\"tool.label\" :icon=\"renderIcon(tool.icon)\" :popup=\"tool.popup\">\r\n        </t-sticky-item>\r\n      </template>\r\n    </t-sticky-tool>\r\n  </div>\r\n  <extend-dialog></extend-dialog>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport {\r\n  defineEmits,\r\n  defineProps,\r\n  h,\r\n  ref,\r\n  reactive,\r\n  computed,\r\n  onMounted,\r\n} from \"vue\";\r\nimport View from \"../components/View.vue\";\r\nimport { Icon } from \"tdesign-vue-next\";\r\nimport { toggleFullScreen } from \"../utils\";\r\nimport { EventAction } from \"../types/Event.ts\";\r\nimport { deepClone } from \"@meta2d/core\";\r\nimport { useRoute } from \"vue-router\";\r\n// import { usePlayer } from \"../services/usePlayer.ts\";\r\nimport { useLogTable, useScripts } from \"../services/useTable.ts\";\r\nimport { useExtendEvent } from \"../services/useHandlers.ts\";\r\nimport ExtendDialog from \"./dialog/ExtendDialog.vue\";\r\nimport MultipleDataForm from \"./widgets/MultipleDataForm.vue\";\r\n\r\nconst childComponentRef = ref(null);\r\nconst emit = defineEmits([\"ready\"]);\r\nconst props = defineProps({\r\n  data: {\r\n    type: Object,\r\n  },\r\n  projectTreeData: {\r\n    type: Array,\r\n  },\r\n  showStickyTool: {\r\n    type: Boolean,\r\n    default: true,\r\n  },\r\n\r\n  showRightPanel: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  rightPanelWidth: {\r\n    type: Number,\r\n    default: 400,\r\n  },\r\n\r\n  // 内置的多系统切换下拉框\r\n  // * 不设置则不启用\r\n  multipleDataConfig: {\r\n    type: Object || undefined,\r\n    // default: { label: string, options: [] },\r\n  },\r\n\r\n  // * 后台更新模式，用于一个项目包含多张电路的情形\r\n  enableBackgroundUpdate: {\r\n    type: Boolean,\r\n    default: true,\r\n  },\r\n});\r\n\r\n// * 侧边工具栏\r\nconst isCollapsed = ref(true);\r\nconst sidebarTools = reactive([\r\n  {\r\n    label: \"fullscreen\",\r\n    icon: \"fullscreen\",\r\n    popup: \"全屏\",\r\n    show: () => {\r\n      return isCollapsed.value;\r\n    },\r\n  },\r\n  {\r\n    label: \"fit\",\r\n    icon: \"rectangle\",\r\n    popup: \"适应窗口\",\r\n    show: () => {\r\n      return isCollapsed.value;\r\n    },\r\n  },\r\n  {\r\n    label: \"expand\",\r\n    icon: \"menu-fold\",\r\n    popup: \"展开侧边栏\",\r\n    show: () => {\r\n      return isCollapsed.value;\r\n    },\r\n  },\r\n  {\r\n    label: \"collapse\",\r\n    icon: \"menu-unfold\",\r\n    popup: \"收起侧边栏\",\r\n    show: () => {\r\n      return !isCollapsed.value;\r\n    },\r\n  },\r\n]);\r\n\r\nconst isInElectron = () => {\r\n  return globalThis.navigator.userAgent.includes(\"Electron\");\r\n};\r\nconst _electronArgvData = ref([]);\r\nconst tableRef = ref(null);\r\n\r\nconst route = useRoute();\r\n\r\nconst tableColumns = ref([]);\r\nconst tableLogData = ref<Array<any>>([]);\r\nconst tableProps = ref({});\r\nconst tableStyle = ref({});\r\nconst clearTasksQueue = ref<any[]>([]);\r\n\r\nconst applyTable = (res: any) => {\r\n  const {\r\n    columns: _columns,\r\n    tableProps: _tableProps,\r\n    tableStyle: _tableStyle,\r\n  } = useLogTable(res);\r\n  const { tasks } = useScripts(res, globalThis.meta2d);\r\n  tableColumns.value = _columns;\r\n  tableProps.value = _tableProps;\r\n  tableStyle.value = _tableStyle;\r\n\r\n  setTimeout(async () => {\r\n    for (const task of tasks) {\r\n      const r = await task();\r\n      if (r && tasks.length) {\r\n        tableLogData.value.push(r);\r\n      }\r\n    }\r\n  });\r\n\r\n  return function clearTasks() {\r\n    // tasks.length = 0;\r\n  }\r\n};\r\n\r\nconst multipleDataSubmit = (value: string, data: any) => {\r\n   if (data) {\r\n    multipleDataReset()\r\n    // 上一个执行中的 task 如何清空？\r\n    applyStateSet();\r\n    const clearTask = applyTable(data);\r\n    clearTasksQueue.value.push(clearTask);\r\n  }\r\n\r\n};\r\n\r\nconst multipleDataReset = () => {\r\n  if (clearTasksQueue.value.length > 0) {\r\n    for (const task of clearTasksQueue.value) {\r\n      task();\r\n    }\r\n    clearTasksQueue.value.length = 0;\r\n  }\r\n  tableLogData.value = [];\r\n}\r\n\r\n\r\nconst { extendOn } = useExtendEvent();\r\n\r\nonMounted(() => {\r\n  if (isInElectron()) {\r\n    if (globalThis.versions?.projectListSync) {\r\n      globalThis.versions\r\n        .projectListSync(\"list.json\")\r\n        .then((res) => {\r\n          console.log(\"projectListSync res: \", res);\r\n          if (Array.isArray(res)) {\r\n            _electronArgvData.value = res;\r\n            if (res.length > 0) {\r\n              if (res[0].children?.length > 0) {\r\n                const first = res[0].children[0];\r\n                if (first.json) {\r\n                  const res = deepClone(first.json);\r\n                  res.locked = 1;\r\n                  if (res.lockState) {\r\n                    res.locked = res.lockState;\r\n                  }\r\n                  meta2d.open(res);\r\n                  // meta2d.emit(\"clear\");\r\n                  meta2d.fitView();\r\n                  applyStateSet();\r\n                  localStorage.setItem(\"meta2d\", JSON.stringify(first.json));\r\n                  if (childComponentRef.value) {\r\n                    childComponentRef.value.Sendrequestsyn();\r\n                    childComponentRef.value.reconnectWebSocket(res); // 同步一下电路状态\r\n                  }\r\n                  applyTable(res);\r\n                }\r\n              }\r\n            } else {\r\n              meta2d.clear();\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"projectListSync err: \", err);\r\n          meta2d.clear();\r\n        });\r\n    } else {\r\n      // meta2d.clear();\r\n    }\r\n  } else {\r\n    try {\r\n      const filePath = route?.query?.[\"open-file\"];\r\n      if (filePath) {\r\n        fetch(filePath as string)\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            // console.log('open file: ', res)\r\n            res.locked = 1;\r\n            if (res.lockState) {\r\n              res.locked = res.lockState;\r\n            }\r\n            meta2d.open(res);\r\n            meta2d.emit(\"clear\");\r\n            meta2d.fitView();\r\n            applyStateSet();\r\n            // -----\r\n            applyTable(res);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"open file error: \", error);\r\n    }\r\n  }\r\n  meta2d?.resize();\r\n\r\n  // * 扩展事件\r\n  extendOn();\r\n});\r\n\r\nconst treeData = computed(() => {\r\n  if (isInElectron()) {\r\n    return _electronArgvData.value;\r\n  }\r\n\r\n  if (props.projectTreeData) return props.projectTreeData;\r\n\r\n  if (globalThis.__meta2d_env__?.projectTreeData) {\r\n    return globalThis.__meta2d_env__.projectTreeData;\r\n  }\r\n  // ! 未提供目录数据，生成默认目录\r\n  let data: any = localStorage.getItem(\"meta2d\");\r\n  if (data) {\r\n    const tmp = JSON.parse(data);\r\n    return [\r\n      {\r\n        label: \"默认\",\r\n        value: \"\",\r\n        children: [\r\n          {\r\n            label: `meta2d.${tmp.template}`,\r\n            value: \"\",\r\n          },\r\n        ],\r\n      },\r\n    ];\r\n  }\r\n  return [];\r\n});\r\n\r\nconst renderIcon = (icon: string) => {\r\n  return () =>\r\n    h(Icon, {\r\n      name: icon,\r\n    });\r\n};\r\n\r\nconst handleToolClick = (code: string) => {\r\n  if (code == \"fit\") {\r\n    meta2d.fitView(true, 20);\r\n  } else if (code == \"fullscreen\") {\r\n    toggleFullScreen();\r\n  } else if (code == \"refresh\") {\r\n    console.log(\"refresh同步一下数据\");\r\n    if (childComponentRef.value) {\r\n      childComponentRef.value.Sendrequestsyn();\r\n    }\r\n  }\r\n};\r\n\r\nconst handleClick = ({ e, item }: { e: MouseEvent; item: any }) => {\r\n  if (item.label == \"expand\") {\r\n    isCollapsed.value = false;\r\n  } else if (item.label == \"collapse\") {\r\n    isCollapsed.value = true;\r\n  } else {\r\n    handleToolClick(item.label);\r\n  }\r\n};\r\n\r\nconst changeData = ({ e, node }: { e: MouseEvent; node: any }) => {\r\n  console.log(\"change node=== \", node);\r\n\r\n  if (isInElectron()) {\r\n    if (node.data.json) {\r\n      const res = deepClone(node.data.json);\r\n      res.locked = 1;\r\n      meta2d.open(res);\r\n      meta2d.emit(\"clear\");\r\n      meta2d.fitView();\r\n      applyStateSet();\r\n      if (childComponentRef.value) {\r\n        childComponentRef.value.reconnectWebSocket(node.data.json);\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  if (node.value) {\r\n    fetch(node.value)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res) {\r\n          res.locked = 1;\r\n          meta2d.open(res);\r\n          meta2d.emit(\"clear\");\r\n          meta2d.fitView();\r\n          applyStateSet();\r\n          // 程序内先不做处理\r\n          // if (childComponentRef.value) {\r\n          //   childComponentRef.value.reconnectWebSocket(node.data.json);\r\n          // }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err: \", err);\r\n      });\r\n  }\r\n};\r\nconst afterEnter = () => {\r\n  meta2d?.resize();\r\n};\r\nconst afterLeave = () => {\r\n  meta2d?.resize();\r\n};\r\n\r\n// * 控制逻辑，页面切换\r\n// const {\r\n//   playList,\r\n//   currentStepData,\r\n//   prev,\r\n//   next,\r\n//   apply,\r\n//   play,\r\n//   pause,\r\n//   stop,\r\n//   replay,\r\n// } = usePlayer();\r\n// playList.value = [];\r\n\r\n// * ws 消息处理\r\nlet customWsHandler;\r\ntype ResponseMsgType = {\r\n  busName: string;\r\n  msg: any;\r\n  msgType: number;\r\n};\r\n\r\ntype PenState = {\r\n  action: number;\r\n  id?: string;\r\n  tag?: string;\r\n  [t: string]: any;\r\n};\r\n\r\nlet penStateSet: any[] = [];\r\nconst combineState = (msg: PenState) => {\r\n  // console.log(\"penStateSet==== \", penStateSet);\r\n  const state = penStateSet.find((s) => s.Name === msg.Name);\r\n  // console.log(\"state==== \", state);\r\n\r\n  if (state) {\r\n    const { id, tag, ...rest } = msg;\r\n    Object.assign(state, rest);\r\n    return;\r\n  } else {\r\n    penStateSet.push(msg);\r\n  }\r\n};\r\n\r\nconst applyState = (msg: PenState) => {\r\n  if (!msg) return;\r\n  const { id, tag, action, value, ...rest } = msg;\r\n  const _props = value || rest;\r\n  const pens = meta2d.find(id || tag || rest.Name);\r\n  // * 暂时包含四种\r\n  switch (action) {\r\n    case EventAction.StartAnimate:\r\n      meta2d.startAnimate(pens);\r\n      break;\r\n    case EventAction.PauseAnimate:\r\n      meta2d.pauseAnimate(pens);\r\n      break;\r\n    case EventAction.StopAnimate:\r\n      meta2d.stopAnimate(pens);\r\n      break;\r\n    // case EventAction.SetProps:\r\n    //   break;\r\n\r\n    default:\r\n      pens.forEach((pen: any) => {\r\n        _props.id = pen.id;\r\n        // showChild 永远都是打开是0 关闭是1\r\n        if (\"showChild\" in pen && pen.Ecomponents?.length > 0) {\r\n          //  v10: 是触点数量\r\n          // v12：最上面触点的值\r\n          // v14：第二个触点对应的值\r\n          // 以此类推\r\n          //  多路开关怎么映射 本地开关的0 1 2 值\r\n\r\n          // 获取开关状态和值\r\n          const [switchState, switchValue] = pen.Ecomponents;\r\n          if (switchState === \"off\" || switchState === \"on\") {\r\n            const needReverse =\r\n              (switchState === \"off\" && switchValue === \"1\") ||\r\n              (switchState === \"on\" && switchValue === \"0\");\r\n            // 根据是否需要反转来设置showChild\r\n            let arr;\r\n            if (needReverse) {\r\n              arr = [1, 0];\r\n            } else {\r\n              arr = [0, 1];\r\n            }\r\n            _props.showChild = arr.indexOf(msg.State);\r\n          } else {\r\n            // Ecomponents去掉数组第一个值 赋值给一个新的对象components\r\n            const components = pen.Ecomponents.slice(1);\r\n            if (switchState >= 3) {\r\n              // 找到数组里msg.State的位置下标\r\n              // components = ['1', '0', '2', '1'] msg.State = 1 找到第一次出现1的下标\r\n              const index = components.indexOf(msg.State.toString());\r\n              // 设置showChild\r\n              _props.showChild = index;\r\n            }\r\n          }\r\n        }\r\n        //颜色color 是否有电 1有电显示红色 2无电蓝色\r\n\r\n        if (msg.Value == 1) {\r\n          _props.color = \"rgb(255, 0, 0)\"; //线条的颜色\r\n          _props.lineWidth = 2; //线条的宽度\r\n          _props.animateColor = \"rgb(255, 0, 0)\"; //流动的颜色\r\n          meta2d.startAnimate([pen]);\r\n        } else {\r\n          meta2d.stopAnimate([pen]);\r\n          _props.color = \"rgb(0, 0, 128)\"; //线条的颜色\r\n          _props.lineWidth = 2; //线条的宽度\r\n        }\r\n        console.log(\"_props: \", _props);\r\n        meta2d.setValue(_props, { render: false });\r\n      });\r\n\r\n      break;\r\n  }\r\n};\r\n\r\nconst applyStateSet = () => {\r\n  if (!meta2d) return;\r\n  penStateSet.forEach((state: PenState) => {\r\n    console.log(\"state: \", state);\r\n    applyState(state);\r\n  });\r\n};\r\n\r\nif (props.enableBackgroundUpdate) {\r\n  // 针对所有图纸的状态消息\r\n  customWsHandler = (data: ResponseMsgType) => {\r\n    const { busName, msg, msgType } = data || {};\r\n\r\n    console.log(\"ws msg: \", data);\r\n\r\n    // 更新处理\r\n    if (msg) {\r\n      // * 先认为是符合内置属性集合的标准 Meta2D 对象\r\n      const { id, tag, action, value, ...rest } = msg;\r\n      if (!rest) {\r\n        console.warn(\"无法识别目标图元：\", data);\r\n        return;\r\n      }\r\n\r\n      combineState(msg);\r\n\r\n      // -- 当前打开图元\r\n      const pens = meta2d.find(id || tag || rest.Name);\r\n      if (pens.length) {\r\n        applyState(msg);\r\n        meta2d.render();\r\n      } else {\r\n        // 未加载的图纸\r\n        // 暂定在打开时从状态集合全量更新一次\r\n        // applyStateSet();\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nconst cssRightPanelWidth = computed(() => {\r\n  return `${props.rightPanelWidth}px`;\r\n});\r\n// * 日志表格\r\nlet dataJson: any = localStorage.getItem(\"meta2d\");\r\nlet meta2dData: any;\r\ntry {\r\n  meta2dData = JSON.parse(dataJson);\r\n  if (!isInElectron() && !route?.query?.[\"open-file\"]) {\r\n    applyTable(props.data || meta2dData);\r\n  }\r\n} catch (error) { }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.sidebar-transition-enter-active,\r\n.sidebar-transition-leave-active {\r\n  transition: transform 0.3s ease, opacity 0.3s ease;\r\n}\r\n\r\n.sidebar-transition-enter,\r\n.sidebar-transition-leave-to {\r\n  transform: translateX(-250px);\r\n  opacity: 0;\r\n}\r\n\r\n.sidebar-transition-enter-to {\r\n  transform: translateX(0);\r\n  opacity: 1;\r\n}\r\n\r\n.app-page {\r\n  display: flex;\r\n  height: 100%;\r\n  min-height: 400px;\r\n  position: relative;\r\n\r\n  &.is--full-height {\r\n    height: 100vh;\r\n  }\r\n\r\n  .left__panel {\r\n    width: 250px;\r\n    height: 100%;\r\n    border-right: 2px solid #f5f5f5;\r\n    padding: 20px;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  .right__panel {\r\n    width: v-bind(cssRightPanelWidth);\r\n    max-width: 50%;\r\n    height: 100%;\r\n    padding: 0;\r\n    overflow-y: auto;\r\n    z-index: 999;\r\n    margin-left: 10px;\r\n\r\n    .t-table {\r\n      background-image: var(--table-background-image-url);\r\n      height: 100%;\r\n      background-repeat: no-repeat;\r\n      background-size: 100% 100%;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"names":["useLogTable","metaData","presetScriptsConfig","columns","scripts","style","tableProps","tableLogData","ref","tableStyle","evenRowBackgroundColor","oddRowBackgroundColor","textColor","backgroundImageUrl","executeAnimate","type","target","meta2d","fnMap","pens","tag","res","fnName","pen","control","createPathAnimation","useScripts","meta2dInstance","tasks","item","index","handlers","duration","rowPropList","msgHandler","params","cb","ExtendActionEventNameMap","fnQueue","syncQueue","asyncQueue","handler","action","value","where","executer","EventAction","ExtendAction","callExtendAction","ExtendEventSource","id","animateReverse","ExtendActionMessageTypeMap","p","resolve","_msgHandler","key","task","row","s12","rowItem","prop","visible","eventParams","mode","computed","_a","width","title","dialogContent","defineAsyncComponent","contentProps","url","text","rest","dialogHandler","options","onMounted","onBeforeUnmount","onEnd","event","onCloseBtnClick","styleObject","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","props","__props","formStyle","labelTextColor","selectBackgroundColor","selectPopupBackgroundColor","selectBorderColor","selectHoverBackgroundColor","buttonSubmitBackgroundColor","buttonResetBackgroundColor","formInline","emit","__emit","submit","MessagePlugin","reset","data","change","childComponentRef","isCollapsed","sidebarTools","reactive","isInElectron","_electronArgvData","tableRef","route","useRoute","tableColumns","clearTasksQueue","applyTable","_columns","_tableProps","_tableStyle","r","multipleDataSubmit","multipleDataReset","applyStateSet","clearTask","extendOn","useExtendEvent","first","deepClone","err","filePath","error","treeData","renderIcon","icon","h","Icon","handleToolClick","code","toggleFullScreen","handleClick","e","changeData","node","afterEnter","afterLeave","customWsHandler","penStateSet","combineState","msg","state","s","applyState","_props","switchState","switchValue","needReverse","arr","components","busName","msgType","cssRightPanelWidth","dataJson","meta2dData"],"mappings":"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"}