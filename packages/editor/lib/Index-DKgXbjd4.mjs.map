{"version":3,"file":"Index-DKgXbjd4.mjs","sources":["../../../../../favicon.ico","../../../node_modules/.pnpm/vue-router@4.4.5_vue@3.5.13_typescript@5.7.2_/node_modules/vue-router/dist/vue-router.mjs","../../../node_modules/.pnpm/file-saver@2.0.5/node_modules/file-saver/dist/FileSaver.min.js","../src/components/Header.vue","../../utils/src/lineCross.ts","../src/components/PropsTab.vue","../src/components/CodeEditor.vue","../src/components/MessageHandlers.vue","../src/components/FileProps.vue","../src/utils/penFrames.ts","../src/components/PropEditor.vue","../src/components/EventEditor.vue","../src/components/PenProps.vue","../src/components/PensProps.vue","../src/components/Structure.vue","../src/components/Props.vue","../src/utils/graphicConfig.ts","../src/components/Graphics.vue","../src/components/GraphicsManager.vue","../src/views/Index.vue"],"sourcesContent":["export default \"__VITE_PUBLIC_ASSET__b1803648__\"","/*!\n  * vue-router v4.4.5\n  * (c) 2024 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, watchEffect, defineComponent, reactive, h, provide, ref, watch, shallowRef, shallowReactive, nextTick } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nconst isBrowser = typeof document !== 'undefined';\n\n/**\n * Allows differentiating lazy components from functional components and vue-class-component\n * @internal\n *\n * @param component\n */\nfunction isRouteComponent(component) {\n    return (typeof component === 'object' ||\n        'displayName' in component ||\n        'props' in component ||\n        '__vccOpts' in component);\n}\nfunction isESModule(obj) {\n    return (obj.__esModule ||\n        obj[Symbol.toStringTag] === 'Module' ||\n        // support CF with dynamic imports that do not\n        // add the Module string tag\n        (obj.default && isRouteComponent(obj.default)));\n}\nconst assign = Object.assign;\nfunction applyToParams(fn, params) {\n    const newParams = {};\n    for (const key in params) {\n        const value = params[key];\n        newParams[key] = isArray(value)\n            ? value.map(fn)\n            : fn(value);\n    }\n    return newParams;\n}\nconst noop = () => { };\n/**\n * Typesafe alternative to Array.isArray\n * https://github.com/microsoft/TypeScript/pull/48228\n */\nconst isArray = Array.isArray;\n\nfunction warn(msg) {\n    // avoid using ...args as it breaks in older Edge builds\n    const args = Array.from(arguments).slice(1);\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\n}\n\n/**\n * Encoding Rules (␣ = Space)\n * - Path: ␣ \" < > # ? { }\n * - Query: ␣ \" < > # & =\n * - Hash: ␣ \" < > `\n *\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\n * defines some extra characters to be encoded. Most browsers do not encode them\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\n * also encode `!'()*`. Leaving un-encoded only ASCII alphanumeric(`a-zA-Z0-9`)\n * plus `-._~`. This extra safety should be applied to query by patching the\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\n * encoded everywhere because some browsers like FF encode it when directly\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\n */\n// const EXTRA_RESERVED_RE = /[!'()*]/g\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\nconst HASH_RE = /#/g; // %23\nconst AMPERSAND_RE = /&/g; // %26\nconst SLASH_RE = /\\//g; // %2F\nconst EQUAL_RE = /=/g; // %3D\nconst IM_RE = /\\?/g; // %3F\nconst PLUS_RE = /\\+/g; // %2B\n/**\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\n * seems to be less flexible than not doing so and I can't find out the legacy\n * systems requiring this for regular requests like text/html. In the standard,\n * the encoding of the plus character is only mentioned for\n * application/x-www-form-urlencoded\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\n * leave the plus character as is in queries. To be more flexible, we allow the\n * plus character on the query, but it can also be manually encoded by the user.\n *\n * Resources:\n * - https://url.spec.whatwg.org/#urlencoded-parsing\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\n */\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\nconst ENC_CARET_RE = /%5E/g; // ^\nconst ENC_BACKTICK_RE = /%60/g; // `\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\nconst ENC_PIPE_RE = /%7C/g; // |\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\nconst ENC_SPACE_RE = /%20/g; // }\n/**\n * Encode characters that need to be encoded on the path, search and hash\n * sections of the URL.\n *\n * @internal\n * @param text - string to encode\n * @returns encoded string\n */\nfunction commonEncode(text) {\n    return encodeURI('' + text)\n        .replace(ENC_PIPE_RE, '|')\n        .replace(ENC_BRACKET_OPEN_RE, '[')\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\n}\n/**\n * Encode characters that need to be encoded on the hash section of the URL.\n *\n * @param text - string to encode\n * @returns encoded string\n */\nfunction encodeHash(text) {\n    return commonEncode(text)\n        .replace(ENC_CURLY_OPEN_RE, '{')\n        .replace(ENC_CURLY_CLOSE_RE, '}')\n        .replace(ENC_CARET_RE, '^');\n}\n/**\n * Encode characters that need to be encoded query values on the query\n * section of the URL.\n *\n * @param text - string to encode\n * @returns encoded string\n */\nfunction encodeQueryValue(text) {\n    return (commonEncode(text)\n        // Encode the space as +, encode the + to differentiate it from the space\n        .replace(PLUS_RE, '%2B')\n        .replace(ENC_SPACE_RE, '+')\n        .replace(HASH_RE, '%23')\n        .replace(AMPERSAND_RE, '%26')\n        .replace(ENC_BACKTICK_RE, '`')\n        .replace(ENC_CURLY_OPEN_RE, '{')\n        .replace(ENC_CURLY_CLOSE_RE, '}')\n        .replace(ENC_CARET_RE, '^'));\n}\n/**\n * Like `encodeQueryValue` but also encodes the `=` character.\n *\n * @param text - string to encode\n */\nfunction encodeQueryKey(text) {\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\n}\n/**\n * Encode characters that need to be encoded on the path section of the URL.\n *\n * @param text - string to encode\n * @returns encoded string\n */\nfunction encodePath(text) {\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\n}\n/**\n * Encode characters that need to be encoded on the path section of the URL as a\n * param. This function encodes everything {@link encodePath} does plus the\n * slash (`/`) character. If `text` is `null` or `undefined`, returns an empty\n * string instead.\n *\n * @param text - string to encode\n * @returns encoded string\n */\nfunction encodeParam(text) {\n    return text == null ? '' : encodePath(text).replace(SLASH_RE, '%2F');\n}\n/**\n * Decode text using `decodeURIComponent`. Returns the original text if it\n * fails.\n *\n * @param text - string to decode\n * @returns decoded string\n */\nfunction decode(text) {\n    try {\n        return decodeURIComponent('' + text);\n    }\n    catch (err) {\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\n    }\n    return '' + text;\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\n/**\n * Transforms a URI into a normalized history location\n *\n * @param parseQuery\n * @param location - URI to normalize\n * @param currentLocation - current absolute location. Allows resolving relative\n * paths. Must start with `/`. Defaults to `/`\n * @returns a normalized history location\n */\nfunction parseURL(parseQuery, location, currentLocation = '/') {\n    let path, query = {}, searchString = '', hash = '';\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\n    // TODO: move to new URL()\n    const hashPos = location.indexOf('#');\n    let searchPos = location.indexOf('?');\n    // the hash appears before the search, so it's not part of the search string\n    if (hashPos < searchPos && hashPos >= 0) {\n        searchPos = -1;\n    }\n    if (searchPos > -1) {\n        path = location.slice(0, searchPos);\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\n        query = parseQuery(searchString);\n    }\n    if (hashPos > -1) {\n        path = path || location.slice(0, hashPos);\n        // keep the # character\n        hash = location.slice(hashPos, location.length);\n    }\n    // no search and no query\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\n    // empty path means a relative query or hash `?foo=f`, `#thing`\n    return {\n        fullPath: path + (searchString && '?') + searchString + hash,\n        path,\n        query,\n        hash: decode(hash),\n    };\n}\n/**\n * Stringifies a URL object\n *\n * @param stringifyQuery\n * @param location\n */\nfunction stringifyURL(stringifyQuery, location) {\n    const query = location.query ? stringifyQuery(location.query) : '';\n    return location.path + (query && '?') + query + (location.hash || '');\n}\n/**\n * Strips off the base from the beginning of a location.pathname in a non-case-sensitive way.\n *\n * @param pathname - location.pathname\n * @param base - base to strip off\n */\nfunction stripBase(pathname, base) {\n    // no base or base is not found at the beginning\n    if (!base || !pathname.toLowerCase().startsWith(base.toLowerCase()))\n        return pathname;\n    return pathname.slice(base.length) || '/';\n}\n/**\n * Checks if two RouteLocation are equal. This means that both locations are\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\n * parameters and `hash` are the same\n *\n * @param stringifyQuery - A function that takes a query object of type LocationQueryRaw and returns a string representation of it.\n * @param a - first {@link RouteLocation}\n * @param b - second {@link RouteLocation}\n */\nfunction isSameRouteLocation(stringifyQuery, a, b) {\n    const aLastIndex = a.matched.length - 1;\n    const bLastIndex = b.matched.length - 1;\n    return (aLastIndex > -1 &&\n        aLastIndex === bLastIndex &&\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\n        isSameRouteLocationParams(a.params, b.params) &&\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\n        a.hash === b.hash);\n}\n/**\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\n * considered equal to the `RouteRecord` they are aliasing.\n *\n * @param a - first {@link RouteRecord}\n * @param b - second {@link RouteRecord}\n */\nfunction isSameRouteRecord(a, b) {\n    // since the original record has an undefined value for aliasOf\n    // but all aliases point to the original record, this will always compare\n    // the original record\n    return (a.aliasOf || a) === (b.aliasOf || b);\n}\nfunction isSameRouteLocationParams(a, b) {\n    if (Object.keys(a).length !== Object.keys(b).length)\n        return false;\n    for (const key in a) {\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\n            return false;\n    }\n    return true;\n}\nfunction isSameRouteLocationParamsValue(a, b) {\n    return isArray(a)\n        ? isEquivalentArray(a, b)\n        : isArray(b)\n            ? isEquivalentArray(b, a)\n            : a === b;\n}\n/**\n * Check if two arrays are the same or if an array with one single entry is the\n * same as another primitive value. Used to check query and parameters\n *\n * @param a - array of values\n * @param b - array of values or a single value\n */\nfunction isEquivalentArray(a, b) {\n    return isArray(b)\n        ? a.length === b.length && a.every((value, i) => value === b[i])\n        : a.length === 1 && a[0] === b;\n}\n/**\n * Resolves a relative path that starts with `.`.\n *\n * @param to - path location we are resolving\n * @param from - currentLocation.path, should start with `/`\n */\nfunction resolveRelativePath(to, from) {\n    if (to.startsWith('/'))\n        return to;\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\n        return to;\n    }\n    if (!to)\n        return from;\n    const fromSegments = from.split('/');\n    const toSegments = to.split('/');\n    const lastToSegment = toSegments[toSegments.length - 1];\n    // make . and ./ the same (../ === .., ../../ === ../..)\n    // this is the same behavior as new URL()\n    if (lastToSegment === '..' || lastToSegment === '.') {\n        toSegments.push('');\n    }\n    let position = fromSegments.length - 1;\n    let toPosition;\n    let segment;\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\n        segment = toSegments[toPosition];\n        // we stay on the same position\n        if (segment === '.')\n            continue;\n        // go up in the from array\n        if (segment === '..') {\n            // we can't go below zero, but we still need to increment toPosition\n            if (position > 1)\n                position--;\n            // continue\n        }\n        // we reached a non-relative path, we stop here\n        else\n            break;\n    }\n    return (fromSegments.slice(0, position).join('/') +\n        '/' +\n        toSegments.slice(toPosition).join('/'));\n}\n/**\n * Initial route location where the router is. Can be used in navigation guards\n * to differentiate the initial navigation.\n *\n * @example\n * ```js\n * import { START_LOCATION } from 'vue-router'\n *\n * router.beforeEach((to, from) => {\n *   if (from === START_LOCATION) {\n *     // initial navigation\n *   }\n * })\n * ```\n */\nconst START_LOCATION_NORMALIZED = {\n    path: '/',\n    // TODO: could we use a symbol in the future?\n    name: undefined,\n    params: {},\n    query: {},\n    hash: '',\n    fullPath: '/',\n    matched: [],\n    meta: {},\n    redirectedFrom: undefined,\n};\n\nvar NavigationType;\n(function (NavigationType) {\n    NavigationType[\"pop\"] = \"pop\";\n    NavigationType[\"push\"] = \"push\";\n})(NavigationType || (NavigationType = {}));\nvar NavigationDirection;\n(function (NavigationDirection) {\n    NavigationDirection[\"back\"] = \"back\";\n    NavigationDirection[\"forward\"] = \"forward\";\n    NavigationDirection[\"unknown\"] = \"\";\n})(NavigationDirection || (NavigationDirection = {}));\n/**\n * Starting location for Histories\n */\nconst START = '';\n// Generic utils\n/**\n * Normalizes a base by removing any trailing slash and reading the base tag if\n * present.\n *\n * @param base - base to normalize\n */\nfunction normalizeBase(base) {\n    if (!base) {\n        if (isBrowser) {\n            // respect <base> tag\n            const baseEl = document.querySelector('base');\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\n            // strip full URL origin\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\n        }\n        else {\n            base = '/';\n        }\n    }\n    // ensure leading slash when it was removed by the regex above avoid leading\n    // slash with hash because the file could be read from the disk like file://\n    // and the leading slash would cause problems\n    if (base[0] !== '/' && base[0] !== '#')\n        base = '/' + base;\n    // remove the trailing slash so all other method can just do `base + fullPath`\n    // to build an href\n    return removeTrailingSlash(base);\n}\n// remove any character before the hash\nconst BEFORE_HASH_RE = /^[^#]+#/;\nfunction createHref(base, location) {\n    return base.replace(BEFORE_HASH_RE, '#') + location;\n}\n\nfunction getElementPosition(el, offset) {\n    const docRect = document.documentElement.getBoundingClientRect();\n    const elRect = el.getBoundingClientRect();\n    return {\n        behavior: offset.behavior,\n        left: elRect.left - docRect.left - (offset.left || 0),\n        top: elRect.top - docRect.top - (offset.top || 0),\n    };\n}\nconst computeScrollPosition = () => ({\n    left: window.scrollX,\n    top: window.scrollY,\n});\nfunction scrollToPosition(position) {\n    let scrollToOptions;\n    if ('el' in position) {\n        const positionEl = position.el;\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\n        /**\n         * `id`s can accept pretty much any characters, including CSS combinators\n         * like `>` or `~`. It's still possible to retrieve elements using\n         * `document.getElementById('~')` but it needs to be escaped when using\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\n         * requirements for `id`s are them to be unique on the page and to not be\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\n         * be properly escaped for it to work with `querySelector`. We could check\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\n         * would make things inconsistent since they are valid characters for an\n         * `id` but would need to be escaped when using `querySelector`, breaking\n         * their usage and ending up in no selector returned. Selectors need to be\n         * escaped:\n         *\n         * - `#1-thing` becomes `#\\31 -thing`\n         * - `#with~symbols` becomes `#with\\\\~symbols`\n         *\n         * - More information about  the topic can be found at\n         *   https://mathiasbynens.be/notes/html5-id-class.\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\n         */\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\n                try {\n                    const foundEl = document.querySelector(position.el);\n                    if (isIdSelector && foundEl) {\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\n                        // return to avoid other warnings\n                        return;\n                    }\n                }\n                catch (err) {\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\n                    // return to avoid other warnings\n                    return;\n                }\n            }\n        }\n        const el = typeof positionEl === 'string'\n            ? isIdSelector\n                ? document.getElementById(positionEl.slice(1))\n                : document.querySelector(positionEl)\n            : positionEl;\n        if (!el) {\n            (process.env.NODE_ENV !== 'production') &&\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\n            return;\n        }\n        scrollToOptions = getElementPosition(el, position);\n    }\n    else {\n        scrollToOptions = position;\n    }\n    if ('scrollBehavior' in document.documentElement.style)\n        window.scrollTo(scrollToOptions);\n    else {\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.scrollX, scrollToOptions.top != null ? scrollToOptions.top : window.scrollY);\n    }\n}\nfunction getScrollKey(path, delta) {\n    const position = history.state ? history.state.position - delta : -1;\n    return position + path;\n}\nconst scrollPositions = new Map();\nfunction saveScrollPosition(key, scrollPosition) {\n    scrollPositions.set(key, scrollPosition);\n}\nfunction getSavedScrollPosition(key) {\n    const scroll = scrollPositions.get(key);\n    // consume it so it's not used again\n    scrollPositions.delete(key);\n    return scroll;\n}\n// TODO: RFC about how to save scroll position\n/**\n * ScrollBehavior instance used by the router to compute and restore the scroll\n * position when navigating.\n */\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\n//   // returns a scroll position that can be saved in history\n//   compute(): ScrollPositionEntry\n//   // can take an extended ScrollPositionEntry\n//   scroll(position: ScrollPosition): void\n// }\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\n//   compute: computeScroll,\n//   scroll: scrollToPosition,\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\n/**\n * Creates a normalized history location from a window.location object\n * @param base - The base path\n * @param location - The window.location object\n */\nfunction createCurrentLocation(base, location) {\n    const { pathname, search, hash } = location;\n    // allows hash bases like #, /#, #/, #!, #!/, /#!/, or even /folder#end\n    const hashPos = base.indexOf('#');\n    if (hashPos > -1) {\n        let slicePos = hash.includes(base.slice(hashPos))\n            ? base.slice(hashPos).length\n            : 1;\n        let pathFromHash = hash.slice(slicePos);\n        // prepend the starting slash to hash so the url starts with /#\n        if (pathFromHash[0] !== '/')\n            pathFromHash = '/' + pathFromHash;\n        return stripBase(pathFromHash, '');\n    }\n    const path = stripBase(pathname, base);\n    return path + search + hash;\n}\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\n    let listeners = [];\n    let teardowns = [];\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\n    // can trigger twice\n    let pauseState = null;\n    const popStateHandler = ({ state, }) => {\n        const to = createCurrentLocation(base, location);\n        const from = currentLocation.value;\n        const fromState = historyState.value;\n        let delta = 0;\n        if (state) {\n            currentLocation.value = to;\n            historyState.value = state;\n            // ignore the popstate and reset the pauseState\n            if (pauseState && pauseState === from) {\n                pauseState = null;\n                return;\n            }\n            delta = fromState ? state.position - fromState.position : 0;\n        }\n        else {\n            replace(to);\n        }\n        // Here we could also revert the navigation by calling history.go(-delta)\n        // this listener will have to be adapted to not trigger again and to wait for the url\n        // to be updated before triggering the listeners. Some kind of validation function would also\n        // need to be passed to the listeners so the navigation can be accepted\n        // call all listeners\n        listeners.forEach(listener => {\n            listener(currentLocation.value, from, {\n                delta,\n                type: NavigationType.pop,\n                direction: delta\n                    ? delta > 0\n                        ? NavigationDirection.forward\n                        : NavigationDirection.back\n                    : NavigationDirection.unknown,\n            });\n        });\n    };\n    function pauseListeners() {\n        pauseState = currentLocation.value;\n    }\n    function listen(callback) {\n        // set up the listener and prepare teardown callbacks\n        listeners.push(callback);\n        const teardown = () => {\n            const index = listeners.indexOf(callback);\n            if (index > -1)\n                listeners.splice(index, 1);\n        };\n        teardowns.push(teardown);\n        return teardown;\n    }\n    function beforeUnloadListener() {\n        const { history } = window;\n        if (!history.state)\n            return;\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\n    }\n    function destroy() {\n        for (const teardown of teardowns)\n            teardown();\n        teardowns = [];\n        window.removeEventListener('popstate', popStateHandler);\n        window.removeEventListener('beforeunload', beforeUnloadListener);\n    }\n    // set up the listeners and prepare teardown callbacks\n    window.addEventListener('popstate', popStateHandler);\n    // TODO: could we use 'pagehide' or 'visibilitychange' instead?\n    // https://developer.chrome.com/blog/page-lifecycle-api/\n    window.addEventListener('beforeunload', beforeUnloadListener, {\n        passive: true,\n    });\n    return {\n        pauseListeners,\n        listen,\n        destroy,\n    };\n}\n/**\n * Creates a state object\n */\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\n    return {\n        back,\n        current,\n        forward,\n        replaced,\n        position: window.history.length,\n        scroll: computeScroll ? computeScrollPosition() : null,\n    };\n}\nfunction useHistoryStateNavigation(base) {\n    const { history, location } = window;\n    // private variables\n    const currentLocation = {\n        value: createCurrentLocation(base, location),\n    };\n    const historyState = { value: history.state };\n    // build current history entry as this is a fresh navigation\n    if (!historyState.value) {\n        changeLocation(currentLocation.value, {\n            back: null,\n            current: currentLocation.value,\n            forward: null,\n            // the length is off by one, we need to decrease it\n            position: history.length - 1,\n            replaced: true,\n            // don't add a scroll as the user may have an anchor, and we want\n            // scrollBehavior to be triggered without a saved position\n            scroll: null,\n        }, true);\n    }\n    function changeLocation(to, state, replace) {\n        /**\n         * if a base tag is provided, and we are on a normal domain, we have to\n         * respect the provided `base` attribute because pushState() will use it and\n         * potentially erase anything before the `#` like at\n         * https://github.com/vuejs/router/issues/685 where a base of\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\n         * base tag we can just use everything after the `#`.\n         */\n        const hashIndex = base.indexOf('#');\n        const url = hashIndex > -1\n            ? (location.host && document.querySelector('base')\n                ? base\n                : base.slice(hashIndex)) + to\n            : createBaseLocation() + base + to;\n        try {\n            // BROWSER QUIRK\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\n            historyState.value = state;\n        }\n        catch (err) {\n            if ((process.env.NODE_ENV !== 'production')) {\n                warn('Error with push/replace State', err);\n            }\n            else {\n                console.error(err);\n            }\n            // Force the navigation, this also resets the call count\n            location[replace ? 'replace' : 'assign'](url);\n        }\n    }\n    function replace(to, data) {\n        const state = assign({}, history.state, buildState(historyState.value.back, \n        // keep back and forward entries but override current position\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\n        changeLocation(to, state, true);\n        currentLocation.value = to;\n    }\n    function push(to, data) {\n        // Add to current entry the information of where we are going\n        // as well as saving the current position\n        const currentState = assign({}, \n        // use current history state to gracefully handle a wrong call to\n        // history.replaceState\n        // https://github.com/vuejs/router/issues/366\n        historyState.value, history.state, {\n            forward: to,\n            scroll: computeScrollPosition(),\n        });\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\n                `history.replaceState(history.state, '', url)\\n\\n` +\n                `You can find more information at https://router.vuejs.org/guide/migration/#Usage-of-history-state`);\n        }\n        changeLocation(currentState.current, currentState, true);\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\n        changeLocation(to, state, false);\n        currentLocation.value = to;\n    }\n    return {\n        location: currentLocation,\n        state: historyState,\n        push,\n        replace,\n    };\n}\n/**\n * Creates an HTML5 history. Most common history for single page applications.\n *\n * @param base -\n */\nfunction createWebHistory(base) {\n    base = normalizeBase(base);\n    const historyNavigation = useHistoryStateNavigation(base);\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\n    function go(delta, triggerListeners = true) {\n        if (!triggerListeners)\n            historyListeners.pauseListeners();\n        history.go(delta);\n    }\n    const routerHistory = assign({\n        // it's overridden right after\n        location: '',\n        base,\n        go,\n        createHref: createHref.bind(null, base),\n    }, historyNavigation, historyListeners);\n    Object.defineProperty(routerHistory, 'location', {\n        enumerable: true,\n        get: () => historyNavigation.location.value,\n    });\n    Object.defineProperty(routerHistory, 'state', {\n        enumerable: true,\n        get: () => historyNavigation.state.value,\n    });\n    return routerHistory;\n}\n\n/**\n * Creates an in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\n *\n * @param base - Base applied to all urls, defaults to '/'\n * @returns a history object that can be passed to the router constructor\n */\nfunction createMemoryHistory(base = '') {\n    let listeners = [];\n    let queue = [START];\n    let position = 0;\n    base = normalizeBase(base);\n    function setLocation(location) {\n        position++;\n        if (position !== queue.length) {\n            // we are in the middle, we remove everything from here in the queue\n            queue.splice(position);\n        }\n        queue.push(location);\n    }\n    function triggerListeners(to, from, { direction, delta }) {\n        const info = {\n            direction,\n            delta,\n            type: NavigationType.pop,\n        };\n        for (const callback of listeners) {\n            callback(to, from, info);\n        }\n    }\n    const routerHistory = {\n        // rewritten by Object.defineProperty\n        location: START,\n        // TODO: should be kept in queue\n        state: {},\n        base,\n        createHref: createHref.bind(null, base),\n        replace(to) {\n            // remove current entry and decrement position\n            queue.splice(position--, 1);\n            setLocation(to);\n        },\n        push(to, data) {\n            setLocation(to);\n        },\n        listen(callback) {\n            listeners.push(callback);\n            return () => {\n                const index = listeners.indexOf(callback);\n                if (index > -1)\n                    listeners.splice(index, 1);\n            };\n        },\n        destroy() {\n            listeners = [];\n            queue = [START];\n            position = 0;\n        },\n        go(delta, shouldTrigger = true) {\n            const from = this.location;\n            const direction = \n            // we are considering delta === 0 going forward, but in abstract mode\n            // using 0 for the delta doesn't make sense like it does in html5 where\n            // it reloads the page\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\n            if (shouldTrigger) {\n                triggerListeners(this.location, from, {\n                    direction,\n                    delta,\n                });\n            }\n        },\n    };\n    Object.defineProperty(routerHistory, 'location', {\n        enumerable: true,\n        get: () => queue[position],\n    });\n    return routerHistory;\n}\n\n/**\n * Creates a hash history. Useful for web applications with no host (e.g. `file://`) or when configuring a server to\n * handle any URL is not possible.\n *\n * @param base - optional base to provide. Defaults to `location.pathname + location.search` If there is a `<base>` tag\n * in the `head`, its value will be ignored in favor of this parameter **but note it affects all the history.pushState()\n * calls**, meaning that if you use a `<base>` tag, it's `href` value **has to match this parameter** (ignoring anything\n * after the `#`).\n *\n * @example\n * ```js\n * // at https://example.com/folder\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\n * // you should avoid doing this because it changes the original url and breaks copying urls\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\n *\n * // at file:///usr/etc/folder/index.html\n * // for locations with no `host`, the base is ignored\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\n * ```\n */\nfunction createWebHashHistory(base) {\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\n    // for `file://`, directly use the pathname and ignore the base\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\n    base = location.host ? base || location.pathname + location.search : '';\n    // allow the user to provide a `#` in the middle: `/base/#/app`\n    if (!base.includes('#'))\n        base += '#';\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\n    }\n    return createWebHistory(base);\n}\n\nfunction isRouteLocation(route) {\n    return typeof route === 'string' || (route && typeof route === 'object');\n}\nfunction isRouteName(name) {\n    return typeof name === 'string' || typeof name === 'symbol';\n}\n\nconst NavigationFailureSymbol = Symbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : '');\n/**\n * Enumeration with all possible types for navigation failures. Can be passed to\n * {@link isNavigationFailure} to check for specific failures.\n */\nvar NavigationFailureType;\n(function (NavigationFailureType) {\n    /**\n     * An aborted navigation is a navigation that failed because a navigation\n     * guard returned `false` or called `next(false)`\n     */\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\n    /**\n     * A cancelled navigation is a navigation that failed because a more recent\n     * navigation finished started (not necessarily finished).\n     */\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\n    /**\n     * A duplicated navigation is a navigation that failed because it was\n     * initiated while already being at the exact same location.\n     */\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\n})(NavigationFailureType || (NavigationFailureType = {}));\n// DEV only debug messages\nconst ErrorTypeMessages = {\n    [1 /* ErrorTypes.MATCHER_NOT_FOUND */]({ location, currentLocation }) {\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\n            : ''}`;\n    },\n    [2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\n    },\n    [4 /* ErrorTypes.NAVIGATION_ABORTED */]({ from, to }) {\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\n    },\n    [8 /* ErrorTypes.NAVIGATION_CANCELLED */]({ from, to }) {\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\n    },\n    [16 /* ErrorTypes.NAVIGATION_DUPLICATED */]({ from, to }) {\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\n    },\n};\n/**\n * Creates a typed NavigationFailure object.\n * @internal\n * @param type - NavigationFailureType\n * @param params - { from, to }\n */\nfunction createRouterError(type, params) {\n    // keep full error messages in cjs versions\n    if ((process.env.NODE_ENV !== 'production') || !true) {\n        return assign(new Error(ErrorTypeMessages[type](params)), {\n            type,\n            [NavigationFailureSymbol]: true,\n        }, params);\n    }\n    else {\n        return assign(new Error(), {\n            type,\n            [NavigationFailureSymbol]: true,\n        }, params);\n    }\n}\nfunction isNavigationFailure(error, type) {\n    return (error instanceof Error &&\n        NavigationFailureSymbol in error &&\n        (type == null || !!(error.type & type)));\n}\nconst propertiesToLog = ['params', 'query', 'hash'];\nfunction stringifyRoute(to) {\n    if (typeof to === 'string')\n        return to;\n    if (to.path != null)\n        return to.path;\n    const location = {};\n    for (const key of propertiesToLog) {\n        if (key in to)\n            location[key] = to[key];\n    }\n    return JSON.stringify(location, null, 2);\n}\n\n// default pattern for a param: non-greedy everything but /\nconst BASE_PARAM_PATTERN = '[^/]+?';\nconst BASE_PATH_PARSER_OPTIONS = {\n    sensitive: false,\n    strict: false,\n    start: true,\n    end: true,\n};\n// Special Regex characters that must be escaped in static tokens\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\n/**\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\n *\n * @param segments - array of segments returned by tokenizePath\n * @param extraOptions - optional options for the regexp\n * @returns a PathParser\n */\nfunction tokensToParser(segments, extraOptions) {\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\n    const score = [];\n    // the regexp as a string\n    let pattern = options.start ? '^' : '';\n    // extracted keys\n    const keys = [];\n    for (const segment of segments) {\n        // the root segment needs special treatment\n        const segmentScores = segment.length ? [] : [90 /* PathScore.Root */];\n        // allow trailing slash\n        if (options.strict && !segment.length)\n            pattern += '/';\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\n            const token = segment[tokenIndex];\n            // resets the score if we are inside a sub-segment /:a-other-:b\n            let subSegmentScore = 40 /* PathScore.Segment */ +\n                (options.sensitive ? 0.25 /* PathScore.BonusCaseSensitive */ : 0);\n            if (token.type === 0 /* TokenType.Static */) {\n                // prepend the slash if we are starting a new segment\n                if (!tokenIndex)\n                    pattern += '/';\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\n                subSegmentScore += 40 /* PathScore.Static */;\n            }\n            else if (token.type === 1 /* TokenType.Param */) {\n                const { value, repeatable, optional, regexp } = token;\n                keys.push({\n                    name: value,\n                    repeatable,\n                    optional,\n                });\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\n                // the user provided a custom regexp /:id(\\\\d+)\n                if (re !== BASE_PARAM_PATTERN) {\n                    subSegmentScore += 10 /* PathScore.BonusCustomRegExp */;\n                    // make sure the regexp is valid before using it\n                    try {\n                        new RegExp(`(${re})`);\n                    }\n                    catch (err) {\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\n                            err.message);\n                    }\n                }\n                // when we repeat we must take care of the repeating leading slash\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\n                // prepend the slash if we are starting a new segment\n                if (!tokenIndex)\n                    subPattern =\n                        // avoid an optional / if there are more segments e.g. /:p?-static\n                        // or /:p?-:p2\n                        optional && segment.length < 2\n                            ? `(?:/${subPattern})`\n                            : '/' + subPattern;\n                if (optional)\n                    subPattern += '?';\n                pattern += subPattern;\n                subSegmentScore += 20 /* PathScore.Dynamic */;\n                if (optional)\n                    subSegmentScore += -8 /* PathScore.BonusOptional */;\n                if (repeatable)\n                    subSegmentScore += -20 /* PathScore.BonusRepeatable */;\n                if (re === '.*')\n                    subSegmentScore += -50 /* PathScore.BonusWildcard */;\n            }\n            segmentScores.push(subSegmentScore);\n        }\n        // an empty array like /home/ -> [[{home}], []]\n        // if (!segment.length) pattern += '/'\n        score.push(segmentScores);\n    }\n    // only apply the strict bonus to the last score\n    if (options.strict && options.end) {\n        const i = score.length - 1;\n        score[i][score[i].length - 1] += 0.7000000000000001 /* PathScore.BonusStrict */;\n    }\n    // TODO: dev only warn double trailing slash\n    if (!options.strict)\n        pattern += '/?';\n    if (options.end)\n        pattern += '$';\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\n    else if (options.strict)\n        pattern += '(?:/|$)';\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\n    function parse(path) {\n        const match = path.match(re);\n        const params = {};\n        if (!match)\n            return null;\n        for (let i = 1; i < match.length; i++) {\n            const value = match[i] || '';\n            const key = keys[i - 1];\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\n        }\n        return params;\n    }\n    function stringify(params) {\n        let path = '';\n        // for optional parameters to allow to be empty\n        let avoidDuplicatedSlash = false;\n        for (const segment of segments) {\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\n                path += '/';\n            avoidDuplicatedSlash = false;\n            for (const token of segment) {\n                if (token.type === 0 /* TokenType.Static */) {\n                    path += token.value;\n                }\n                else if (token.type === 1 /* TokenType.Param */) {\n                    const { value, repeatable, optional } = token;\n                    const param = value in params ? params[value] : '';\n                    if (isArray(param) && !repeatable) {\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\n                    }\n                    const text = isArray(param)\n                        ? param.join('/')\n                        : param;\n                    if (!text) {\n                        if (optional) {\n                            // if we have more than one optional param like /:a?-static we don't need to care about the optional param\n                            if (segment.length < 2) {\n                                // remove the last slash as we could be at the end\n                                if (path.endsWith('/'))\n                                    path = path.slice(0, -1);\n                                // do not append a slash on the next iteration\n                                else\n                                    avoidDuplicatedSlash = true;\n                            }\n                        }\n                        else\n                            throw new Error(`Missing required param \"${value}\"`);\n                    }\n                    path += text;\n                }\n            }\n        }\n        // avoid empty path when we have multiple optional params\n        return path || '/';\n    }\n    return {\n        re,\n        score,\n        keys,\n        parse,\n        stringify,\n    };\n}\n/**\n * Compares an array of numbers as used in PathParser.score and returns a\n * number. This function can be used to `sort` an array\n *\n * @param a - first array of numbers\n * @param b - second array of numbers\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\n * should be sorted first\n */\nfunction compareScoreArray(a, b) {\n    let i = 0;\n    while (i < a.length && i < b.length) {\n        const diff = b[i] - a[i];\n        // only keep going if diff === 0\n        if (diff)\n            return diff;\n        i++;\n    }\n    // if the last subsegment was Static, the shorter segments should be sorted first\n    // otherwise sort the longest segment first\n    if (a.length < b.length) {\n        return a.length === 1 && a[0] === 40 /* PathScore.Static */ + 40 /* PathScore.Segment */\n            ? -1\n            : 1;\n    }\n    else if (a.length > b.length) {\n        return b.length === 1 && b[0] === 40 /* PathScore.Static */ + 40 /* PathScore.Segment */\n            ? 1\n            : -1;\n    }\n    return 0;\n}\n/**\n * Compare function that can be used with `sort` to sort an array of PathParser\n *\n * @param a - first PathParser\n * @param b - second PathParser\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\n */\nfunction comparePathParserScore(a, b) {\n    let i = 0;\n    const aScore = a.score;\n    const bScore = b.score;\n    while (i < aScore.length && i < bScore.length) {\n        const comp = compareScoreArray(aScore[i], bScore[i]);\n        // do not return if both are equal\n        if (comp)\n            return comp;\n        i++;\n    }\n    if (Math.abs(bScore.length - aScore.length) === 1) {\n        if (isLastScoreNegative(aScore))\n            return 1;\n        if (isLastScoreNegative(bScore))\n            return -1;\n    }\n    // if a and b share the same score entries but b has more, sort b first\n    return bScore.length - aScore.length;\n    // this is the ternary version\n    // return aScore.length < bScore.length\n    //   ? 1\n    //   : aScore.length > bScore.length\n    //   ? -1\n    //   : 0\n}\n/**\n * This allows detecting splats at the end of a path: /home/:id(.*)*\n *\n * @param score - score to check\n * @returns true if the last entry is negative\n */\nfunction isLastScoreNegative(score) {\n    const last = score[score.length - 1];\n    return score.length > 0 && last[last.length - 1] < 0;\n}\n\nconst ROOT_TOKEN = {\n    type: 0 /* TokenType.Static */,\n    value: '',\n};\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\n// After some profiling, the cache seems to be unnecessary because tokenizePath\n// (the slowest part of adding a route) is very fast\n// const tokenCache = new Map<string, Token[][]>()\nfunction tokenizePath(path) {\n    if (!path)\n        return [[]];\n    if (path === '/')\n        return [[ROOT_TOKEN]];\n    if (!path.startsWith('/')) {\n        throw new Error((process.env.NODE_ENV !== 'production')\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\n            : `Invalid path \"${path}\"`);\n    }\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\n    function crash(message) {\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\n    }\n    let state = 0 /* TokenizerState.Static */;\n    let previousState = state;\n    const tokens = [];\n    // the segment will always be valid because we get into the initial state\n    // with the leading /\n    let segment;\n    function finalizeSegment() {\n        if (segment)\n            tokens.push(segment);\n        segment = [];\n    }\n    // index on the path\n    let i = 0;\n    // char at index\n    let char;\n    // buffer of the value read\n    let buffer = '';\n    // custom regexp for a param\n    let customRe = '';\n    function consumeBuffer() {\n        if (!buffer)\n            return;\n        if (state === 0 /* TokenizerState.Static */) {\n            segment.push({\n                type: 0 /* TokenType.Static */,\n                value: buffer,\n            });\n        }\n        else if (state === 1 /* TokenizerState.Param */ ||\n            state === 2 /* TokenizerState.ParamRegExp */ ||\n            state === 3 /* TokenizerState.ParamRegExpEnd */) {\n            if (segment.length > 1 && (char === '*' || char === '+'))\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\n            segment.push({\n                type: 1 /* TokenType.Param */,\n                value: buffer,\n                regexp: customRe,\n                repeatable: char === '*' || char === '+',\n                optional: char === '*' || char === '?',\n            });\n        }\n        else {\n            crash('Invalid state to consume buffer');\n        }\n        buffer = '';\n    }\n    function addCharToBuffer() {\n        buffer += char;\n    }\n    while (i < path.length) {\n        char = path[i++];\n        if (char === '\\\\' && state !== 2 /* TokenizerState.ParamRegExp */) {\n            previousState = state;\n            state = 4 /* TokenizerState.EscapeNext */;\n            continue;\n        }\n        switch (state) {\n            case 0 /* TokenizerState.Static */:\n                if (char === '/') {\n                    if (buffer) {\n                        consumeBuffer();\n                    }\n                    finalizeSegment();\n                }\n                else if (char === ':') {\n                    consumeBuffer();\n                    state = 1 /* TokenizerState.Param */;\n                }\n                else {\n                    addCharToBuffer();\n                }\n                break;\n            case 4 /* TokenizerState.EscapeNext */:\n                addCharToBuffer();\n                state = previousState;\n                break;\n            case 1 /* TokenizerState.Param */:\n                if (char === '(') {\n                    state = 2 /* TokenizerState.ParamRegExp */;\n                }\n                else if (VALID_PARAM_RE.test(char)) {\n                    addCharToBuffer();\n                }\n                else {\n                    consumeBuffer();\n                    state = 0 /* TokenizerState.Static */;\n                    // go back one character if we were not modifying\n                    if (char !== '*' && char !== '?' && char !== '+')\n                        i--;\n                }\n                break;\n            case 2 /* TokenizerState.ParamRegExp */:\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\n                // it already works by escaping the closing )\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\n                // is this really something people need since you can also write\n                // /prefix_:p()_suffix\n                if (char === ')') {\n                    // handle the escaped )\n                    if (customRe[customRe.length - 1] == '\\\\')\n                        customRe = customRe.slice(0, -1) + char;\n                    else\n                        state = 3 /* TokenizerState.ParamRegExpEnd */;\n                }\n                else {\n                    customRe += char;\n                }\n                break;\n            case 3 /* TokenizerState.ParamRegExpEnd */:\n                // same as finalizing a param\n                consumeBuffer();\n                state = 0 /* TokenizerState.Static */;\n                // go back one character if we were not modifying\n                if (char !== '*' && char !== '?' && char !== '+')\n                    i--;\n                customRe = '';\n                break;\n            default:\n                crash('Unknown state');\n                break;\n        }\n    }\n    if (state === 2 /* TokenizerState.ParamRegExp */)\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\n    consumeBuffer();\n    finalizeSegment();\n    // tokenCache.set(path, tokens)\n    return tokens;\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\n    const parser = tokensToParser(tokenizePath(record.path), options);\n    // warn against params with the same name\n    if ((process.env.NODE_ENV !== 'production')) {\n        const existingKeys = new Set();\n        for (const key of parser.keys) {\n            if (existingKeys.has(key.name))\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\n            existingKeys.add(key.name);\n        }\n    }\n    const matcher = assign(parser, {\n        record,\n        parent,\n        // these needs to be populated by the parent\n        children: [],\n        alias: [],\n    });\n    if (parent) {\n        // both are aliases or both are not aliases\n        // we don't want to mix them because the order is used when\n        // passing originalRecord in Matcher.addRoute\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\n            parent.children.push(matcher);\n    }\n    return matcher;\n}\n\n/**\n * Creates a Router Matcher.\n *\n * @internal\n * @param routes - array of initial routes\n * @param globalOptions - global route options\n */\nfunction createRouterMatcher(routes, globalOptions) {\n    // normalized ordered array of matchers\n    const matchers = [];\n    const matcherMap = new Map();\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\n    function getRecordMatcher(name) {\n        return matcherMap.get(name);\n    }\n    function addRoute(record, parent, originalRecord) {\n        // used later on to remove by name\n        const isRootAdd = !originalRecord;\n        const mainNormalizedRecord = normalizeRouteRecord(record);\n        if ((process.env.NODE_ENV !== 'production')) {\n            checkChildMissingNameWithEmptyPath(mainNormalizedRecord, parent);\n        }\n        // we might be the child of an alias\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\n        const options = mergeOptions(globalOptions, record);\n        // generate an array of records to correctly handle aliases\n        const normalizedRecords = [mainNormalizedRecord];\n        if ('alias' in record) {\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\n            for (const alias of aliases) {\n                normalizedRecords.push(\n                // we need to normalize again to ensure the `mods` property\n                // being non enumerable\n                normalizeRouteRecord(assign({}, mainNormalizedRecord, {\n                    // this allows us to hold a copy of the `components` option\n                    // so that async components cache is hold on the original record\n                    components: originalRecord\n                        ? originalRecord.record.components\n                        : mainNormalizedRecord.components,\n                    path: alias,\n                    // we might be the child of an alias\n                    aliasOf: originalRecord\n                        ? originalRecord.record\n                        : mainNormalizedRecord,\n                    // the aliases are always of the same kind as the original since they\n                    // are defined on the same record\n                })));\n            }\n        }\n        let matcher;\n        let originalMatcher;\n        for (const normalizedRecord of normalizedRecords) {\n            const { path } = normalizedRecord;\n            // Build up the path for nested routes if the child isn't an absolute\n            // route. Only add the / delimiter if the child path isn't empty and if the\n            // parent path doesn't have a trailing slash\n            if (parent && path[0] !== '/') {\n                const parentPath = parent.record.path;\n                const connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\n                normalizedRecord.path =\n                    parent.record.path + (path && connectingSlash + path);\n            }\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\n                    'See more at https://router.vuejs.org/guide/migration/#Removed-star-or-catch-all-routes.');\n            }\n            // create the object beforehand, so it can be passed to children\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\n                checkMissingParamsInAbsolutePath(matcher, parent);\n            // if we are an alias we must tell the original record that we exist,\n            // so we can be removed\n            if (originalRecord) {\n                originalRecord.alias.push(matcher);\n                if ((process.env.NODE_ENV !== 'production')) {\n                    checkSameParams(originalRecord, matcher);\n                }\n            }\n            else {\n                // otherwise, the first record is the original and others are aliases\n                originalMatcher = originalMatcher || matcher;\n                if (originalMatcher !== matcher)\n                    originalMatcher.alias.push(matcher);\n                // remove the route if named and only for the top record (avoid in nested calls)\n                // this works because the original record is the first one\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\n                    removeRoute(record.name);\n            }\n            // Avoid adding a record that doesn't display anything. This allows passing through records without a component to\n            // not be reached and pass through the catch all route\n            if (isMatchable(matcher)) {\n                insertMatcher(matcher);\n            }\n            if (mainNormalizedRecord.children) {\n                const children = mainNormalizedRecord.children;\n                for (let i = 0; i < children.length; i++) {\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\n                }\n            }\n            // if there was no original record, then the first one was not an alias and all\n            // other aliases (if any) need to reference this record when adding children\n            originalRecord = originalRecord || matcher;\n            // TODO: add normalized records for more flexibility\n            // if (parent && isAliasRecord(originalRecord)) {\n            //   parent.children.push(originalRecord)\n            // }\n        }\n        return originalMatcher\n            ? () => {\n                // since other matchers are aliases, they should be removed by the original matcher\n                removeRoute(originalMatcher);\n            }\n            : noop;\n    }\n    function removeRoute(matcherRef) {\n        if (isRouteName(matcherRef)) {\n            const matcher = matcherMap.get(matcherRef);\n            if (matcher) {\n                matcherMap.delete(matcherRef);\n                matchers.splice(matchers.indexOf(matcher), 1);\n                matcher.children.forEach(removeRoute);\n                matcher.alias.forEach(removeRoute);\n            }\n        }\n        else {\n            const index = matchers.indexOf(matcherRef);\n            if (index > -1) {\n                matchers.splice(index, 1);\n                if (matcherRef.record.name)\n                    matcherMap.delete(matcherRef.record.name);\n                matcherRef.children.forEach(removeRoute);\n                matcherRef.alias.forEach(removeRoute);\n            }\n        }\n    }\n    function getRoutes() {\n        return matchers;\n    }\n    function insertMatcher(matcher) {\n        const index = findInsertionIndex(matcher, matchers);\n        matchers.splice(index, 0, matcher);\n        // only add the original record to the name map\n        if (matcher.record.name && !isAliasRecord(matcher))\n            matcherMap.set(matcher.record.name, matcher);\n    }\n    function resolve(location, currentLocation) {\n        let matcher;\n        let params = {};\n        let path;\n        let name;\n        if ('name' in location && location.name) {\n            matcher = matcherMap.get(location.name);\n            if (!matcher)\n                throw createRouterError(1 /* ErrorTypes.MATCHER_NOT_FOUND */, {\n                    location,\n                });\n            // warn if the user is passing invalid params so they can debug it better when they get removed\n            if ((process.env.NODE_ENV !== 'production')) {\n                const invalidParams = Object.keys(location.params || {}).filter(paramName => !matcher.keys.find(k => k.name === paramName));\n                if (invalidParams.length) {\n                    warn(`Discarded invalid param(s) \"${invalidParams.join('\", \"')}\" when navigating. See https://github.com/vuejs/router/blob/main/packages/router/CHANGELOG.md#414-2022-08-22 for more details.`);\n                }\n            }\n            name = matcher.record.name;\n            params = assign(\n            // paramsFromLocation is a new object\n            paramsFromLocation(currentLocation.params, \n            // only keep params that exist in the resolved location\n            // only keep optional params coming from a parent record\n            matcher.keys\n                .filter(k => !k.optional)\n                .concat(matcher.parent ? matcher.parent.keys.filter(k => k.optional) : [])\n                .map(k => k.name)), \n            // discard any existing params in the current location that do not exist here\n            // #1497 this ensures better active/exact matching\n            location.params &&\n                paramsFromLocation(location.params, matcher.keys.map(k => k.name)));\n            // throws if cannot be stringified\n            path = matcher.stringify(params);\n        }\n        else if (location.path != null) {\n            // no need to resolve the path with the matcher as it was provided\n            // this also allows the user to control the encoding\n            path = location.path;\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://github.com/vuejs/router/issues/new/choose.`);\n            }\n            matcher = matchers.find(m => m.re.test(path));\n            // matcher should have a value after the loop\n            if (matcher) {\n                // we know the matcher works because we tested the regexp\n                params = matcher.parse(path);\n                name = matcher.record.name;\n            }\n            // location is a relative path\n        }\n        else {\n            // match by name or path of current route\n            matcher = currentLocation.name\n                ? matcherMap.get(currentLocation.name)\n                : matchers.find(m => m.re.test(currentLocation.path));\n            if (!matcher)\n                throw createRouterError(1 /* ErrorTypes.MATCHER_NOT_FOUND */, {\n                    location,\n                    currentLocation,\n                });\n            name = matcher.record.name;\n            // since we are navigating to the same location, we don't need to pick the\n            // params like when `name` is provided\n            params = assign({}, currentLocation.params, location.params);\n            path = matcher.stringify(params);\n        }\n        const matched = [];\n        let parentMatcher = matcher;\n        while (parentMatcher) {\n            // reversed order so parents are at the beginning\n            matched.unshift(parentMatcher.record);\n            parentMatcher = parentMatcher.parent;\n        }\n        return {\n            name,\n            path,\n            params,\n            matched,\n            meta: mergeMetaFields(matched),\n        };\n    }\n    // add initial routes\n    routes.forEach(route => addRoute(route));\n    function clearRoutes() {\n        matchers.length = 0;\n        matcherMap.clear();\n    }\n    return {\n        addRoute,\n        resolve,\n        removeRoute,\n        clearRoutes,\n        getRoutes,\n        getRecordMatcher,\n    };\n}\nfunction paramsFromLocation(params, keys) {\n    const newParams = {};\n    for (const key of keys) {\n        if (key in params)\n            newParams[key] = params[key];\n    }\n    return newParams;\n}\n/**\n * Normalizes a RouteRecordRaw. Creates a copy\n *\n * @param record\n * @returns the normalized version\n */\nfunction normalizeRouteRecord(record) {\n    const normalized = {\n        path: record.path,\n        redirect: record.redirect,\n        name: record.name,\n        meta: record.meta || {},\n        aliasOf: record.aliasOf,\n        beforeEnter: record.beforeEnter,\n        props: normalizeRecordProps(record),\n        children: record.children || [],\n        instances: {},\n        leaveGuards: new Set(),\n        updateGuards: new Set(),\n        enterCallbacks: {},\n        // must be declared afterwards\n        // mods: {},\n        components: 'components' in record\n            ? record.components || null\n            : record.component && { default: record.component },\n    };\n    // mods contain modules and shouldn't be copied,\n    // logged or anything. It's just used for internal\n    // advanced use cases like data loaders\n    Object.defineProperty(normalized, 'mods', {\n        value: {},\n    });\n    return normalized;\n}\n/**\n * Normalize the optional `props` in a record to always be an object similar to\n * components. Also accept a boolean for components.\n * @param record\n */\nfunction normalizeRecordProps(record) {\n    const propsObject = {};\n    // props does not exist on redirect records, but we can set false directly\n    const props = record.props || false;\n    if ('component' in record) {\n        propsObject.default = props;\n    }\n    else {\n        // NOTE: we could also allow a function to be applied to every component.\n        // Would need user feedback for use cases\n        for (const name in record.components)\n            propsObject[name] = typeof props === 'object' ? props[name] : props;\n    }\n    return propsObject;\n}\n/**\n * Checks if a record or any of its parent is an alias\n * @param record\n */\nfunction isAliasRecord(record) {\n    while (record) {\n        if (record.record.aliasOf)\n            return true;\n        record = record.parent;\n    }\n    return false;\n}\n/**\n * Merge meta fields of an array of records\n *\n * @param matched - array of matched records\n */\nfunction mergeMetaFields(matched) {\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\n}\nfunction mergeOptions(defaults, partialOptions) {\n    const options = {};\n    for (const key in defaults) {\n        options[key] = key in partialOptions ? partialOptions[key] : defaults[key];\n    }\n    return options;\n}\nfunction isSameParam(a, b) {\n    return (a.name === b.name &&\n        a.optional === b.optional &&\n        a.repeatable === b.repeatable);\n}\n/**\n * Check if a path and its alias have the same required params\n *\n * @param a - original record\n * @param b - alias record\n */\nfunction checkSameParams(a, b) {\n    for (const key of a.keys) {\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" must have the exact same param named \"${key.name}\"`);\n    }\n    for (const key of b.keys) {\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" must have the exact same param named \"${key.name}\"`);\n    }\n}\n/**\n * A route with a name and a child with an empty path without a name should warn when adding the route\n *\n * @param mainNormalizedRecord - RouteRecordNormalized\n * @param parent - RouteRecordMatcher\n */\nfunction checkChildMissingNameWithEmptyPath(mainNormalizedRecord, parent) {\n    if (parent &&\n        parent.record.name &&\n        !mainNormalizedRecord.name &&\n        !mainNormalizedRecord.path) {\n        warn(`The route named \"${String(parent.record.name)}\" has a child without a name and an empty path. Using that name won't render the empty path child so you probably want to move the name to the child instead. If this is intentional, add a name to the child route to remove the warning.`);\n    }\n}\nfunction checkMissingParamsInAbsolutePath(record, parent) {\n    for (const key of parent.keys) {\n        if (!record.keys.find(isSameParam.bind(null, key)))\n            return warn(`Absolute path \"${record.record.path}\" must have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\n    }\n}\n/**\n * Performs a binary search to find the correct insertion index for a new matcher.\n *\n * Matchers are primarily sorted by their score. If scores are tied then we also consider parent/child relationships,\n * with descendants coming before ancestors. If there's still a tie, new routes are inserted after existing routes.\n *\n * @param matcher - new matcher to be inserted\n * @param matchers - existing matchers\n */\nfunction findInsertionIndex(matcher, matchers) {\n    // First phase: binary search based on score\n    let lower = 0;\n    let upper = matchers.length;\n    while (lower !== upper) {\n        const mid = (lower + upper) >> 1;\n        const sortOrder = comparePathParserScore(matcher, matchers[mid]);\n        if (sortOrder < 0) {\n            upper = mid;\n        }\n        else {\n            lower = mid + 1;\n        }\n    }\n    // Second phase: check for an ancestor with the same score\n    const insertionAncestor = getInsertionAncestor(matcher);\n    if (insertionAncestor) {\n        upper = matchers.lastIndexOf(insertionAncestor, upper - 1);\n        if ((process.env.NODE_ENV !== 'production') && upper < 0) {\n            // This should never happen\n            warn(`Finding ancestor route \"${insertionAncestor.record.path}\" failed for \"${matcher.record.path}\"`);\n        }\n    }\n    return upper;\n}\nfunction getInsertionAncestor(matcher) {\n    let ancestor = matcher;\n    while ((ancestor = ancestor.parent)) {\n        if (isMatchable(ancestor) &&\n            comparePathParserScore(matcher, ancestor) === 0) {\n            return ancestor;\n        }\n    }\n    return;\n}\n/**\n * Checks if a matcher can be reachable. This means if it's possible to reach it as a route. For example, routes without\n * a component, or name, or redirect, are just used to group other routes.\n * @param matcher\n * @param matcher.record record of the matcher\n * @returns\n */\nfunction isMatchable({ record }) {\n    return !!(record.name ||\n        (record.components && Object.keys(record.components).length) ||\n        record.redirect);\n}\n\n/**\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\n * version with the leading `?` and without Should work as URLSearchParams\n\n * @internal\n *\n * @param search - search string to parse\n * @returns a query object\n */\nfunction parseQuery(search) {\n    const query = {};\n    // avoid creating an object with an empty key and empty value\n    // because of split('&')\n    if (search === '' || search === '?')\n        return query;\n    const hasLeadingIM = search[0] === '?';\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\n    for (let i = 0; i < searchParams.length; ++i) {\n        // pre decode the + into space\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\n        // allow the = character\n        const eqPos = searchParam.indexOf('=');\n        const key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\n        const value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\n        if (key in query) {\n            // an extra variable for ts types\n            let currentValue = query[key];\n            if (!isArray(currentValue)) {\n                currentValue = query[key] = [currentValue];\n            }\n            currentValue.push(value);\n        }\n        else {\n            query[key] = value;\n        }\n    }\n    return query;\n}\n/**\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\n * doesn't prepend a `?`\n *\n * @internal\n *\n * @param query - query object to stringify\n * @returns string version of the query without the leading `?`\n */\nfunction stringifyQuery(query) {\n    let search = '';\n    for (let key in query) {\n        const value = query[key];\n        key = encodeQueryKey(key);\n        if (value == null) {\n            // only null adds the value\n            if (value !== undefined) {\n                search += (search.length ? '&' : '') + key;\n            }\n            continue;\n        }\n        // keep null values\n        const values = isArray(value)\n            ? value.map(v => v && encodeQueryValue(v))\n            : [value && encodeQueryValue(value)];\n        values.forEach(value => {\n            // skip undefined values in arrays as if they were not present\n            // smaller code than using filter\n            if (value !== undefined) {\n                // only append & with non-empty search\n                search += (search.length ? '&' : '') + key;\n                if (value != null)\n                    search += '=' + value;\n            }\n        });\n    }\n    return search;\n}\n/**\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\n * numbers into strings, removing keys with an undefined value and replacing\n * undefined with null in arrays\n *\n * @param query - query object to normalize\n * @returns a normalized query object\n */\nfunction normalizeQuery(query) {\n    const normalizedQuery = {};\n    for (const key in query) {\n        const value = query[key];\n        if (value !== undefined) {\n            normalizedQuery[key] = isArray(value)\n                ? value.map(v => (v == null ? null : '' + v))\n                : value == null\n                    ? value\n                    : '' + value;\n        }\n    }\n    return normalizedQuery;\n}\n\n/**\n * RouteRecord being rendered by the closest ancestor Router View. Used for\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\n * Location Matched\n *\n * @internal\n */\nconst matchedRouteKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : '');\n/**\n * Allows overriding the router view depth to control which component in\n * `matched` is rendered. rvd stands for Router View Depth\n *\n * @internal\n */\nconst viewDepthKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : '');\n/**\n * Allows overriding the router instance returned by `useRouter` in tests. r\n * stands for router\n *\n * @internal\n */\nconst routerKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router' : '');\n/**\n * Allows overriding the current route returned by `useRoute` in tests. rl\n * stands for route location\n *\n * @internal\n */\nconst routeLocationKey = Symbol((process.env.NODE_ENV !== 'production') ? 'route location' : '');\n/**\n * Allows overriding the current route used by router-view. Internally this is\n * used when the `route` prop is passed.\n *\n * @internal\n */\nconst routerViewLocationKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view location' : '');\n\n/**\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\n */\nfunction useCallbacks() {\n    let handlers = [];\n    function add(handler) {\n        handlers.push(handler);\n        return () => {\n            const i = handlers.indexOf(handler);\n            if (i > -1)\n                handlers.splice(i, 1);\n        };\n    }\n    function reset() {\n        handlers = [];\n    }\n    return {\n        add,\n        list: () => handlers.slice(),\n        reset,\n    };\n}\n\nfunction registerGuard(record, name, guard) {\n    const removeFromList = () => {\n        record[name].delete(guard);\n    };\n    onUnmounted(removeFromList);\n    onDeactivated(removeFromList);\n    onActivated(() => {\n        record[name].add(guard);\n    });\n    record[name].add(guard);\n}\n/**\n * Add a navigation guard that triggers whenever the component for the current\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\n * used in any component. The guard is removed when the component is unmounted.\n *\n * @param leaveGuard - {@link NavigationGuard}\n */\nfunction onBeforeRouteLeave(leaveGuard) {\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\n        return;\n    }\n    const activeRecord = inject(matchedRouteKey, \n    // to avoid warning\n    {}).value;\n    if (!activeRecord) {\n        (process.env.NODE_ENV !== 'production') &&\n            warn('No active route record was found when calling `onBeforeRouteLeave()`. Make sure you call this function inside a component child of <router-view>. Maybe you called it inside of App.vue?');\n        return;\n    }\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\n}\n/**\n * Add a navigation guard that triggers whenever the current location is about\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\n * component. The guard is removed when the component is unmounted.\n *\n * @param updateGuard - {@link NavigationGuard}\n */\nfunction onBeforeRouteUpdate(updateGuard) {\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\n        return;\n    }\n    const activeRecord = inject(matchedRouteKey, \n    // to avoid warning\n    {}).value;\n    if (!activeRecord) {\n        (process.env.NODE_ENV !== 'production') &&\n            warn('No active route record was found when calling `onBeforeRouteUpdate()`. Make sure you call this function inside a component child of <router-view>. Maybe you called it inside of App.vue?');\n        return;\n    }\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\n}\nfunction guardToPromiseFn(guard, to, from, record, name, runWithContext = fn => fn()) {\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\n    const enterCallbackArray = record &&\n        // name is defined if record is because of the function overload\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\n    return () => new Promise((resolve, reject) => {\n        const next = (valid) => {\n            if (valid === false) {\n                reject(createRouterError(4 /* ErrorTypes.NAVIGATION_ABORTED */, {\n                    from,\n                    to,\n                }));\n            }\n            else if (valid instanceof Error) {\n                reject(valid);\n            }\n            else if (isRouteLocation(valid)) {\n                reject(createRouterError(2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */, {\n                    from: to,\n                    to: valid,\n                }));\n            }\n            else {\n                if (enterCallbackArray &&\n                    // since enterCallbackArray is truthy, both record and name also are\n                    record.enterCallbacks[name] === enterCallbackArray &&\n                    typeof valid === 'function') {\n                    enterCallbackArray.push(valid);\n                }\n                resolve();\n            }\n        };\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\n        const guardReturn = runWithContext(() => guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next));\n        let guardCall = Promise.resolve(guardReturn);\n        if (guard.length < 3)\n            guardCall = guardCall.then(next);\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\n                guardCall = guardCall.then(resolvedValue => {\n                    // @ts-expect-error: _called is added at canOnlyBeCalledOnce\n                    if (!next._called) {\n                        warn(message);\n                        return Promise.reject(new Error('Invalid navigation guard'));\n                    }\n                    return resolvedValue;\n                });\n            }\n            else if (guardReturn !== undefined) {\n                // @ts-expect-error: _called is added at canOnlyBeCalledOnce\n                if (!next._called) {\n                    warn(message);\n                    reject(new Error('Invalid navigation guard'));\n                    return;\n                }\n            }\n        }\n        guardCall.catch(err => reject(err));\n    });\n}\nfunction canOnlyBeCalledOnce(next, to, from) {\n    let called = 0;\n    return function () {\n        if (called++ === 1)\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\n        // @ts-expect-error: we put it in the original one because it's easier to check\n        next._called = true;\n        if (called === 1)\n            next.apply(null, arguments);\n    };\n}\nfunction extractComponentsGuards(matched, guardType, to, from, runWithContext = fn => fn()) {\n    const guards = [];\n    for (const record of matched) {\n        if ((process.env.NODE_ENV !== 'production') && !record.components && !record.children.length) {\n            warn(`Record with path \"${record.path}\" is either missing a \"component(s)\"` +\n                ` or \"children\" property.`);\n        }\n        for (const name in record.components) {\n            let rawComponent = record.components[name];\n            if ((process.env.NODE_ENV !== 'production')) {\n                if (!rawComponent ||\n                    (typeof rawComponent !== 'object' &&\n                        typeof rawComponent !== 'function')) {\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\n                    // throw to ensure we stop here but warn to ensure the message isn't\n                    // missed by the user\n                    throw new Error('Invalid route component');\n                }\n                else if ('then' in rawComponent) {\n                    // warn if user wrote import('/component.vue') instead of () =>\n                    // import('./component.vue')\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\n                        `Promise instead of a function that returns a Promise. Did you ` +\n                        `write \"import('./MyPage.vue')\" instead of ` +\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\n                        `production if not fixed.`);\n                    const promise = rawComponent;\n                    rawComponent = () => promise;\n                }\n                else if (rawComponent.__asyncLoader &&\n                    // warn only once per component\n                    !rawComponent.__warnedDefineAsync) {\n                    rawComponent.__warnedDefineAsync = true;\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\n                        `using \"defineAsyncComponent()\". ` +\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\n                }\n            }\n            // skip update and leave guards if the route component is not mounted\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\n                continue;\n            if (isRouteComponent(rawComponent)) {\n                // __vccOpts is added by vue-class-component and contain the regular options\n                const options = rawComponent.__vccOpts || rawComponent;\n                const guard = options[guardType];\n                guard &&\n                    guards.push(guardToPromiseFn(guard, to, from, record, name, runWithContext));\n            }\n            else {\n                // start requesting the chunk already\n                let componentPromise = rawComponent();\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\n                    componentPromise = Promise.resolve(componentPromise);\n                }\n                guards.push(() => componentPromise.then(resolved => {\n                    if (!resolved)\n                        throw new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`);\n                    const resolvedComponent = isESModule(resolved)\n                        ? resolved.default\n                        : resolved;\n                    // keep the resolved module for plugins like data loaders\n                    record.mods[name] = resolved;\n                    // replace the function with the resolved component\n                    // cannot be null or undefined because we went into the for loop\n                    record.components[name] = resolvedComponent;\n                    // __vccOpts is added by vue-class-component and contain the regular options\n                    const options = resolvedComponent.__vccOpts || resolvedComponent;\n                    const guard = options[guardType];\n                    return (guard &&\n                        guardToPromiseFn(guard, to, from, record, name, runWithContext)());\n                }));\n            }\n        }\n    }\n    return guards;\n}\n/**\n * Ensures a route is loaded, so it can be passed as o prop to `<RouterView>`.\n *\n * @param route - resolved route to load\n */\nfunction loadRouteLocation(route) {\n    return route.matched.every(record => record.redirect)\n        ? Promise.reject(new Error('Cannot load a route that redirects.'))\n        : Promise.all(route.matched.map(record => record.components &&\n            Promise.all(Object.keys(record.components).reduce((promises, name) => {\n                const rawComponent = record.components[name];\n                if (typeof rawComponent === 'function' &&\n                    !('displayName' in rawComponent)) {\n                    promises.push(rawComponent().then(resolved => {\n                        if (!resolved)\n                            return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\". Ensure you passed a function that returns a promise.`));\n                        const resolvedComponent = isESModule(resolved)\n                            ? resolved.default\n                            : resolved;\n                        // keep the resolved module for plugins like data loaders\n                        record.mods[name] = resolved;\n                        // replace the function with the resolved component\n                        // cannot be null or undefined because we went into the for loop\n                        record.components[name] = resolvedComponent;\n                        return;\n                    }));\n                }\n                return promises;\n            }, [])))).then(() => route);\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\n// `isExactActive` behavior should go through an RFC\n/**\n * Returns the internal behavior of a {@link RouterLink} without the rendering part.\n *\n * @param props - a `to` location and an optional `replace` flag\n */\nfunction useLink(props) {\n    const router = inject(routerKey);\n    const currentRoute = inject(routeLocationKey);\n    let hasPrevious = false;\n    let previousTo = null;\n    const route = computed(() => {\n        const to = unref(props.to);\n        if ((process.env.NODE_ENV !== 'production') && (!hasPrevious || to !== previousTo)) {\n            if (!isRouteLocation(to)) {\n                if (hasPrevious) {\n                    warn(`Invalid value for prop \"to\" in useLink()\\n- to:`, to, `\\n- previous to:`, previousTo, `\\n- props:`, props);\n                }\n                else {\n                    warn(`Invalid value for prop \"to\" in useLink()\\n- to:`, to, `\\n- props:`, props);\n                }\n            }\n            previousTo = to;\n            hasPrevious = true;\n        }\n        return router.resolve(to);\n    });\n    const activeRecordIndex = computed(() => {\n        const { matched } = route.value;\n        const { length } = matched;\n        const routeMatched = matched[length - 1];\n        const currentMatched = currentRoute.matched;\n        if (!routeMatched || !currentMatched.length)\n            return -1;\n        const index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\n        if (index > -1)\n            return index;\n        // possible parent record\n        const parentRecordPath = getOriginalPath(matched[length - 2]);\n        return (\n        // we are dealing with nested routes\n        length > 1 &&\n            // if the parent and matched route have the same path, this link is\n            // referring to the empty child. Or we currently are on a different\n            // child of the same parent\n            getOriginalPath(routeMatched) === parentRecordPath &&\n            // avoid comparing the child with its parent\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\n            : index);\n    });\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\n        includesParams(currentRoute.params, route.value.params));\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\n    function navigate(e = {}) {\n        if (guardEvent(e)) {\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to)\n            // avoid uncaught errors are they are logged anyway\n            ).catch(noop);\n        }\n        return Promise.resolve();\n    }\n    // devtools only\n    if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\n        const instance = getCurrentInstance();\n        if (instance) {\n            const linkContextDevtools = {\n                route: route.value,\n                isActive: isActive.value,\n                isExactActive: isExactActive.value,\n                error: null,\n            };\n            // @ts-expect-error: this is internal\n            instance.__vrl_devtools = instance.__vrl_devtools || [];\n            // @ts-expect-error: this is internal\n            instance.__vrl_devtools.push(linkContextDevtools);\n            watchEffect(() => {\n                linkContextDevtools.route = route.value;\n                linkContextDevtools.isActive = isActive.value;\n                linkContextDevtools.isExactActive = isExactActive.value;\n                linkContextDevtools.error = isRouteLocation(unref(props.to))\n                    ? null\n                    : 'Invalid \"to\" value';\n            }, { flush: 'post' });\n        }\n    }\n    /**\n     * NOTE: update {@link _RouterLinkI}'s `$slots` type when updating this\n     */\n    return {\n        route,\n        href: computed(() => route.value.href),\n        isActive,\n        isExactActive,\n        navigate,\n    };\n}\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\n    name: 'RouterLink',\n    compatConfig: { MODE: 3 },\n    props: {\n        to: {\n            type: [String, Object],\n            required: true,\n        },\n        replace: Boolean,\n        activeClass: String,\n        // inactiveClass: String,\n        exactActiveClass: String,\n        custom: Boolean,\n        ariaCurrentValue: {\n            type: String,\n            default: 'page',\n        },\n    },\n    useLink,\n    setup(props, { slots }) {\n        const link = reactive(useLink(props));\n        const { options } = inject(routerKey);\n        const elClass = computed(() => ({\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\n            // [getLinkClass(\n            //   props.inactiveClass,\n            //   options.linkInactiveClass,\n            //   'router-link-inactive'\n            // )]: !link.isExactActive,\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\n        }));\n        return () => {\n            const children = slots.default && slots.default(link);\n            return props.custom\n                ? children\n                : h('a', {\n                    'aria-current': link.isExactActive\n                        ? props.ariaCurrentValue\n                        : null,\n                    href: link.href,\n                    // this would override user added attrs but Vue will still add\n                    // the listener, so we end up triggering both\n                    onClick: link.navigate,\n                    class: elClass.value,\n                }, children);\n        };\n    },\n});\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\n/**\n * Component to render a link that triggers a navigation on click.\n */\nconst RouterLink = RouterLinkImpl;\nfunction guardEvent(e) {\n    // don't redirect with control keys\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n        return;\n    // don't redirect when preventDefault called\n    if (e.defaultPrevented)\n        return;\n    // don't redirect on right click\n    if (e.button !== undefined && e.button !== 0)\n        return;\n    // don't redirect if `target=\"_blank\"`\n    // @ts-expect-error getAttribute does exist\n    if (e.currentTarget && e.currentTarget.getAttribute) {\n        // @ts-expect-error getAttribute exists\n        const target = e.currentTarget.getAttribute('target');\n        if (/\\b_blank\\b/i.test(target))\n            return;\n    }\n    // this may be a Weex event which doesn't have this method\n    if (e.preventDefault)\n        e.preventDefault();\n    return true;\n}\nfunction includesParams(outer, inner) {\n    for (const key in inner) {\n        const innerValue = inner[key];\n        const outerValue = outer[key];\n        if (typeof innerValue === 'string') {\n            if (innerValue !== outerValue)\n                return false;\n        }\n        else {\n            if (!isArray(outerValue) ||\n                outerValue.length !== innerValue.length ||\n                innerValue.some((value, i) => value !== outerValue[i]))\n                return false;\n        }\n    }\n    return true;\n}\n/**\n * Get the original path value of a record by following its aliasOf\n * @param record\n */\nfunction getOriginalPath(record) {\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\n}\n/**\n * Utility class to get the active class based on defaults.\n * @param propClass\n * @param globalClass\n * @param defaultClass\n */\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\n    ? propClass\n    : globalClass != null\n        ? globalClass\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\n    name: 'RouterView',\n    // #674 we manually inherit them\n    inheritAttrs: false,\n    props: {\n        name: {\n            type: String,\n            default: 'default',\n        },\n        route: Object,\n    },\n    // Better compat for @vue/compat users\n    // https://github.com/vuejs/router/issues/1315\n    compatConfig: { MODE: 3 },\n    setup(props, { attrs, slots }) {\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\n        const injectedRoute = inject(routerViewLocationKey);\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\n        const injectedDepth = inject(viewDepthKey, 0);\n        // The depth changes based on empty components option, which allows passthrough routes e.g. routes with children\n        // that are used to reuse the `path` property\n        const depth = computed(() => {\n            let initialDepth = unref(injectedDepth);\n            const { matched } = routeToDisplay.value;\n            let matchedRoute;\n            while ((matchedRoute = matched[initialDepth]) &&\n                !matchedRoute.components) {\n                initialDepth++;\n            }\n            return initialDepth;\n        });\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth.value]);\n        provide(viewDepthKey, computed(() => depth.value + 1));\n        provide(matchedRouteKey, matchedRouteRef);\n        provide(routerViewLocationKey, routeToDisplay);\n        const viewRef = ref();\n        // watch at the same time the component instance, the route record we are\n        // rendering, and the name\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\n            // copy reused instances\n            if (to) {\n                // this will update the instance for new instances as well as reused\n                // instances when navigating to a new route\n                to.instances[name] = instance;\n                // the component instance is reused for a different route or name, so\n                // we copy any saved update or leave guards. With async setup, the\n                // mounting component will mount before the matchedRoute changes,\n                // making instance === oldInstance, so we check if guards have been\n                // added before. This works because we remove guards when\n                // unmounting/deactivating components\n                if (from && from !== to && instance && instance === oldInstance) {\n                    if (!to.leaveGuards.size) {\n                        to.leaveGuards = from.leaveGuards;\n                    }\n                    if (!to.updateGuards.size) {\n                        to.updateGuards = from.updateGuards;\n                    }\n                }\n            }\n            // trigger beforeRouteEnter next callbacks\n            if (instance &&\n                to &&\n                // if there is no instance but to and from are the same this might be\n                // the first visit\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\n            }\n        }, { flush: 'post' });\n        return () => {\n            const route = routeToDisplay.value;\n            // we need the value at the time we render because when we unmount, we\n            // navigated to a different location so the value is different\n            const currentName = props.name;\n            const matchedRoute = matchedRouteRef.value;\n            const ViewComponent = matchedRoute && matchedRoute.components[currentName];\n            if (!ViewComponent) {\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\n            }\n            // props from route configuration\n            const routePropsOption = matchedRoute.props[currentName];\n            const routeProps = routePropsOption\n                ? routePropsOption === true\n                    ? route.params\n                    : typeof routePropsOption === 'function'\n                        ? routePropsOption(route)\n                        : routePropsOption\n                : null;\n            const onVnodeUnmounted = vnode => {\n                // remove the instance reference to prevent leak\n                if (vnode.component.isUnmounted) {\n                    matchedRoute.instances[currentName] = null;\n                }\n            };\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\n                onVnodeUnmounted,\n                ref: viewRef,\n            }));\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) &&\n                isBrowser &&\n                component.ref) {\n                // TODO: can display if it's an alias, its props\n                const info = {\n                    depth: depth.value,\n                    name: matchedRoute.name,\n                    path: matchedRoute.path,\n                    meta: matchedRoute.meta,\n                };\n                const internalInstances = isArray(component.ref)\n                    ? component.ref.map(r => r.i)\n                    : [component.ref.i];\n                internalInstances.forEach(instance => {\n                    // @ts-expect-error\n                    instance.__vrv_devtools = info;\n                });\n            }\n            return (\n            // pass the vnode to the slot as a prop.\n            // h and <component :is=\"...\"> both accept vnodes\n            normalizeSlot(slots.default, { Component: component, route }) ||\n                component);\n        };\n    },\n});\nfunction normalizeSlot(slot, data) {\n    if (!slot)\n        return null;\n    const slotContent = slot(data);\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\n}\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\n/**\n * Component to display the current route the user is at.\n */\nconst RouterView = RouterViewImpl;\n// warn against deprecated usage with <transition> & <keep-alive>\n// due to functional component being no longer eager in Vue 3\nfunction warnDeprecatedUsage() {\n    const instance = getCurrentInstance();\n    const parentName = instance.parent && instance.parent.type.name;\n    const parentSubTreeType = instance.parent && instance.parent.subTree && instance.parent.subTree.type;\n    if (parentName &&\n        (parentName === 'KeepAlive' || parentName.includes('Transition')) &&\n        typeof parentSubTreeType === 'object' &&\n        parentSubTreeType.name === 'RouterView') {\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\n            `Use slot props instead:\\n\\n` +\n            `<router-view v-slot=\"{ Component }\">\\n` +\n            `  <${comp}>\\n` +\n            `    <component :is=\"Component\" />\\n` +\n            `  </${comp}>\\n` +\n            `</router-view>`);\n    }\n}\n\n/**\n * Copies a route location and removes any problematic properties that cannot be shown in devtools (e.g. Vue instances).\n *\n * @param routeLocation - routeLocation to format\n * @param tooltip - optional tooltip\n * @returns a copy of the routeLocation\n */\nfunction formatRouteLocation(routeLocation, tooltip) {\n    const copy = assign({}, routeLocation, {\n        // remove variables that can contain vue instances\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\n    });\n    return {\n        _custom: {\n            type: null,\n            readOnly: true,\n            display: routeLocation.fullPath,\n            tooltip,\n            value: copy,\n        },\n    };\n}\nfunction formatDisplay(display) {\n    return {\n        _custom: {\n            display,\n        },\n    };\n}\n// to support multiple router instances\nlet routerId = 0;\nfunction addDevtools(app, router, matcher) {\n    // Take over router.beforeEach and afterEach\n    // make sure we are not registering the devtool twice\n    if (router.__hasDevtools)\n        return;\n    router.__hasDevtools = true;\n    // increment to support multiple router instances\n    const id = routerId++;\n    setupDevtoolsPlugin({\n        id: 'org.vuejs.router' + (id ? '.' + id : ''),\n        label: 'Vue Router',\n        packageName: 'vue-router',\n        homepage: 'https://router.vuejs.org',\n        logo: 'https://router.vuejs.org/logo.png',\n        componentStateTypes: ['Routing'],\n        app,\n    }, api => {\n        if (typeof api.now !== 'function') {\n            console.warn('[Vue Router]: You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\n        }\n        // display state added by the router\n        api.on.inspectComponent((payload, ctx) => {\n            if (payload.instanceData) {\n                payload.instanceData.state.push({\n                    type: 'Routing',\n                    key: '$route',\n                    editable: false,\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\n                });\n            }\n        });\n        // mark router-link as active and display tags on router views\n        api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {\n            if (componentInstance.__vrv_devtools) {\n                const info = componentInstance.__vrv_devtools;\n                node.tags.push({\n                    label: (info.name ? `${info.name.toString()}: ` : '') + info.path,\n                    textColor: 0,\n                    tooltip: 'This component is rendered by &lt;router-view&gt;',\n                    backgroundColor: PINK_500,\n                });\n            }\n            // if multiple useLink are used\n            if (isArray(componentInstance.__vrl_devtools)) {\n                componentInstance.__devtoolsApi = api;\n                componentInstance.__vrl_devtools.forEach(devtoolsData => {\n                    let label = devtoolsData.route.path;\n                    let backgroundColor = ORANGE_400;\n                    let tooltip = '';\n                    let textColor = 0;\n                    if (devtoolsData.error) {\n                        label = devtoolsData.error;\n                        backgroundColor = RED_100;\n                        textColor = RED_700;\n                    }\n                    else if (devtoolsData.isExactActive) {\n                        backgroundColor = LIME_500;\n                        tooltip = 'This is exactly active';\n                    }\n                    else if (devtoolsData.isActive) {\n                        backgroundColor = BLUE_600;\n                        tooltip = 'This link is active';\n                    }\n                    node.tags.push({\n                        label,\n                        textColor,\n                        tooltip,\n                        backgroundColor,\n                    });\n                });\n            }\n        });\n        watch(router.currentRoute, () => {\n            // refresh active state\n            refreshRoutesView();\n            api.notifyComponentUpdate();\n            api.sendInspectorTree(routerInspectorId);\n            api.sendInspectorState(routerInspectorId);\n        });\n        const navigationsLayerId = 'router:navigations:' + id;\n        api.addTimelineLayer({\n            id: navigationsLayerId,\n            label: `Router${id ? ' ' + id : ''} Navigations`,\n            color: 0x40a8c4,\n        });\n        // const errorsLayerId = 'router:errors'\n        // api.addTimelineLayer({\n        //   id: errorsLayerId,\n        //   label: 'Router Errors',\n        //   color: 0xea5455,\n        // })\n        router.onError((error, to) => {\n            api.addTimelineEvent({\n                layerId: navigationsLayerId,\n                event: {\n                    title: 'Error during Navigation',\n                    subtitle: to.fullPath,\n                    logType: 'error',\n                    time: api.now(),\n                    data: { error },\n                    groupId: to.meta.__navigationId,\n                },\n            });\n        });\n        // attached to `meta` and used to group events\n        let navigationId = 0;\n        router.beforeEach((to, from) => {\n            const data = {\n                guard: formatDisplay('beforeEach'),\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\n                to: formatRouteLocation(to, 'Target location'),\n            };\n            // Used to group navigations together, hide from devtools\n            Object.defineProperty(to.meta, '__navigationId', {\n                value: navigationId++,\n            });\n            api.addTimelineEvent({\n                layerId: navigationsLayerId,\n                event: {\n                    time: api.now(),\n                    title: 'Start of navigation',\n                    subtitle: to.fullPath,\n                    data,\n                    groupId: to.meta.__navigationId,\n                },\n            });\n        });\n        router.afterEach((to, from, failure) => {\n            const data = {\n                guard: formatDisplay('afterEach'),\n            };\n            if (failure) {\n                data.failure = {\n                    _custom: {\n                        type: Error,\n                        readOnly: true,\n                        display: failure ? failure.message : '',\n                        tooltip: 'Navigation Failure',\n                        value: failure,\n                    },\n                };\n                data.status = formatDisplay('❌');\n            }\n            else {\n                data.status = formatDisplay('✅');\n            }\n            // we set here to have the right order\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\n            data.to = formatRouteLocation(to, 'Target location');\n            api.addTimelineEvent({\n                layerId: navigationsLayerId,\n                event: {\n                    title: 'End of navigation',\n                    subtitle: to.fullPath,\n                    time: api.now(),\n                    data,\n                    logType: failure ? 'warning' : 'default',\n                    groupId: to.meta.__navigationId,\n                },\n            });\n        });\n        /**\n         * Inspector of Existing routes\n         */\n        const routerInspectorId = 'router-inspector:' + id;\n        api.addInspector({\n            id: routerInspectorId,\n            label: 'Routes' + (id ? ' ' + id : ''),\n            icon: 'book',\n            treeFilterPlaceholder: 'Search routes',\n        });\n        function refreshRoutesView() {\n            // the routes view isn't active\n            if (!activeRoutesPayload)\n                return;\n            const payload = activeRoutesPayload;\n            // children routes will appear as nested\n            let routes = matcher.getRoutes().filter(route => !route.parent ||\n                // these routes have a parent with no component which will not appear in the view\n                // therefore we still need to include them\n                !route.parent.record.components);\n            // reset match state to false\n            routes.forEach(resetMatchStateOnRouteRecord);\n            // apply a match state if there is a payload\n            if (payload.filter) {\n                routes = routes.filter(route => \n                // save matches state based on the payload\n                isRouteMatching(route, payload.filter.toLowerCase()));\n            }\n            // mark active routes\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\n        }\n        let activeRoutesPayload;\n        api.on.getInspectorTree(payload => {\n            activeRoutesPayload = payload;\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\n                refreshRoutesView();\n            }\n        });\n        /**\n         * Display information about the currently selected route record\n         */\n        api.on.getInspectorState(payload => {\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\n                const routes = matcher.getRoutes();\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\n                if (route) {\n                    payload.state = {\n                        options: formatRouteRecordMatcherForStateInspector(route),\n                    };\n                }\n            }\n        });\n        api.sendInspectorTree(routerInspectorId);\n        api.sendInspectorState(routerInspectorId);\n    });\n}\nfunction modifierForKey(key) {\n    if (key.optional) {\n        return key.repeatable ? '*' : '?';\n    }\n    else {\n        return key.repeatable ? '+' : '';\n    }\n}\nfunction formatRouteRecordMatcherForStateInspector(route) {\n    const { record } = route;\n    const fields = [\n        { editable: false, key: 'path', value: record.path },\n    ];\n    if (record.name != null) {\n        fields.push({\n            editable: false,\n            key: 'name',\n            value: record.name,\n        });\n    }\n    fields.push({ editable: false, key: 'regexp', value: route.re });\n    if (route.keys.length) {\n        fields.push({\n            editable: false,\n            key: 'keys',\n            value: {\n                _custom: {\n                    type: null,\n                    readOnly: true,\n                    display: route.keys\n                        .map(key => `${key.name}${modifierForKey(key)}`)\n                        .join(' '),\n                    tooltip: 'Param keys',\n                    value: route.keys,\n                },\n            },\n        });\n    }\n    if (record.redirect != null) {\n        fields.push({\n            editable: false,\n            key: 'redirect',\n            value: record.redirect,\n        });\n    }\n    if (route.alias.length) {\n        fields.push({\n            editable: false,\n            key: 'aliases',\n            value: route.alias.map(alias => alias.record.path),\n        });\n    }\n    if (Object.keys(route.record.meta).length) {\n        fields.push({\n            editable: false,\n            key: 'meta',\n            value: route.record.meta,\n        });\n    }\n    fields.push({\n        key: 'score',\n        editable: false,\n        value: {\n            _custom: {\n                type: null,\n                readOnly: true,\n                display: route.score.map(score => score.join(', ')).join(' | '),\n                tooltip: 'Score used to sort routes',\n                value: route.score,\n            },\n        },\n    });\n    return fields;\n}\n/**\n * Extracted from tailwind palette\n */\nconst PINK_500 = 0xec4899;\nconst BLUE_600 = 0x2563eb;\nconst LIME_500 = 0x84cc16;\nconst CYAN_400 = 0x22d3ee;\nconst ORANGE_400 = 0xfb923c;\n// const GRAY_100 = 0xf4f4f5\nconst DARK = 0x666666;\nconst RED_100 = 0xfee2e2;\nconst RED_700 = 0xb91c1c;\nfunction formatRouteRecordForInspector(route) {\n    const tags = [];\n    const { record } = route;\n    if (record.name != null) {\n        tags.push({\n            label: String(record.name),\n            textColor: 0,\n            backgroundColor: CYAN_400,\n        });\n    }\n    if (record.aliasOf) {\n        tags.push({\n            label: 'alias',\n            textColor: 0,\n            backgroundColor: ORANGE_400,\n        });\n    }\n    if (route.__vd_match) {\n        tags.push({\n            label: 'matches',\n            textColor: 0,\n            backgroundColor: PINK_500,\n        });\n    }\n    if (route.__vd_exactActive) {\n        tags.push({\n            label: 'exact',\n            textColor: 0,\n            backgroundColor: LIME_500,\n        });\n    }\n    if (route.__vd_active) {\n        tags.push({\n            label: 'active',\n            textColor: 0,\n            backgroundColor: BLUE_600,\n        });\n    }\n    if (record.redirect) {\n        tags.push({\n            label: typeof record.redirect === 'string'\n                ? `redirect: ${record.redirect}`\n                : 'redirects',\n            textColor: 0xffffff,\n            backgroundColor: DARK,\n        });\n    }\n    // add an id to be able to select it. Using the `path` is not possible because\n    // empty path children would collide with their parents\n    let id = record.__vd_id;\n    if (id == null) {\n        id = String(routeRecordId++);\n        record.__vd_id = id;\n    }\n    return {\n        id,\n        label: record.path,\n        tags,\n        children: route.children.map(formatRouteRecordForInspector),\n    };\n}\n//  incremental id for route records and inspector state\nlet routeRecordId = 0;\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\nfunction markRouteRecordActive(route, currentRoute) {\n    // no route will be active if matched is empty\n    // reset the matching state\n    const isExactActive = currentRoute.matched.length &&\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\n    route.__vd_exactActive = route.__vd_active = isExactActive;\n    if (!isExactActive) {\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\n    }\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\n}\nfunction resetMatchStateOnRouteRecord(route) {\n    route.__vd_match = false;\n    route.children.forEach(resetMatchStateOnRouteRecord);\n}\nfunction isRouteMatching(route, filter) {\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\n    route.__vd_match = false;\n    if (!found || found.length < 3) {\n        return false;\n    }\n    // use a regexp without $ at the end to match nested routes better\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\n    if (nonEndingRE.test(filter)) {\n        // mark children as matches\n        route.children.forEach(child => isRouteMatching(child, filter));\n        // exception case: `/`\n        if (route.record.path !== '/' || filter === '/') {\n            route.__vd_match = route.re.test(filter);\n            return true;\n        }\n        // hide the / route\n        return false;\n    }\n    const path = route.record.path.toLowerCase();\n    const decodedPath = decode(path);\n    // also allow partial matching on the path\n    if (!filter.startsWith('/') &&\n        (decodedPath.includes(filter) || path.includes(filter)))\n        return true;\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\n        return true;\n    if (route.record.name && String(route.record.name).includes(filter))\n        return true;\n    return route.children.some(child => isRouteMatching(child, filter));\n}\nfunction omit(obj, keys) {\n    const ret = {};\n    for (const key in obj) {\n        if (!keys.includes(key)) {\n            // @ts-expect-error\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n}\n\n/**\n * Creates a Router instance that can be used by a Vue app.\n *\n * @param options - {@link RouterOptions}\n */\nfunction createRouter(options) {\n    const matcher = createRouterMatcher(options.routes, options);\n    const parseQuery$1 = options.parseQuery || parseQuery;\n    const stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\n    const routerHistory = options.history;\n    if ((process.env.NODE_ENV !== 'production') && !routerHistory)\n        throw new Error('Provide the \"history\" option when calling \"createRouter()\":' +\n            ' https://router.vuejs.org/api/interfaces/RouterOptions.html#history');\n    const beforeGuards = useCallbacks();\n    const beforeResolveGuards = useCallbacks();\n    const afterGuards = useCallbacks();\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\n    let pendingLocation = START_LOCATION_NORMALIZED;\n    // leave the scrollRestoration if no scrollBehavior is provided\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\n        history.scrollRestoration = 'manual';\n    }\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\n    const encodeParams = applyToParams.bind(null, encodeParam);\n    const decodeParams = \n    // @ts-expect-error: intentionally avoid the type check\n    applyToParams.bind(null, decode);\n    function addRoute(parentOrRoute, route) {\n        let parent;\n        let record;\n        if (isRouteName(parentOrRoute)) {\n            parent = matcher.getRecordMatcher(parentOrRoute);\n            if ((process.env.NODE_ENV !== 'production') && !parent) {\n                warn(`Parent route \"${String(parentOrRoute)}\" not found when adding child route`, route);\n            }\n            record = route;\n        }\n        else {\n            record = parentOrRoute;\n        }\n        return matcher.addRoute(record, parent);\n    }\n    function removeRoute(name) {\n        const recordMatcher = matcher.getRecordMatcher(name);\n        if (recordMatcher) {\n            matcher.removeRoute(recordMatcher);\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\n        }\n    }\n    function getRoutes() {\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\n    }\n    function hasRoute(name) {\n        return !!matcher.getRecordMatcher(name);\n    }\n    function resolve(rawLocation, currentLocation) {\n        // const resolve: Router['resolve'] = (rawLocation: RouteLocationRaw, currentLocation) => {\n        // const objectLocation = routerLocationAsObject(rawLocation)\n        // we create a copy to modify it later\n        currentLocation = assign({}, currentLocation || currentRoute.value);\n        if (typeof rawLocation === 'string') {\n            const locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\n            const matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\n            const href = routerHistory.createHref(locationNormalized.fullPath);\n            if ((process.env.NODE_ENV !== 'production')) {\n                if (href.startsWith('//'))\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\n                else if (!matchedRoute.matched.length) {\n                    warn(`No match found for location with path \"${rawLocation}\"`);\n                }\n            }\n            // locationNormalized is always a new object\n            return assign(locationNormalized, matchedRoute, {\n                params: decodeParams(matchedRoute.params),\n                hash: decode(locationNormalized.hash),\n                redirectedFrom: undefined,\n                href,\n            });\n        }\n        if ((process.env.NODE_ENV !== 'production') && !isRouteLocation(rawLocation)) {\n            warn(`router.resolve() was passed an invalid location. This will fail in production.\\n- Location:`, rawLocation);\n            return resolve({});\n        }\n        let matcherLocation;\n        // path could be relative in object as well\n        if (rawLocation.path != null) {\n            if ((process.env.NODE_ENV !== 'production') &&\n                'params' in rawLocation &&\n                !('name' in rawLocation) &&\n                // @ts-expect-error: the type is never\n                Object.keys(rawLocation.params).length) {\n                warn(`Path \"${rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\n            }\n            matcherLocation = assign({}, rawLocation, {\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\n            });\n        }\n        else {\n            // remove any nullish param\n            const targetParams = assign({}, rawLocation.params);\n            for (const key in targetParams) {\n                if (targetParams[key] == null) {\n                    delete targetParams[key];\n                }\n            }\n            // pass encoded values to the matcher, so it can produce encoded path and fullPath\n            matcherLocation = assign({}, rawLocation, {\n                params: encodeParams(targetParams),\n            });\n            // current location params are decoded, we need to encode them in case the\n            // matcher merges the params\n            currentLocation.params = encodeParams(currentLocation.params);\n        }\n        const matchedRoute = matcher.resolve(matcherLocation, currentLocation);\n        const hash = rawLocation.hash || '';\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\n        }\n        // the matcher might have merged current location params, so\n        // we need to run the decoding again\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\n            hash: encodeHash(hash),\n            path: matchedRoute.path,\n        }));\n        const href = routerHistory.createHref(fullPath);\n        if ((process.env.NODE_ENV !== 'production')) {\n            if (href.startsWith('//')) {\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\n            }\n            else if (!matchedRoute.matched.length) {\n                warn(`No match found for location with path \"${rawLocation.path != null ? rawLocation.path : rawLocation}\"`);\n            }\n        }\n        return assign({\n            fullPath,\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\n            // hash\n            hash,\n            query: \n            // if the user is using a custom query lib like qs, we might have\n            // nested objects, so we keep the query as is, meaning it can contain\n            // numbers at `$route.query`, but at the point, the user will have to\n            // use their own type anyway.\n            // https://github.com/vuejs/router/issues/328#issuecomment-649481567\n            stringifyQuery$1 === stringifyQuery\n                ? normalizeQuery(rawLocation.query)\n                : (rawLocation.query || {}),\n        }, matchedRoute, {\n            redirectedFrom: undefined,\n            href,\n        });\n    }\n    function locationAsObject(to) {\n        return typeof to === 'string'\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\n            : assign({}, to);\n    }\n    function checkCanceledNavigation(to, from) {\n        if (pendingLocation !== to) {\n            return createRouterError(8 /* ErrorTypes.NAVIGATION_CANCELLED */, {\n                from,\n                to,\n            });\n        }\n    }\n    function push(to) {\n        return pushWithRedirect(to);\n    }\n    function replace(to) {\n        return push(assign(locationAsObject(to), { replace: true }));\n    }\n    function handleRedirectRecord(to) {\n        const lastMatched = to.matched[to.matched.length - 1];\n        if (lastMatched && lastMatched.redirect) {\n            const { redirect } = lastMatched;\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\n            if (typeof newTargetLocation === 'string') {\n                newTargetLocation =\n                    newTargetLocation.includes('?') || newTargetLocation.includes('#')\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\n                        : // force empty params\n                            { path: newTargetLocation };\n                // @ts-expect-error: force empty params when a string is passed to let\n                // the router parse them again\n                newTargetLocation.params = {};\n            }\n            if ((process.env.NODE_ENV !== 'production') &&\n                newTargetLocation.path == null &&\n                !('name' in newTargetLocation)) {\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\n                throw new Error('Invalid redirect');\n            }\n            return assign({\n                query: to.query,\n                hash: to.hash,\n                // avoid transferring params if the redirect has a path\n                params: newTargetLocation.path != null ? {} : to.params,\n            }, newTargetLocation);\n        }\n    }\n    function pushWithRedirect(to, redirectedFrom) {\n        const targetLocation = (pendingLocation = resolve(to));\n        const from = currentRoute.value;\n        const data = to.state;\n        const force = to.force;\n        // to could be a string where `replace` is a function\n        const replace = to.replace === true;\n        const shouldRedirect = handleRedirectRecord(targetLocation);\n        if (shouldRedirect)\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\n                state: typeof shouldRedirect === 'object'\n                    ? assign({}, data, shouldRedirect.state)\n                    : data,\n                force,\n                replace,\n            }), \n            // keep original redirectedFrom if it exists\n            redirectedFrom || targetLocation);\n        // if it was a redirect we already called `pushWithRedirect` above\n        const toLocation = targetLocation;\n        toLocation.redirectedFrom = redirectedFrom;\n        let failure;\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\n            failure = createRouterError(16 /* ErrorTypes.NAVIGATION_DUPLICATED */, { to: toLocation, from });\n            // trigger scroll to allow scrolling to the same anchor\n            handleScroll(from, from, \n            // this is a push, the only way for it to be triggered from a\n            // history.listen is with a redirect, which makes it become a push\n            true, \n            // This cannot be the first navigation because the initial location\n            // cannot be manually navigated to\n            false);\n        }\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\n            .catch((error) => isNavigationFailure(error)\n            ? // navigation redirects still mark the router as ready\n                isNavigationFailure(error, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)\n                    ? error\n                    : markAsReady(error) // also returns the error\n            : // reject any unknown error\n                triggerError(error, toLocation, from))\n            .then((failure) => {\n            if (failure) {\n                if (isNavigationFailure(failure, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)) {\n                    if ((process.env.NODE_ENV !== 'production') &&\n                        // we are redirecting to the same location we were already at\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\n                        // and we have done it a couple of times\n                        redirectedFrom &&\n                        // @ts-expect-error: added only in dev\n                        (redirectedFrom._count = redirectedFrom._count\n                            ? // @ts-expect-error\n                                redirectedFrom._count + 1\n                            : 1) > 30) {\n                        warn(`Detected a possibly infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow.\\n Are you always returning a new location within a navigation guard? That would lead to this error. Only return when redirecting or aborting, that should fix this. This might break in production if not fixed.`);\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\n                    }\n                    return pushWithRedirect(\n                    // keep options\n                    assign({\n                        // preserve an existing replacement but allow the redirect to override it\n                        replace,\n                    }, locationAsObject(failure.to), {\n                        state: typeof failure.to === 'object'\n                            ? assign({}, data, failure.to.state)\n                            : data,\n                        force,\n                    }), \n                    // preserve the original redirectedFrom if any\n                    redirectedFrom || toLocation);\n                }\n            }\n            else {\n                // if we fail we don't finalize the navigation\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\n            }\n            triggerAfterEach(toLocation, from, failure);\n            return failure;\n        });\n    }\n    /**\n     * Helper to reject and skip all navigation guards if a new navigation happened\n     * @param to\n     * @param from\n     */\n    function checkCanceledNavigationAndReject(to, from) {\n        const error = checkCanceledNavigation(to, from);\n        return error ? Promise.reject(error) : Promise.resolve();\n    }\n    function runWithContext(fn) {\n        const app = installedApps.values().next().value;\n        // support Vue < 3.3\n        return app && typeof app.runWithContext === 'function'\n            ? app.runWithContext(fn)\n            : fn();\n    }\n    // TODO: refactor the whole before guards by internally using router.beforeEach\n    function navigate(to, from) {\n        let guards;\n        const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from);\n        // all components here have been resolved once because we are leaving\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\n        // leavingRecords is already reversed\n        for (const record of leavingRecords) {\n            record.leaveGuards.forEach(guard => {\n                guards.push(guardToPromiseFn(guard, to, from));\n            });\n        }\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\n        guards.push(canceledNavigationCheck);\n        // run the queue of per route beforeRouteLeave guards\n        return (runGuardQueue(guards)\n            .then(() => {\n            // check global guards beforeEach\n            guards = [];\n            for (const guard of beforeGuards.list()) {\n                guards.push(guardToPromiseFn(guard, to, from));\n            }\n            guards.push(canceledNavigationCheck);\n            return runGuardQueue(guards);\n        })\n            .then(() => {\n            // check in components beforeRouteUpdate\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\n            for (const record of updatingRecords) {\n                record.updateGuards.forEach(guard => {\n                    guards.push(guardToPromiseFn(guard, to, from));\n                });\n            }\n            guards.push(canceledNavigationCheck);\n            // run the queue of per route beforeEnter guards\n            return runGuardQueue(guards);\n        })\n            .then(() => {\n            // check the route beforeEnter\n            guards = [];\n            for (const record of enteringRecords) {\n                // do not trigger beforeEnter on reused views\n                if (record.beforeEnter) {\n                    if (isArray(record.beforeEnter)) {\n                        for (const beforeEnter of record.beforeEnter)\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\n                    }\n                    else {\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\n                    }\n                }\n            }\n            guards.push(canceledNavigationCheck);\n            // run the queue of per route beforeEnter guards\n            return runGuardQueue(guards);\n        })\n            .then(() => {\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\n            to.matched.forEach(record => (record.enterCallbacks = {}));\n            // check in-component beforeRouteEnter\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from, runWithContext);\n            guards.push(canceledNavigationCheck);\n            // run the queue of per route beforeEnter guards\n            return runGuardQueue(guards);\n        })\n            .then(() => {\n            // check global guards beforeResolve\n            guards = [];\n            for (const guard of beforeResolveGuards.list()) {\n                guards.push(guardToPromiseFn(guard, to, from));\n            }\n            guards.push(canceledNavigationCheck);\n            return runGuardQueue(guards);\n        })\n            // catch any navigation canceled\n            .catch(err => isNavigationFailure(err, 8 /* ErrorTypes.NAVIGATION_CANCELLED */)\n            ? err\n            : Promise.reject(err)));\n    }\n    function triggerAfterEach(to, from, failure) {\n        // navigation is confirmed, call afterGuards\n        // TODO: wrap with error handlers\n        afterGuards\n            .list()\n            .forEach(guard => runWithContext(() => guard(to, from, failure)));\n    }\n    /**\n     * - Cleans up any navigation guards\n     * - Changes the url if necessary\n     * - Calls the scrollBehavior\n     */\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\n        // a more recent navigation took place\n        const error = checkCanceledNavigation(toLocation, from);\n        if (error)\n            return error;\n        // only consider as push if it's not the first navigation\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\n        const state = !isBrowser ? {} : history.state;\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\n        // it's just reflecting the url\n        if (isPush) {\n            // on the initial navigation, we want to reuse the scroll position from\n            // history state if it exists\n            if (replace || isFirstNavigation)\n                routerHistory.replace(toLocation.fullPath, assign({\n                    scroll: isFirstNavigation && state && state.scroll,\n                }, data));\n            else\n                routerHistory.push(toLocation.fullPath, data);\n        }\n        // accept current navigation\n        currentRoute.value = toLocation;\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\n        markAsReady();\n    }\n    let removeHistoryListener;\n    // attach listener to history to trigger navigations\n    function setupListeners() {\n        // avoid setting up listeners twice due to an invalid first navigation\n        if (removeHistoryListener)\n            return;\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\n            if (!router.listening)\n                return;\n            // cannot be a redirect route because it was in history\n            const toLocation = resolve(to);\n            // due to dynamic routing, and to hash history with manual navigation\n            // (manually changing the url or calling history.hash = '#/somewhere'),\n            // there could be a redirect record in history\n            const shouldRedirect = handleRedirectRecord(toLocation);\n            if (shouldRedirect) {\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\n                return;\n            }\n            pendingLocation = toLocation;\n            const from = currentRoute.value;\n            // TODO: should be moved to web history?\n            if (isBrowser) {\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\n            }\n            navigate(toLocation, from)\n                .catch((error) => {\n                if (isNavigationFailure(error, 4 /* ErrorTypes.NAVIGATION_ABORTED */ | 8 /* ErrorTypes.NAVIGATION_CANCELLED */)) {\n                    return error;\n                }\n                if (isNavigationFailure(error, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)) {\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\n                    // false) but this is bug prone as we have no way to wait the\n                    // navigation to be finished before calling pushWithRedirect. Using\n                    // a setTimeout of 16ms seems to work but there is no guarantee for\n                    // it to work on every browser. So instead we do not restore the\n                    // history entry and trigger a new navigation as requested by the\n                    // navigation guard.\n                    // the error is already handled by router.push we just want to avoid\n                    // logging the error\n                    pushWithRedirect(error.to, toLocation\n                    // avoid an uncaught rejection, let push call triggerError\n                    )\n                        .then(failure => {\n                        // manual change in hash history #916 ending up in the URL not\n                        // changing, but it was changed by the manual url change, so we\n                        // need to manually change it ourselves\n                        if (isNavigationFailure(failure, 4 /* ErrorTypes.NAVIGATION_ABORTED */ |\n                            16 /* ErrorTypes.NAVIGATION_DUPLICATED */) &&\n                            !info.delta &&\n                            info.type === NavigationType.pop) {\n                            routerHistory.go(-1, false);\n                        }\n                    })\n                        .catch(noop);\n                    // avoid the then branch\n                    return Promise.reject();\n                }\n                // do not restore history on unknown direction\n                if (info.delta) {\n                    routerHistory.go(-info.delta, false);\n                }\n                // unrecognized error, transfer to the global handler\n                return triggerError(error, toLocation, from);\n            })\n                .then((failure) => {\n                failure =\n                    failure ||\n                        finalizeNavigation(\n                        // after navigation, all matched components are resolved\n                        toLocation, from, false);\n                // revert the navigation\n                if (failure) {\n                    if (info.delta &&\n                        // a new navigation has been triggered, so we do not want to revert, that will change the current history\n                        // entry while a different route is displayed\n                        !isNavigationFailure(failure, 8 /* ErrorTypes.NAVIGATION_CANCELLED */)) {\n                        routerHistory.go(-info.delta, false);\n                    }\n                    else if (info.type === NavigationType.pop &&\n                        isNavigationFailure(failure, 4 /* ErrorTypes.NAVIGATION_ABORTED */ | 16 /* ErrorTypes.NAVIGATION_DUPLICATED */)) {\n                        // manual change in hash history #916\n                        // it's like a push but lacks the information of the direction\n                        routerHistory.go(-1, false);\n                    }\n                }\n                triggerAfterEach(toLocation, from, failure);\n            })\n                // avoid warnings in the console about uncaught rejections, they are logged by triggerErrors\n                .catch(noop);\n        });\n    }\n    // Initialization and Errors\n    let readyHandlers = useCallbacks();\n    let errorListeners = useCallbacks();\n    let ready;\n    /**\n     * Trigger errorListeners added via onError and throws the error as well\n     *\n     * @param error - error to throw\n     * @param to - location we were navigating to when the error happened\n     * @param from - location we were navigating from when the error happened\n     * @returns the error as a rejected promise\n     */\n    function triggerError(error, to, from) {\n        markAsReady(error);\n        const list = errorListeners.list();\n        if (list.length) {\n            list.forEach(handler => handler(error, to, from));\n        }\n        else {\n            if ((process.env.NODE_ENV !== 'production')) {\n                warn('uncaught error during route navigation:');\n            }\n            console.error(error);\n        }\n        // reject the error no matter there were error listeners or not\n        return Promise.reject(error);\n    }\n    function isReady() {\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\n            return Promise.resolve();\n        return new Promise((resolve, reject) => {\n            readyHandlers.add([resolve, reject]);\n        });\n    }\n    function markAsReady(err) {\n        if (!ready) {\n            // still not ready if an error happened\n            ready = !err;\n            setupListeners();\n            readyHandlers\n                .list()\n                .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\n            readyHandlers.reset();\n        }\n        return err;\n    }\n    // Scroll behavior\n    function handleScroll(to, from, isPush, isFirstNavigation) {\n        const { scrollBehavior } = options;\n        if (!isBrowser || !scrollBehavior)\n            return Promise.resolve();\n        const scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\n            ((isFirstNavigation || !isPush) &&\n                history.state &&\n                history.state.scroll) ||\n            null;\n        return nextTick()\n            .then(() => scrollBehavior(to, from, scrollPosition))\n            .then(position => position && scrollToPosition(position))\n            .catch(err => triggerError(err, to, from));\n    }\n    const go = (delta) => routerHistory.go(delta);\n    let started;\n    const installedApps = new Set();\n    const router = {\n        currentRoute,\n        listening: true,\n        addRoute,\n        removeRoute,\n        clearRoutes: matcher.clearRoutes,\n        hasRoute,\n        getRoutes,\n        resolve,\n        options,\n        push,\n        replace,\n        go,\n        back: () => go(-1),\n        forward: () => go(1),\n        beforeEach: beforeGuards.add,\n        beforeResolve: beforeResolveGuards.add,\n        afterEach: afterGuards.add,\n        onError: errorListeners.add,\n        isReady,\n        install(app) {\n            const router = this;\n            app.component('RouterLink', RouterLink);\n            app.component('RouterView', RouterView);\n            app.config.globalProperties.$router = router;\n            Object.defineProperty(app.config.globalProperties, '$route', {\n                enumerable: true,\n                get: () => unref(currentRoute),\n            });\n            // this initial navigation is only necessary on client, on server it doesn't\n            // make sense because it will create an extra unnecessary navigation and could\n            // lead to problems\n            if (isBrowser &&\n                // used for the initial navigation client side to avoid pushing\n                // multiple times when the router is used in multiple apps\n                !started &&\n                currentRoute.value === START_LOCATION_NORMALIZED) {\n                // see above\n                started = true;\n                push(routerHistory.location).catch(err => {\n                    if ((process.env.NODE_ENV !== 'production'))\n                        warn('Unexpected error when starting the router:', err);\n                });\n            }\n            const reactiveRoute = {};\n            for (const key in START_LOCATION_NORMALIZED) {\n                Object.defineProperty(reactiveRoute, key, {\n                    get: () => currentRoute.value[key],\n                    enumerable: true,\n                });\n            }\n            app.provide(routerKey, router);\n            app.provide(routeLocationKey, shallowReactive(reactiveRoute));\n            app.provide(routerViewLocationKey, currentRoute);\n            const unmountApp = app.unmount;\n            installedApps.add(app);\n            app.unmount = function () {\n                installedApps.delete(app);\n                // the router is not attached to an app anymore\n                if (installedApps.size < 1) {\n                    // invalidate the current navigation\n                    pendingLocation = START_LOCATION_NORMALIZED;\n                    removeHistoryListener && removeHistoryListener();\n                    removeHistoryListener = null;\n                    currentRoute.value = START_LOCATION_NORMALIZED;\n                    started = false;\n                    ready = false;\n                }\n                unmountApp();\n            };\n            // TODO: this probably needs to be updated so it can be used by vue-termui\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\n                addDevtools(app, router, matcher);\n            }\n        },\n    };\n    // TODO: type this as NavigationGuardReturn or similar instead of any\n    function runGuardQueue(guards) {\n        return guards.reduce((promise, guard) => promise.then(() => runWithContext(guard)), Promise.resolve());\n    }\n    return router;\n}\nfunction extractChangingRecords(to, from) {\n    const leavingRecords = [];\n    const updatingRecords = [];\n    const enteringRecords = [];\n    const len = Math.max(from.matched.length, to.matched.length);\n    for (let i = 0; i < len; i++) {\n        const recordFrom = from.matched[i];\n        if (recordFrom) {\n            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))\n                updatingRecords.push(recordFrom);\n            else\n                leavingRecords.push(recordFrom);\n        }\n        const recordTo = to.matched[i];\n        if (recordTo) {\n            // the type doesn't matter because we are comparing per reference\n            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\n                enteringRecords.push(recordTo);\n            }\n        }\n    }\n    return [leavingRecords, updatingRecords, enteringRecords];\n}\n\n/**\n * Returns the router instance. Equivalent to using `$router` inside\n * templates.\n */\nfunction useRouter() {\n    return inject(routerKey);\n}\n/**\n * Returns the current route location. Equivalent to using `$route` inside\n * templates.\n */\nfunction useRoute(_name) {\n    return inject(routeLocationKey);\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, loadRouteLocation, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","<template>\r\n  <div class=\"app-header header__top\">\r\n    <a\r\n      class=\"logo\"\r\n      href=\"https://doc.le5le.com/document/119359590\"\r\n      target=\"_blank\"\r\n    >\r\n      <img src=\"/favicon.ico\" />\r\n      <span>Meta2D</span>\r\n    </a>\r\n    <t-dropdown\r\n      :minColumnWidth=\"200\"\r\n      :maxHeight=\"560\"\r\n      overlayClassName=\"header-dropdown\"\r\n    >\r\n      <a> 文件 </a>\r\n      <t-dropdown-menu>\r\n        <t-dropdown-item @click=\"newFile\">\r\n          <a>新建文件</a>\r\n        </t-dropdown-item>\r\n        <t-dropdown-item @click=\"openFile\" divider=\"true\">\r\n          <a>打开文件</a>\r\n        </t-dropdown-item>\r\n\r\n        <t-dropdown-item divider=\"true\">\r\n          <a @click=\"downloadJson\">下载JSON文件</a>\r\n        </t-dropdown-item>\r\n\r\n        <t-dropdown-item>\r\n          <a @click=\"downloadPng\">下载为PNG</a>\r\n        </t-dropdown-item>\r\n        <t-dropdown-item>\r\n          <a @click=\"downloadSvg\">下载为SVG</a>\r\n        </t-dropdown-item>\r\n      </t-dropdown-menu>\r\n    </t-dropdown>\r\n    <t-dropdown\r\n      :minColumnWidth=\"180\"\r\n      :maxHeight=\"500\"\r\n      overlayClassName=\"header-dropdown\"\r\n    >\r\n      <a> 编辑 </a>\r\n      <t-dropdown-menu>\r\n        <t-dropdown-item>\r\n          <a @click=\"onUndo\">\r\n            <div class=\"flex\">\r\n              撤销 <span class=\"flex-grow\"></span> Ctrl + Z\r\n            </div>\r\n          </a>\r\n        </t-dropdown-item>\r\n        <t-dropdown-item divider=\"true\">\r\n          <a @click=\"onRedo\">\r\n            <div class=\"flex\">\r\n              恢复 <span class=\"flex-grow\"></span> Ctrl + Y\r\n            </div>\r\n          </a>\r\n        </t-dropdown-item>\r\n        <t-dropdown-item>\r\n          <a @click=\"onCut\">\r\n            <div class=\"flex\">\r\n              剪切 <span class=\"flex-grow\"></span> Ctrl + X\r\n            </div>\r\n          </a>\r\n        </t-dropdown-item>\r\n        <t-dropdown-item>\r\n          <a @click=\"onCopy\">\r\n            <div class=\"flex\">\r\n              复制 <span class=\"flex-grow\"></span> Ctrl + C\r\n            </div>\r\n          </a>\r\n        </t-dropdown-item>\r\n        <t-dropdown-item divider=\"true\">\r\n          <a @click=\"onPaste\">\r\n            <div class=\"flex\">\r\n              粘贴 <span class=\"flex-grow\"></span> Ctrl + V\r\n            </div>\r\n          </a>\r\n        </t-dropdown-item>\r\n        <t-dropdown-item>\r\n          <a @click=\"onAll\">\r\n            <div class=\"flex\">\r\n              全选 <span class=\"flex-grow\"></span> Ctrl + A\r\n            </div>\r\n          </a>\r\n        </t-dropdown-item>\r\n        <t-dropdown-item>\r\n          <a @click=\"onDelete\">\r\n            <div class=\"flex\">删除 <span class=\"flex-grow\"></span> DELETE</div>\r\n          </a>\r\n        </t-dropdown-item>\r\n      </t-dropdown-menu>\r\n    </t-dropdown>\r\n   \r\n    \r\n    <a class=\"logo\">\r\n      <span @click=\"customToolbarClick()\">添加/删除锚点</span>\r\n    </a>\r\n\r\n    <t-dropdown\r\n      :minColumnWidth=\"200\"\r\n      :maxHeight=\"560\"\r\n      overlayClassName=\"header-dropdown\"\r\n    >\r\n      <a> 批量选择图元 </a>\r\n      <t-dropdown-menu>\r\n        <t-dropdown-item @click=\"selectPens()\">\r\n          <a>节点</a>\r\n        </t-dropdown-item>\r\n        <t-dropdown-item @click=\"selectPens(1)\" divider=\"true\">\r\n          <a>连线</a>\r\n        </t-dropdown-item>\r\n        <t-dropdown-item @click=\"selectPens('none')\">\r\n          <a>取消</a>\r\n        </t-dropdown-item>\r\n      </t-dropdown-menu>\r\n    </t-dropdown>\r\n\r\n    <a class=\"logo\">\r\n      <t-tooltip content=\"选择 .svg 文件导入，单击画布摆放到鼠标指针位置\">\r\n        <span @click=\"customToolbarClick('svg')\">导入 SVG</span>\r\n      </t-tooltip>\r\n    </a>\r\n    <t-popconfirm\r\n      :visible=\"visible\"\r\n      theme=\"default\"\r\n      content=\"是否导入 ElectricEditor 生成的 JSON 文件?\"\r\n      @visible-change=\"onVisibleChange\"\r\n    >\r\n      <a class=\"logo\">\r\n        <span>导入</span>\r\n      </a>\r\n    </t-popconfirm>\r\n\r\n\r\n    <a class=\"logo\">\r\n      <span @click=\"customToolbarClick('save')\">保存图纸</span>\r\n    </a>\r\n\r\n    <t-dropdown\r\n      :minColumnWidth=\"180\"\r\n      :maxHeight=\"500\"\r\n      :delay2=\"[10, 150]\"\r\n      overlayClassName=\"header-dropdown\"\r\n    >\r\n      <a> 帮助 </a>\r\n      <t-dropdown-menu>\r\n        <t-dropdown-item v-for=\"item in assets.helps\" :divider=\"item.divider\">\r\n          <a v-if=\"item.url\" :href=\"item.url\" target=\"_blank\">{{\r\n            item.name\r\n          }}</a>\r\n        </t-dropdown-item>\r\n      </t-dropdown-menu>\r\n    </t-dropdown>\r\n  </div>\r\n\r\n  <div class=\"app-header header__bottom\">\r\n    <t-tooltip content=\"撤销\">\r\n      <svg class=\"l-icon\" aria-hidden=\"true\" @click=\"onUndo\">\r\n        <use xlink:href=\"#l-undo\"></use>\r\n      </svg>\r\n    </t-tooltip>\r\n    <t-tooltip content=\"重做\">\r\n      <svg class=\"l-icon\" aria-hidden=\"true\" @click=\"onRedo\">\r\n        <use xlink:href=\"#l-redo\"></use>\r\n      </svg>\r\n    </t-tooltip>\r\n    <t-tooltip content=\"直线\">\r\n      <span\r\n        :draggable=\"true\"\r\n        @dragstart=\"onAddShape($event, 'line')\"\r\n        @click=\"onAddShape($event, 'line')\"\r\n      >\r\n        <t-icon name=\"slash\" />\r\n      </span>\r\n    </t-tooltip>\r\n    <t-tooltip content=\"文字\">\r\n      <span\r\n        :draggable=\"true\"\r\n        @dragstart=\"onAddShape($event, 'text')\"\r\n        @click=\"onAddShape($event, 'text')\"\r\n      >\r\n        <svg class=\"l-icon\" aria-hidden=\"true\">\r\n          <use xlink:href=\"#l-text\"></use>\r\n        </svg>\r\n      </span>\r\n    </t-tooltip>\r\n    <t-tooltip content=\"连线\">\r\n      <svg\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n        viewBox=\"0 0 1024 1024\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        @click=\"drawLine\"\r\n        :style=\"{\r\n          color: isDrawLine ? ' #1677ff' : '',\r\n        }\"\r\n      >\r\n        <path\r\n          d=\"M192 64a128 128 0 0 1 123.968 96H384a160 160 0 0 1 159.68 149.504L544 320v384a96 96 0 0 0 86.784 95.552L640 800h68.032a128 128 0 1 1 0 64.064L640 864a160 160 0 0 1-159.68-149.504L480 704V320a96 96 0 0 0-86.784-95.552L384 224l-68.032 0.064A128 128 0 1 1 192 64z m640 704a64 64 0 1 0 0 128 64 64 0 0 0 0-128zM192 128a64 64 0 1 0 0 128 64 64 0 0 0 0-128z\"\r\n          fill=\"currentColor\"\r\n        ></path>\r\n      </svg>\r\n    </t-tooltip>\r\n    <t-dropdown\r\n      :minColumnWidth=\"160\"\r\n      :maxHeight=\"560\"\r\n      overlayClassName=\"header-dropdown\"\r\n    >\r\n      <a>\r\n        <svg class=\"l-icon\" aria-hidden=\"true\">\r\n          <use\r\n            :xlink:href=\"\r\n              lineTypes.find((item) => item.value === currentLineType)?.icon\r\n            \"\r\n          ></use>\r\n        </svg>\r\n      </a>\r\n      <t-dropdown-menu>\r\n        <t-dropdown-item v-for=\"item in lineTypes\">\r\n          <div class=\"flex middle\" @click=\"changeLineType(item.value)\">\r\n            {{ item.name }} <span class=\"flex-grow\"></span>\r\n            <svg class=\"l-icon\" aria-hidden=\"true\">\r\n              <use :xlink:href=\"item.icon\"></use>\r\n            </svg>\r\n          </div>\r\n        </t-dropdown-item>\r\n      </t-dropdown-menu>\r\n    </t-dropdown>\r\n    <t-dropdown\r\n      :minColumnWidth=\"160\"\r\n      :maxHeight=\"560\"\r\n      :delay2=\"[10, 150]\"\r\n      overlayClassName=\"header-dropdown\"\r\n    >\r\n      <a>\r\n        <svg class=\"l-icon\" aria-hidden=\"true\">\r\n          <use\r\n            :xlink:href=\"\r\n              fromArrows.find((item) => item.value === fromArrow)?.icon\r\n            \"\r\n          ></use>\r\n        </svg>\r\n      </a>\r\n      <t-dropdown-menu>\r\n        <t-dropdown-item v-for=\"item in fromArrows\">\r\n          <div\r\n            class=\"flex middle\"\r\n            style=\"height: 30px\"\r\n            @click=\"changeFromArrow(item.value)\"\r\n          >\r\n            <svg class=\"l-icon\" aria-hidden=\"true\">\r\n              <use :xlink:href=\"item.icon\"></use>\r\n            </svg>\r\n          </div>\r\n        </t-dropdown-item>\r\n      </t-dropdown-menu>\r\n    </t-dropdown>\r\n    <t-dropdown\r\n      :minColumnWidth=\"160\"\r\n      :maxHeight=\"560\"\r\n      :delay2=\"[10, 150]\"\r\n      overlayClassName=\"header-dropdown\"\r\n    >\r\n      <a>\r\n        <svg class=\"l-icon\" aria-hidden=\"true\">\r\n          <use\r\n            :xlink:href=\"toArrows.find((item) => item.value === toArrow)?.icon\"\r\n          ></use>\r\n        </svg>\r\n      </a>\r\n      <t-dropdown-menu>\r\n        <t-dropdown-item v-for=\"item in toArrows\">\r\n          <div\r\n            class=\"flex middle\"\r\n            style=\"height: 30px\"\r\n            @click=\"changeToArrow(item.value)\"\r\n          >\r\n            <svg class=\"l-icon\" aria-hidden=\"true\">\r\n              <use :xlink:href=\"item.icon\"></use>\r\n            </svg>\r\n          </div>\r\n        </t-dropdown-item>\r\n      </t-dropdown-menu>\r\n    </t-dropdown>\r\n    <div style=\"width: 64px\"></div>\r\n    <div v-show=\"scale > 0\" style=\"line-height: 40px\">{{ scale }}%</div>\r\n    <t-tooltip content=\"100%视图\" placement=\"bottom\">\r\n      <a @click=\"onScaleDefault\"><t-icon name=\"refresh\" /></a>\r\n    </t-tooltip>\r\n    <t-tooltip content=\"窗口大小\" placement=\"bottom\">\r\n      <a @click=\"onScaleWindow\" style=\"margin-left: -16px\"\r\n        ><t-icon name=\"fullscreen-exit\"\r\n      /></a>\r\n    </t-tooltip>\r\n    <div style=\"width: 36px\"></div>\r\n    <t-tooltip content=\"运行查看\">\r\n      <t-icon name=\"play-circle-stroke\" @click=\"onView\" />\r\n    </t-tooltip>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { onMounted, reactive, ref, defineEmits } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { Pen, PenType, deepClone } from \"@meta2d/core\";\r\n// @ts-ignore\r\nimport FileSaver from \"file-saver\";\r\nimport { MessagePlugin } from \"tdesign-vue-next\";\r\nimport { loadElectricJson, readSVGFile } from \"../utils\";\r\nimport { parseSvgStr } from \"../utils/svgParser\";\r\nimport { useData } from \"../services/useGraphics.ts\";\r\n\r\nconst emit = defineEmits([\"view\"]);\r\n\r\nconst router = useRouter();\r\n\r\nconst assets = reactive({\r\n  home: \"https://le5le.com\",\r\n  helps: [\r\n    {\r\n      name: \"产品介绍\",\r\n      url: \"https://doc.le5le.com/document/118756411\",\r\n    },\r\n    {\r\n      name: \"快速上手\",\r\n      url: \"https://doc.le5le.com/document/119363000\",\r\n    },\r\n    {\r\n      name: \"使用手册\",\r\n      url: \"https://doc.le5le.com/document/118764244\",\r\n    },\r\n    {\r\n      name: \"快捷键\",\r\n      url: \"https://doc.le5le.com/document/119620214\",\r\n      divider: true,\r\n    },\r\n  ],\r\n});\r\n\r\nconst visible = ref(false);\r\nconst onVisibleChange = (val: boolean, context: any = {}) => {\r\n  // trigger 表示触发来源，可以根据触发来源自由控制 visible\r\n  if (context && context.trigger === \"confirm\") {\r\n    assetClick();\r\n    visible.value = false;\r\n  } else {\r\n    visible.value = val;\r\n  }\r\n};\r\nconst assetClick = (item?: any) => {\r\n  loadElectricJson(item);\r\n};\r\n\r\nconst isDrawLine = ref<boolean>(false);\r\n\r\nconst scale = ref(0);\r\n\r\nonMounted(() => {\r\n  const timer = setInterval(() => {\r\n    if (meta2d) {\r\n      clearInterval(timer);\r\n      // 获取初始缩放比例\r\n      scaleSubscriber(meta2d.store.data.scale);\r\n\r\n      // 监听缩放\r\n      // @ts-ignore\r\n      meta2d.on(\"scale\", scaleSubscriber);\r\n    }\r\n  }, 200);\r\n});\r\n\r\nconst scaleSubscriber = (val: number) => {\r\n  scale.value = Math.round(val * 100);\r\n};\r\n\r\nconst drawLine = () => {\r\n  if (isDrawLine.value) {\r\n    isDrawLine.value = false;\r\n    meta2d.finishDrawLine();\r\n    meta2d.drawLine();\r\n    meta2d.store.options.disableAnchor = true;\r\n  } else {\r\n    isDrawLine.value = true;\r\n    meta2d.drawLine(meta2d.store.options.drawingLineName);\r\n    meta2d.store.options.disableAnchor = false;\r\n  }\r\n};\r\n\r\nconst lineTypes = reactive([\r\n  { name: \"曲线\", icon: \"#l-curve2\", value: \"curve\" },\r\n  { name: \"线段\", icon: \"#l-polyline\", value: \"polyline\" },\r\n  { name: \"直线\", icon: \"#l-line\", value: \"line\" },\r\n  { name: \"脑图曲线\", icon: \"#l-mind\", value: \"mind\" },\r\n]);\r\nconst currentLineType = ref(\"line\");\r\n\r\nconst changeLineType = (value: string) => {\r\n  currentLineType.value = value;\r\n  if (meta2d) {\r\n    meta2d.store.options.drawingLineName = value;\r\n    meta2d.canvas.drawingLineName && (meta2d.canvas.drawingLineName = value);\r\n    meta2d.store.active?.forEach((pen) => {\r\n      meta2d.updateLineType(pen, value);\r\n    });\r\n  }\r\n};\r\n\r\nconst fromArrow = ref(\"\");\r\nconst fromArrows = [\r\n  { icon: \"#l-line\", value: \"\" },\r\n  { icon: \"#l-from-triangle\", value: \"triangle\" },\r\n  { icon: \"#l-from-diamond\", value: \"diamond\" },\r\n  { icon: \"#l-from-circle\", value: \"circle\" },\r\n  { icon: \"#l-from-lineDown\", value: \"lineDown\" },\r\n  { icon: \"#l-from-lineUp\", value: \"lineUp\" },\r\n  { icon: \"#l-from-triangleSolid\", value: \"triangleSolid\" },\r\n  { icon: \"#l-from-diamondSolid\", value: \"diamondSolid\" },\r\n  { icon: \"#l-from-circleSolid\", value: \"circleSolid\" },\r\n  { icon: \"#l-from-line\", value: \"line\" },\r\n];\r\nconst toArrow = ref(\"\");\r\nconst toArrows = [\r\n  { icon: \"#l-line\", value: \"\" },\r\n  { icon: \"#l-to-triangle\", value: \"triangle\" },\r\n  { icon: \"#l-to-diamond\", value: \"diamond\" },\r\n  { icon: \"#l-to-circle\", value: \"circle\" },\r\n  { icon: \"#l-to-lineDown\", value: \"lineDown\" },\r\n  { icon: \"#l-to-lineUp\", value: \"lineUp\" },\r\n  { icon: \"#l-to-triangleSolid\", value: \"triangleSolid\" },\r\n  { icon: \"#l-to-diamondSolid\", value: \"diamondSolid\" },\r\n  { icon: \"#l-to-circleSolid\", value: \"circleSolid\" },\r\n  { icon: \"#l-to-line\", value: \"line\" },\r\n];\r\n\r\nconst changeFromArrow = (value: string) => {\r\n  fromArrow.value = value;\r\n  // 画布默认值\r\n  meta2d.store.data.fromArrow = value;\r\n  // 活动层的箭头都变化\r\n  if (meta2d.store.active) {\r\n    meta2d.store.active.forEach((pen: Pen) => {\r\n      if (pen.type === PenType.Line) {\r\n        pen.fromArrow = value;\r\n        meta2d.setValue(\r\n          {\r\n            id: pen.id,\r\n            fromArrow: pen.fromArrow,\r\n          },\r\n          {\r\n            render: false,\r\n          },\r\n        );\r\n      }\r\n    });\r\n    meta2d.render();\r\n  }\r\n};\r\n\r\nconst changeToArrow = (value: string) => {\r\n  toArrow.value = value;\r\n  // 画布默认值\r\n  meta2d.store.data.toArrow = value;\r\n  // 活动层的箭头都变化\r\n  if (meta2d.store.active) {\r\n    meta2d.store.active.forEach((pen: Pen) => {\r\n      if (pen.type === PenType.Line) {\r\n        pen.toArrow = value;\r\n        meta2d.setValue(\r\n          {\r\n            id: pen.id,\r\n            toArrow: pen.toArrow,\r\n          },\r\n          {\r\n            render: false,\r\n          },\r\n        );\r\n      }\r\n    });\r\n    meta2d.render();\r\n  }\r\n};\r\n\r\nconst newFile = () => {\r\n  meta2d.open({ name: \"新建项目\", pens: [] } as any);\r\n};\r\n\r\nfunction readFile(file: Blob) {\r\n  return new Promise<string>((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      resolve(reader.result as string);\r\n    };\r\n    reader.onerror = reject;\r\n    reader.readAsText(file);\r\n  });\r\n}\r\n\r\nconst openFile = () => {\r\n  // 1. 显示选择文件对话框\r\n  const input = document.createElement(\"input\");\r\n  input.type = \"file\";\r\n  input.onchange = async (event) => {\r\n    const elem = event.target as HTMLInputElement;\r\n    if (elem.files && elem.files[0]) {\r\n      // 2. 读取文件字符串内容\r\n      const text = await readFile(elem.files[0]);\r\n      try {\r\n        // 3. 打开文件内容\r\n        meta2d.open(JSON.parse(text));\r\n\r\n        // 可选：缩放到窗口大小展示\r\n        meta2d.fitView();\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n  input.click();\r\n};\r\n\r\nconst downloadJson = () => {\r\n  const data: any = meta2d.data();\r\n  FileSaver.saveAs(\r\n    new Blob([JSON.stringify(data)], {\r\n      type: \"text/plain;charset=utf-8\",\r\n    }),\r\n    `${data.name || \"le5le.meta2d\"}.json`,\r\n  );\r\n};\r\n\r\nconst downloadPng = () => {\r\n  let name = (meta2d.store.data as any).name;\r\n  if (name) {\r\n    name += \".png\";\r\n  }\r\n  meta2d.downloadPng(name);\r\n};\r\n\r\n// 判断该画笔 是否是组合为状态中 展示的画笔\r\nfunction isShowChild(pen: any, store: any) {\r\n  let selfPen = pen;\r\n  while (selfPen && selfPen.parentId) {\r\n    const oldPen = selfPen;\r\n    selfPen = store.pens[selfPen.parentId];\r\n    const showChildIndex = selfPen?.calculative?.showChild;\r\n    if (showChildIndex != undefined) {\r\n      const showChildId = selfPen.children[showChildIndex];\r\n      if (showChildId !== oldPen.id) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nconst downloadSvg = () => {\r\n  if (!C2S) {\r\n    MessagePlugin.error(\"请先加载乐吾乐官网下的canvas2svg.js\");\r\n    return;\r\n  }\r\n\r\n  const rect: any = meta2d.getRect();\r\n  rect.x -= 10;\r\n  rect.y -= 10;\r\n  const ctx = new C2S(rect.width + 20, rect.height + 20);\r\n  ctx.textBaseline = \"middle\";\r\n  for (const pen of meta2d.store.data.pens) {\r\n    if (pen.visible == false || !isShowChild(pen, meta2d.store)) {\r\n      continue;\r\n    }\r\n    meta2d.renderPenRaw(ctx, pen, rect);\r\n  }\r\n\r\n  let mySerializedSVG = ctx.getSerializedSvg();\r\n  if (meta2d.store.data.background) {\r\n    mySerializedSVG = mySerializedSVG.replace(\"{{bk}}\", \"\");\r\n    mySerializedSVG = mySerializedSVG.replace(\r\n      \"{{bkRect}}\",\r\n      `<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"${meta2d.store.data.background}\"></rect>`,\r\n    );\r\n  } else {\r\n    mySerializedSVG = mySerializedSVG.replace(\"{{bk}}\", \"\");\r\n    mySerializedSVG = mySerializedSVG.replace(\"{{bkRect}}\", \"\");\r\n  }\r\n\r\n  mySerializedSVG = mySerializedSVG.replace(/--le5le--/g, \"&#x\");\r\n\r\n  const urlObject: any = (window as any).URL || window;\r\n  const export_blob = new Blob([mySerializedSVG]);\r\n  const url = urlObject.createObjectURL(export_blob);\r\n\r\n  const a = document.createElement(\"a\");\r\n  a.setAttribute(\r\n    \"download\",\r\n    `${(meta2d.store.data as any).name || \"le5le.meta2d\"}.svg`,\r\n  );\r\n  a.setAttribute(\"href\", url);\r\n  const evt = document.createEvent(\"MouseEvents\");\r\n  evt.initEvent(\"click\", true, true);\r\n  a.dispatchEvent(evt);\r\n};\r\n\r\nconst onUndo = () => {\r\n  meta2d.undo();\r\n};\r\n\r\nconst onRedo = () => {\r\n  meta2d.redo();\r\n};\r\n\r\nconst onCut = () => {\r\n  meta2d.cut();\r\n};\r\n\r\nconst onCopy = () => {\r\n  meta2d.copy();\r\n};\r\n\r\nconst onPaste = () => {\r\n  meta2d.paste();\r\n};\r\n\r\nconst onAll = () => {\r\n  meta2d.activeAll();\r\n};\r\n\r\nconst onDelete = () => {\r\n  meta2d.delete();\r\n};\r\n\r\nconst { saveBlueprintShow } = useData(true);\r\nconst customToolbarClick = (code?: string) => {\r\n  if (code == \"svg\") {\r\n    readSVGFile((res: { data: string }) => {\r\n      parseSvgStr(res.data);\r\n    });\r\n    return;\r\n  }\r\n  if (code == \"save\") {\r\n    // 保存图纸\r\n    saveBlueprintShow();\r\n    return;\r\n  }\r\n\r\n  meta2d.toggleAnchorMode();\r\n  // TODO: 其他操作\r\n};\r\n\r\nconst onAddShape = (event: DragEvent | MouseEvent, name: string) => {\r\n  event.stopPropagation();\r\n  let data: any;\r\n  if (name === \"text\") {\r\n    // 构建一个文本图元\r\n    data = {\r\n      text: \"text\",\r\n      width: 100,\r\n      height: 20,\r\n      name: \"text\",\r\n    };\r\n  } else if (name === \"line\") {\r\n    // 构建一个直线图元\r\n    data = {\r\n      anchors: [\r\n        { id: \"0\", x: 1, y: 0 },\r\n        { id: \"1\", x: 0, y: 1 },\r\n      ],\r\n      width: 100,\r\n      height: 100,\r\n      name: \"line\",\r\n      lineName: \"line\",\r\n      type: 1,\r\n    };\r\n  }\r\n  if (!(event as DragEvent).dataTransfer) {\r\n    // 支持点击画布添加\r\n    meta2d.canvas.addCaches = deepClone([data]);\r\n  } else {\r\n    // 支持拖拽添加\r\n    (event as DragEvent).dataTransfer?.setData(\"Meta2d\", JSON.stringify(data));\r\n  }\r\n};\r\n\r\nconst onScaleDefault = () => {\r\n  meta2d.scale(1);\r\n  meta2d.centerView();\r\n};\r\n\r\nconst onScaleWindow = () => {\r\n  meta2d.fitView();\r\n};\r\n\r\nconst onView = () => {\r\n  // 先停止动画，避免数据波动\r\n  meta2d.stopAnimate();\r\n  // 本地存储\r\n  const data: any = meta2d.data();\r\n  localStorage.setItem(\"meta2d\", JSON.stringify(data));\r\n  emit(\"view\", data);\r\n\r\n  if (globalThis.$_meta2d_singleton) {\r\n    // 新窗口打开预览页面\r\n    window.open(`/preview?r=${Date.now()}&id=${data._id || ''}`, \"_blank\");\r\n  }\r\n};\r\n\r\nconst selectPens = (type?: number | string) => {\r\n  if (type == \"none\") {\r\n    meta2d.inactive();\r\n    return;\r\n  }\r\n  const data = meta2d.data();\r\n  const pens = data.pens.filter((pen: Pen) => {\r\n    if (type) {\r\n      return pen.type === type;\r\n    } else {\r\n      return pen.type != 1;\r\n    }\r\n  });\r\n\r\n  // * 数据量大时，频繁查找会导致卡顿，但官方没有批量查询的 api，暂时无法解决\r\n  const penList: Pen[] = [];\r\n  pens.forEach((pen: Pen) => {\r\n    if (meta2d.findOne(pen.id as string)) {\r\n      penList.push(meta2d.findOne(pen.id as string) as Pen);\r\n    }\r\n  });\r\n\r\n  meta2d.active(penList);\r\n};\r\n</script>\r\n<style lang=\"postcss\" scoped>\r\n.app-header {\r\n  display: flex;\r\n  height: 40px;\r\n  padding: 0 12px;\r\n  position: relative;\r\n  border-bottom: 1px solid var(--color-border);\r\n  z-index: 2;\r\n\r\n  .logo {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    padding-left: 0;\r\n    cursor: pointer;\r\n\r\n    img {\r\n      height: 20px;\r\n      margin-right: 6px;\r\n    }\r\n  }\r\n\r\n  a {\r\n    display: flex;\r\n    padding: 0 8px;\r\n    margin: 0 8px;\r\n    align-items: center;\r\n    color: var(--color);\r\n    text-decoration: none;\r\n    white-space: nowrap;\r\n\r\n    &:hover {\r\n      color: var(--color-primary);\r\n    }\r\n\r\n    svg {\r\n      font-size: 15px;\r\n      margin: 2px 4px 0 0;\r\n    }\r\n\r\n    &.active {\r\n      background-color: var(--color-primary-hover);\r\n      color: #ffffff;\r\n    }\r\n  }\r\n\r\n  svg {\r\n    height: 40px;\r\n    margin: 0 8px;\r\n    &:hover {\r\n      color: var(--color-primary);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n<style>\r\n.t-dropdown__item-text {\r\n  a {\r\n    color: var(--color);\r\n    text-decoration: none;\r\n    white-space: nowrap;\r\n\r\n    &:hover {\r\n      color: var(--color-primary);\r\n    }\r\n  }\r\n}\r\n</style>\r\n","/*\r\n * 直线连线交叉问题,在画布上，当2条或多条线交叉时，\r\n * 其中一条线会弯曲显示，表明这2条或多条线之间，不存在交叉。\r\n * author: Joseph Ho\r\n * email: hejin@le5le.com\r\n * date: 2022.09.09\r\n*/\r\nimport { s8 } from '@meta2d/core';\r\nenum PenType {\r\n  Node,\r\n  Line,\r\n}\r\nenum PrevNextType {\r\n  Mirror,\r\n  Bilateral,\r\n  Free,\r\n}\r\ninterface PurePoint {\r\n  x: number;\r\n  y: number;\r\n}\r\n// 相交点的半径\r\nlet radius = 1;\r\n// 判断点在线上的偏移值\r\nconst dotHitOffset = 2;\r\n// 锚点坐标误差偏移值,用于去掉重复锚点\r\nconst anchorOffsetXY = 0.000001;\r\n// 锚点数组\r\nlet anchors = [];\r\n// mousedown到up的标志位,标识一整个鼠标down到up的动作\r\nlet downToUpFlag = false;\r\n// 图纸渲染完成是否默认相交弯曲\r\nlet isDefaultCross = false;\r\nconst crossLines = ['line', 'polyline'];\r\nexport function lineCross(defaultCross: any) {\r\n  (window as any).meta2d.on('mouseup', mouseUp);\r\n  (window as any).meta2d.on('mousedown', mouseDown);\r\n  (window as any).meta2d.on('add', add);\r\n  (window as any).meta2d.on('active', active);\r\n  isDefaultCross = defaultCross;\r\n  (window as any).meta2d.on('opened', opened);\r\n}\r\nexport function handleLineCross(flag: any) {\r\n  mouseDown();\r\n  mouseUp(flag);\r\n}\r\nfunction opened() {\r\n  // 如果需要默认相交弯曲，则走以下逻辑\r\n  if (isDefaultCross) {\r\n    handleLineCross(undefined);\r\n  }\r\n}\r\nfunction active() {\r\n  downToUpFlag = true;\r\n}\r\nfunction add() {\r\n  downToUpFlag = true;\r\n}\r\nfunction mouseDown() {\r\n  downToUpFlag = true;\r\n}\r\nfunction clearIntersect(e) {\r\n  let worldAnchors = [], ls = [];\r\n  // 画布活动节点\r\n  const pens = e ? (window as any).meta2d.store.active : (window as any).meta2d.store.data.pens;\r\n  const actives = pens.filter(el => el);\r\n  // 活动的连线，包括直线和线段\r\n  // ls = actives.filter(pen => pen.type === PenType.Line && crossLines.indexOf(pen.lineName) !== -1);\r\n  for (let i = 0; i < actives.length; i++) {\r\n    const pen = actives[i];\r\n    if (pen.type === PenType.Line && crossLines.indexOf(pen.lineName) !== -1) {\r\n      // 添加直线和线段节点\r\n      ls.push(pen);\r\n    } else if (pen.connectedLines && pen.connectedLines.length > 0) {\r\n      // 添加连接节点的连线\r\n      for (let j = 0; j < pen.connectedLines.length; j++) {\r\n        const item = pen.connectedLines[j];\r\n        ls.push((window as any).meta2d.find(item.lineId)[0]);\r\n      }\r\n    }\r\n    // 找出被压线的连线\r\n    const ll = (window as any).meta2d.store.data.pens.filter(el => el.intersectLines\r\n      && el.intersectLines.findIndex(item => item.id === pen.id) !== -1);\r\n    ls.push(...ll);\r\n  }\r\n  ls = ls.filter(el => el);\r\n  // mouseDown的事件回调中去删除intersect=true的锚点\r\n  for (let i = 0; i < ls.length; i++) {\r\n    const l = ls[i];\r\n    l.intersectLines = [];\r\n    if (ls[i] && ls[i].calculative) {\r\n      worldAnchors = ls[i].calculative.worldAnchors;\r\n      if (worldAnchors.length > 2) {\r\n        for (let j = 0; j < worldAnchors.length; j++) {\r\n          const an = worldAnchors[j];\r\n          if (an.next || an.prev) {\r\n            worldAnchors.splice(j, 1);\r\n            j--;\r\n          }\r\n        }\r\n        (window as any).meta2d.canvas.initLineRect(l);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction mouseUp(e: any) {\r\n  if (downToUpFlag) {\r\n    downToUpFlag = false;\r\n    setTimeout(() => {\r\n      // 画布活动节点\r\n      const pens = e ? (window as any).meta2d.store.active : (window as any).meta2d.store.data.pens;\r\n      // 弯曲的情况与pen的顺序有关，所以需要倒序\r\n      const actives = pens.filter(el => el).reverse();\r\n      // 活动的连线，包括直线和线段\r\n      let ls = [], passiveL = [];\r\n      // const ls = actives.filter(pen => pen.type === PenType.Line && crossLines.indexOf(pen.lineName) !== -1);\r\n      for (let i = 0; i < actives.length; i++) {\r\n        const pen = actives[i];\r\n        if (pen.type === PenType.Line && crossLines.indexOf(pen.lineName) !== -1) {\r\n          // 添加直线和线段节点\r\n          if (pen.connectedLines) {\r\n            // 删除连线的错误connectedLines连接关系\r\n            for (let v = 0; v < pen.connectedLines.length; v++) {\r\n              const element = pen.connectedLines[v];\r\n              let anchor = pen.anchors.find(anchor => anchor.id === element.anchor);\r\n              if (anchor && anchor.penId) {\r\n                let line = (window as any).meta2d.findOne(element.lineId);\r\n                if (!line) {\r\n                  continue;\r\n                }\r\n                if (line.connectedLines && line.connectedLines.length > 0) {\r\n                  let otherIndex = line.connectedLines.findIndex((connect) => connect.anchor === element.lineAnchor);\r\n                  line.connectedLines.splice(otherIndex, 1);\r\n                }\r\n                pen.connectedLines.splice(v, 1);\r\n                v--;\r\n              }\r\n            }\r\n          }\r\n\r\n          ls.push(pen);\r\n        } else if (pen.type !== PenType.Line && pen.connectedLines && pen.connectedLines.length > 0) {\r\n          // 添加连接节点的连线\r\n          for (let j = 0; j < pen.connectedLines.length; j++) {\r\n            const item = pen.connectedLines[j];\r\n            ls.push((window as any).meta2d.find(item.lineId)[0]);\r\n          }\r\n        }\r\n        // 找出被压线的连线\r\n        passiveL = (window as any).meta2d.store.data.pens.filter(el => el.intersectLines && el.intersectLines.findIndex(item => item.id === pen.id) !== -1);\r\n        ls.unshift(...passiveL);\r\n      }\r\n      // 过滤出所有的连线，包括直线和线段，不包括acitve里面的连线\r\n      const lines = (window as any).meta2d.store.data.pens.filter(pen => pen.type === PenType.Line\r\n        && crossLines.indexOf(pen.lineName) !== -1);\r\n      // 判断压线之前先清空相交情况\r\n      clearIntersect(e);\r\n      ls = ls.filter(el => el);\r\n      for (let i = 0; i < ls.length; i++) {\r\n        const initiativeAnchors = ls[i].calculative.worldAnchors.filter(el => !el.next && !el.prev);\r\n        // 重置锚点数组\r\n        anchors = [];\r\n        for (let m = 0; m < initiativeAnchors.length; m++) {\r\n          if (m !== initiativeAnchors.length - 1) {\r\n            // 连接线的两个锚点\r\n            const l1 = initiativeAnchors[m];\r\n            const l11 = initiativeAnchors[m + 1];\r\n            for (let j = 0; j < lines.length; j++) {\r\n              // 重置半径\r\n              radius = 3;\r\n              // 根据线宽计算新的相交圆的半径\r\n              radius += (lines[j].lineWidth / ls[i].lineWidth) * ls[i].lineWidth;\r\n              // 乘以当前画布缩放比\r\n              radius *= (window as any).meta2d.store.data.scale;\r\n              const passiveAnchors = lines[j].calculative.worldAnchors.filter(el => !el.next && !el.prev);\r\n              for (let n = 0; n < passiveAnchors.length; n++) {\r\n                if (n !== passiveAnchors.length - 1) {\r\n                  // 被相交线的两个锚点\r\n                  const l2 = passiveAnchors[n];\r\n                  const l22 = passiveAnchors[n + 1];\r\n                  // 判断两条直线是否相交，当onLine1和onLine2都为true时，则相交\r\n                  const { onLine1, onLine2, x, y } = checkLineIntersection(l1.x, l1.y, l11.x, l11.y, l2.x, l2.y, l22.x, l22.y);\r\n                  // 如果两条线段相交\r\n                  if (onLine1 && onLine2) {\r\n                    // 去被连接线的相交线数组查找是否已经与连接线相交，是则跳过本次循环，否则继续\r\n                    if (lines[j].intersectLines) {\r\n                      const tIndex = lines[j].intersectLines.findIndex(el => el.id === ls[i].id\r\n                        && el.fromAnchorIndex === n && el.toAnchorIndex === m);\r\n                      if (tIndex !== -1) {\r\n                        continue;\r\n                      }\r\n                    }\r\n                    // 更新连接线的相交线数组\r\n                    if (!ls[i].intersectLines) {\r\n                      // 如果相交，则把被相交的线id放到连接线的intersectLines数组\r\n                      ls[i].intersectLines = [];\r\n                      ls[i].intersectLines.push({ fromAnchorIndex: m, toAnchorIndex: n, id: lines[j].id });\r\n                    } else {\r\n                      const index = ls[i].intersectLines.findIndex(el => el.id === lines[j].id && el.fromAnchorIndex === m && el.toAnchorIndex === n);\r\n                      if (index === -1) {\r\n                        ls[i].intersectLines.push({ fromAnchorIndex: m, toAnchorIndex: n, id: lines[j].id });\r\n                      }\r\n                    }\r\n                    // 算出拖动线条的直线方程式\r\n                    const { a, b, c } = lineFromPoints(l1, l11);\r\n                    const k = - (a / b);\r\n                    // 以相交点为圆心，找到圆与线相交的两个点，作为锚点\r\n                    let p1: PurePoint = { x: 0, y: 0 }, p2: PurePoint = { x: 0, y: 0 };\r\n                    const deltaX = Math.sqrt((radius * radius) / (k * k + 1));\r\n                    p1.x = x - deltaX;\r\n                    p1.y = k * p1.x;\r\n                    p2.x = x + deltaX;\r\n                    p2.y = k * p2.x;\r\n                    // 求出经过圆心的直线与圆的两个交点\r\n                    const ret = inteceptCircleLineSeg({ radius, x, y }, { p1: l1, p2: l11 });\r\n                    // 只有圆与线有2个端点才弯曲显示\r\n                    if (ret.length === 2) {\r\n                      let k1 = 1;\r\n                      if (a !== 0) {\r\n                        // 垂直相交线的斜率\r\n                        k1 = b / a;\r\n                      } else {\r\n                        // a=0,则为平行于x轴的线\r\n                        k1 = y;\r\n                      }\r\n\r\n                      const deltaX1 = Math.sqrt((radius * radius) / (k1 * k1 + 1));\r\n                      const deltaY1 = k1 * deltaX1;\r\n                      // 锚点的两个控制点\r\n                      let p4: PurePoint = { x: 0, y: 0 }, p5: PurePoint = { x: 0, y: 0 };\r\n                      // 判断垂直相交线的斜率是否大于0\r\n                      if (-k1 < 0) {\r\n                        p4.x = ret[0].x - deltaX1;\r\n                        p4.y = ret[0].y - deltaY1;\r\n                        p5.x = ret[1].x - deltaX1;\r\n                        p5.y = ret[1].y - deltaY1;\r\n                      } else {\r\n                        p4.x = ret[0].x + deltaX1;\r\n                        p4.y = ret[0].y + deltaY1;\r\n                        p5.x = ret[1].x + deltaX1;\r\n                        p5.y = ret[1].y + deltaY1;\r\n                      }\r\n                      // 找到相交点所在正确的线段l3\r\n                      let l3 = { x: 0, y: 0, id: '' };\r\n                      for (let u = 0; u < initiativeAnchors.length; u++) {\r\n                        if (u !== initiativeAnchors.length - 1) {\r\n                          const u1 = initiativeAnchors[u];\r\n                          const u11 = initiativeAnchors[u + 1];\r\n                          const cross = calcIsInsideThickLineSegment(u1, u11, { x, y }, dotHitOffset);\r\n                          if (cross) {\r\n                            l3.x = u1.x;\r\n                            l3.y = u1.y;\r\n                            l3.id = u1.id;\r\n                            break;\r\n                          }\r\n                        }\r\n                      }\r\n                      const an1 = {\r\n                        id: s8(),\r\n                        penId: ls[i].id,\r\n                        x: ret[0].x,\r\n                        y: ret[0].y,\r\n                        intersect: true,\r\n                        hidden: true,\r\n                        locked: 2,\r\n                        lastAnchorIndex: l3.id,\r\n                        brotherId: \"\",\r\n                        next: {\r\n                          penId: ls[i].id,\r\n                          x: p4.x,\r\n                          y: p4.y,\r\n                        },\r\n                        prev: {\r\n                          penId: ls[i].id,\r\n                          x: ret[0].x,\r\n                          y: ret[0].y,\r\n                        },\r\n                        prevNextType: PrevNextType.Bilateral\r\n                      };\r\n                      const an2 = {\r\n                        id: s8(),\r\n                        penId: ls[i].id,\r\n                        x: ret[1].x,\r\n                        y: ret[1].y,\r\n                        intersect: true,\r\n                        hidden: true,\r\n                        locked: 2,\r\n                        brotherId: \"\",\r\n                        lastAnchorIndex: l3.id,\r\n                        next: {\r\n                          penId: ls[i].id,\r\n                          x: ret[1].x,\r\n                          y: ret[1].y,\r\n                        },\r\n                        prev: {\r\n                          penId: ls[i].id,\r\n                          x: p5.x,\r\n                          y: p5.y,\r\n                        },\r\n                        prevNextType: PrevNextType.Bilateral\r\n                      };\r\n                      an1.brotherId = an2.id;\r\n                      an2.brotherId = an1.id;\r\n                      anchors.push(...[an1, an2]);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n\r\n            }\r\n          }\r\n        }\r\n        if (anchors.length > 0) {\r\n          // 对所有的相交锚点按照lastAnchorIndex进行分组排序\r\n          // anchors.sort((a, b) => a.lastAnchorIndex - b.lastAnchorIndex);\r\n          // 对所有的相交锚点按照相对参考锚点的距离大小排序\r\n          anchors.sort((a, b) => {\r\n            if (a.lastAnchorIndex === b.lastAnchorIndex) {\r\n              const l3 = initiativeAnchors.find(item => item.id === a.lastAnchorIndex);\r\n              if (l3) {\r\n                return getDistance(a.x, a.y, l3.x, l3.y) - getDistance(b.x, b.y, l3.x, l3.y);\r\n              } else {\r\n                return -1;\r\n              }\r\n            } else {\r\n              return -1;\r\n            }\r\n          });\r\n          // 处理圆弧相交的情况,超过2对及以上才需要比较\r\n          let comparedIds = []; // 记录已经比较过距离的锚点对\r\n          let neighbourIds = [];\r\n          let gapOverFlag = -1; // 间距起始与结束标志位\r\n          for (let m = 0, len = anchors.length; m < len; m++) {\r\n            const an1 = anchors[m];\r\n            if (comparedIds.indexOf(an1.id) !== -1) {\r\n              continue;\r\n            }\r\n            const brother = anchors.find(el => el.id === an1.brotherId);\r\n            comparedIds.push(...[an1.id, brother.id]);\r\n            for (let n = m + 1; n < len; n++) {\r\n              const an2 = anchors[n];\r\n              const otherBrother = anchors.find(el => el.id === an2.brotherId);\r\n              comparedIds.push(...[an2.id, otherBrother.id]);\r\n              if (an1.brotherId !== an2.id) {\r\n                if ((getDistance(an1.x, an1.y, an2.x, an2.y) < radius * 2) &&\r\n                  (getDistance(an1.x, an1.y, an2.x, an2.y) > anchorOffsetXY)) {\r\n                  gapOverFlag = 1;\r\n                  if (neighbourIds.indexOf(an1.id) === -1) {\r\n                    neighbourIds.push(...[an1.id, brother.id]);\r\n                  }\r\n                  const otherBrother = anchors.find(el => el.id === an2.brotherId);\r\n                  if (neighbourIds.indexOf(an2.id) === -1) {\r\n                    neighbourIds.push(...[an2.id, otherBrother.id]);\r\n                  }\r\n                } else {\r\n                  if (gapOverFlag === 1) {\r\n                    gapOverFlag = -1;\r\n                    const index = comparedIds.findIndex(el => el === an2.id);\r\n                    comparedIds.splice(index, 1);\r\n                    const brotherIndex = comparedIds.findIndex(el => el === an2.brotherId);\r\n                    comparedIds.splice(brotherIndex, 1);\r\n                    break;\r\n                  }\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          for (let k = 0; k < anchors.length; k++) {\r\n            const an = anchors[k];\r\n            if (\r\n              neighbourIds.indexOf(an.id) !== -1\r\n            ) {\r\n              anchors.splice(k, 1);\r\n              k--;\r\n            }\r\n          }\r\n          // X,Y坐标相近的锚点成对去重\r\n          for (let p = 0, len = anchors.length; p < len; p++) {\r\n            const an1 = anchors[p];\r\n            for (let o = p + 1; o < len; o++) {\r\n              const an2 = anchors[o];\r\n              if (getDistance(an1.x, an1.y, an2.x, an2.y) <= anchorOffsetXY) {\r\n                anchors.splice(o, 1);\r\n                let brotherIndex = anchors.findIndex(el => el.id === an2.brotherId);\r\n                if (brotherIndex !== -1) {\r\n                  anchors.splice(brotherIndex, 1);\r\n                }\r\n                o--;\r\n                len = anchors.length;\r\n              }\r\n            }\r\n          }\r\n          // 对每个新增锚点按照正确的顺序插入到worldAnchors数组中\r\n          let lastIndex = -1, index = -1, count = 0;\r\n          for (let k = 0; k < anchors.length; k++) {\r\n            const an = anchors[k];\r\n            if (lastIndex === -1 || (lastIndex !== -1 && lastIndex !== an.lastAnchorIndex)) {\r\n              // 找到相对锚点的索引\r\n              index = ls[i].calculative.worldAnchors.findIndex(el => el.id === an.lastAnchorIndex);\r\n              count = 0;\r\n            } else if (lastIndex === an.lastAnchorIndex) {\r\n              count++;\r\n            }\r\n            const tIndex = ls[i].calculative.worldAnchors.findIndex(el => {\r\n              return el.x === an.x && el.y === an.y && el.penId === an.penId;\r\n            });\r\n            // 避免重复添加相交锚点\r\n            if (tIndex === -1) {\r\n              ls[i].calculative.worldAnchors.splice(index + count + 1, 0, an);\r\n              lastIndex = an.lastAnchorIndex;\r\n            }\r\n          }\r\n          (window as any).meta2d.canvas.updateLines(ls[i]);\r\n          (window as any).meta2d.canvas.initLineRect(ls[i]);\r\n        }\r\n      }\r\n      (window as any).meta2d.render();\r\n    }, 0);\r\n  }\r\n\r\n}\r\n// 销毁订阅\r\nexport function clearLineCross() {\r\n  (window as any).meta2d.off('mouseup', mouseUp);\r\n  (window as any).meta2d.off('mousedown', mouseDown);\r\n  (window as any).meta2d.off('add', add);\r\n  (window as any).meta2d.off('active', active);\r\n  (window as any).meta2d.off('opened', opened);\r\n  anchors = [];\r\n}\r\n// 判断一个点是否在一条线上\r\nfunction calcIsInsideThickLineSegment(line1: any, line2: any, pnt: any, lineThickness: number) {\r\n  const L2 = (((line2.x - line1.x) * (line2.x - line1.x)) + ((line2.y - line1.y) * (line2.y - line1.y)));\r\n  if (L2 == 0) return false;\r\n  const r = (((pnt.x - line1.x) * (line2.x - line1.x)) + ((pnt.y - line1.y) * (line2.y - line1.y))) / L2;\r\n\r\n  //Assume line thickness is circular\r\n  if (r < 0) {\r\n    //Outside line1\r\n    return (Math.sqrt(((line1.x - pnt.x) * (line1.x - pnt.x)) + ((line1.y - pnt.y) * (line1.y - pnt.y))) <= lineThickness);\r\n  } else if ((0 <= r) && (r <= 1)) {\r\n    //On the line segment\r\n    const s = (((line1.y - pnt.y) * (line2.x - line1.x)) - ((line1.x - pnt.x) * (line2.y - line1.y))) / L2;\r\n    return (Math.abs(s) * Math.sqrt(L2) <= lineThickness);\r\n  } else {\r\n    //Outside line2\r\n    return (Math.sqrt(((line2.x - pnt.x) * (line2.x - pnt.x)) + ((line2.y - pnt.y) * (line2.y - pnt.y))) <= lineThickness);\r\n  }\r\n}\r\n// 求出一条经过圆心的直线与圆的两个交点\r\nfunction inteceptCircleLineSeg(circle: any, line: any) {\r\n  let a, b, c, d, u1, u2, ret, retP1, retP2, v1, v2;\r\n  v1 = {};\r\n  v2 = {};\r\n  v1.x = line.p2.x - line.p1.x;\r\n  v1.y = line.p2.y - line.p1.y;\r\n  v2.x = line.p1.x - circle.x;\r\n  v2.y = line.p1.y - circle.y;\r\n  b = (v1.x * v2.x + v1.y * v2.y);\r\n  c = 2 * (v1.x * v1.x + v1.y * v1.y);\r\n  b *= -2;\r\n  d = Math.sqrt(b * b - 2 * c * (v2.x * v2.x + v2.y * v2.y - circle.radius * circle.radius));\r\n  if (isNaN(d)) { // no intercept\r\n    return [];\r\n  }\r\n  u1 = (b - d) / c;  // these represent the unit distance of point one and two on the line\r\n  u2 = (b + d) / c;\r\n  retP1 = {};   // return points\r\n  retP2 = {};\r\n  ret = []; // return array\r\n  if (u1 <= 1 && u1 >= 0) {  // add point if on the line segment\r\n    retP1.x = line.p1.x + v1.x * u1;\r\n    retP1.y = line.p1.y + v1.y * u1;\r\n    ret[0] = retP1;\r\n  }\r\n  if (u2 <= 1 && u2 >= 0) {  // second add point if on the line segment\r\n    retP2.x = line.p1.x + v1.x * u2;\r\n    retP2.y = line.p1.y + v1.y * u2;\r\n    ret[ret.length] = retP2;\r\n  }\r\n  return ret;\r\n}\r\n\r\n// Function to find the line given two points 根据两个点返回一条直线的表达式\r\nfunction lineFromPoints(p1: PurePoint, p2: PurePoint) {\r\n  const a = p2.y - p1.y;\r\n  const b = p1.x - p2.x;\r\n  const c = a * (p1.x) + b * (p1.y);\r\n  return { a, b, c };\r\n}\r\n// 获取两个点之间的距离\r\nfunction getDistance(x1: number, y1: number, x2: number, y2: number) {\r\n  let y = x2 - x1;\r\n  let x = y2 - y1;\r\n\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n// 检测两条线段是否相交，并返回结果\r\nfunction checkLineIntersection(line1StartX: number, line1StartY: number, line1EndX: number, line1EndY: number, line2StartX: number, line2StartY: number, line2EndX, line2EndY: number) {\r\n  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\r\n  let denominator, a, b, numerator1, numerator2, result = {\r\n    x: null,\r\n    y: null,\r\n    onLine1: false,\r\n    onLine2: false\r\n  };\r\n  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\r\n  if (denominator == 0) {\r\n    return result;\r\n  }\r\n  a = line1StartY - line2StartY;\r\n  b = line1StartX - line2StartX;\r\n  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\r\n  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\r\n  a = numerator1 / denominator;\r\n  b = numerator2 / denominator;\r\n\r\n  // if we cast these lines infinitely in both directions, they intersect here:\r\n  result.x = line1StartX + (a * (line1EndX - line1StartX));\r\n  result.y = line1StartY + (a * (line1EndY - line1StartY));\r\n  /*\r\n        // it is worth noting that this should be the same as:\r\n        x = line2StartX + (b * (line2EndX - line2StartX));\r\n        y = line2StartX + (b * (line2EndY - line2StartY));\r\n        */\r\n  // if line1 is a segment and line2 is infinite, they intersect if:\r\n  if (a > 0 && a < 1) {\r\n    result.onLine1 = true;\r\n  }\r\n  // if line2 is a segment and line1 is infinite, they intersect if:\r\n  if (b > 0 && b < 1) {\r\n    result.onLine2 = true;\r\n  }\r\n  // if line1 and line2 are segments, they intersect if both of the above are true\r\n  return result;\r\n}\r\n","<template>\r\n    <t-tabs v-model:value=\"activePanel\" @change=\"changeValue\">\r\n        <t-tab-panel v-for=\"(item, index) in tabs\" :key=\"index\" :value=\"item.value\" :label=\"item.label\">\r\n            <slot :name=\"item.slot\"></slot>\r\n        </t-tab-panel>\r\n    </t-tabs>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { defineProps, ref, } from 'vue'\r\n\r\ntype Tab = {\r\n    label: string,\r\n    value: number,\r\n    slot: string\r\n}\r\n\r\nconst props = defineProps({\r\n    tabs: {\r\n        type: Array as () => Tab[],\r\n        default: () => ([]),\r\n    },\r\n    defaultValue: {\r\n        type: Number,\r\n        default: 1,\r\n    }\r\n})\r\n\r\nconst activePanel = ref(props.defaultValue)\r\n\r\nconst emit = defineEmits(['change'])\r\nconst changeValue = (value: number) => {\r\n    emit('change', value)\r\n}\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>","<template>\r\n  <t-dialog\r\n    v-model:visible=\"visible\"\r\n    header=\"JavaScript\"\r\n    width=\"50%\"\r\n    :on-cancel=\"onCancel\"\r\n    :on-close=\"close\"\r\n    :on-confirm=\"onConfirmAnother\"\r\n  >\r\n    <t-space direction=\"vertical\" style=\"width: 100%\">\r\n      <code>function(data: any) { // data 为 MessageBus 消息里的 data 对象</code>\r\n      <vue-monaco-editor\r\n        v-model:value=\"code\"\r\n        theme=\"vs-dark\"\r\n        :options=\"MONACO_EDITOR_OPTIONS\"\r\n        style=\"height: 50vh\"\r\n        @mount=\"handleMount\"\r\n      />\r\n      <code>}</code>\r\n    </t-space>\r\n  </t-dialog>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { defineProps, ref, defineExpose, shallowRef, defineEmits } from \"vue\";\r\nimport { VueMonacoEditor } from \"@guolao/vue-monaco-editor\";\r\nconst props = defineProps({});\r\n\r\nconst emit = defineEmits([\"confirm\"]);\r\nconst visible = ref(false);\r\n\r\nconst onConfirmAnother = (context: any) => {\r\n  visible.value = false;\r\n  emit(\"confirm\", code.value);\r\n};\r\nconst close = (context: any) => {\r\n  console.log(\"关闭弹窗，点击关闭按钮、按下ESC、点击蒙层等触发\", context);\r\n};\r\nconst onCancel = (context: any) => {\r\n  console.log(\"点击了取消按钮\", context);\r\n};\r\n\r\nconst open = (jsStr: string) => {\r\n  visible.value = true;\r\n  code.value = jsStr;\r\n};\r\n\r\ndefineExpose({\r\n  open,\r\n});\r\n\r\nconst MONACO_EDITOR_OPTIONS = {\r\n  automaticLayout: true,\r\n  formatOnType: true,\r\n  formatOnPaste: true,\r\n};\r\n\r\nconst code = ref(\"// some code...\");\r\nconst editorRef = shallowRef();\r\nconst handleMount = (editor: typeof VueMonacoEditor) =>\r\n  (editorRef.value = editor);\r\n\r\n// your action\r\nfunction formatCode() {\r\n  editorRef.value?.getAction(\"editor.action.formatDocument\").run();\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n:global(code) {\r\n    color: blue;\r\n    font-weight: bold;\r\n}\r\n</style>\r\n","<template>\r\n  <t-button block theme=\"primary\" @click=\"insert\">添加处理器</t-button>\r\n  <t-collapse class=\"meta-collapse\" expand-mutex @change=\"changeHandler\">\r\n    <t-collapse-panel\r\n      v-for=\"(item, index) in handlers\"\r\n      :key=\"index\"\r\n      header=\"处理器\"\r\n    >\r\n      <t-form labelAlign=\"left\">\r\n        <t-form-item label=\"行为\">\r\n          <t-select\r\n            v-model=\"item.action\"\r\n            :options=\"eventActionOptions\"\r\n            @change=\"eventChange\"\r\n          ></t-select>\r\n        </t-form-item>\r\n        <t-form-item label=\"目标\">\r\n          <t-button variant=\"text\" theme=\"primary\" @click=\"showSelect(index)\"\r\n            >选择目标图元</t-button\r\n          >\r\n        </t-form-item>\r\n        <template v-if=\"item.action === EventAction.SetProps\">\r\n          <t-row justify=\"start\">\r\n            <t-col :span=\"5\">\r\n              <div>属性</div>\r\n            </t-col>\r\n            <t-col :span=\"5\">\r\n              <div>值</div>\r\n            </t-col>\r\n            <t-col :span=\"2\">\r\n              <t-button variant=\"text\" @click=\"addProp\">\r\n                <t-icon name=\"add\"></t-icon>\r\n              </t-button>\r\n            </t-col>\r\n          </t-row>\r\n          <t-row\r\n            v-for=\"(propItem, index) in propList\"\r\n            :key=\"index\"\r\n            justify=\"start\"\r\n            :gutter=\"4\"\r\n            style=\"margin-bottom: 4px\"\r\n          >\r\n            <t-col :span=\"5\">\r\n              <t-select\r\n                v-model=\"propItem.prop\"\r\n                :options=\"propOptions\"\r\n                @change=\"propChange(item)\"\r\n              ></t-select>\r\n            </t-col>\r\n            <t-col :span=\"5\">\r\n              <t-input\r\n                v-model=\"propItem.value\"\r\n                @change=\"propChange(item)\"\r\n              ></t-input>\r\n            </t-col>\r\n            <t-col :span=\"2\">\r\n              <t-button variant=\"text\" @click=\"deleteProp(propItem, item)\">\r\n                <t-icon name=\"delete\"></t-icon>\r\n              </t-button>\r\n            </t-col>\r\n          </t-row>\r\n        </template>\r\n        <t-form-item label=\"字段名\">\r\n          <t-select\r\n            v-model=\"item.where.key\"\r\n            :options=\"wsMsgFields\"\r\n            @change=\"eventChange\"\r\n          ></t-select>\r\n        </t-form-item>\r\n\r\n        <t-form-item label=\"条件\">\r\n          <t-select\r\n            v-model=\"item.where.comparison\"\r\n            :options=\"comparisonOptions\"\r\n            @change=\"eventChange\"\r\n          ></t-select>\r\n        </t-form-item>\r\n\r\n        <t-form-item label=\"值\">\r\n          <t-input v-model=\"item.where.value\" @change=\"eventChange\"></t-input>\r\n        </t-form-item>\r\n      </t-form>\r\n      <template #headerRightContent>\r\n        <t-button\r\n          size=\"small\"\r\n          variant=\"outline\"\r\n          theme=\"danger\"\r\n          :style=\"{ marginLeft: '8px' }\"\r\n          @click=\"deleteEvent(item)\"\r\n        >\r\n          <t-icon name=\"delete\"></t-icon>\r\n        </t-button>\r\n      </template>\r\n    </t-collapse-panel>\r\n  </t-collapse>\r\n  <t-drawer\r\n    v-model:visible=\"drawerVisible\"\r\n    header=\"选择图元\"\r\n    size=\"40%\"\r\n    :on-confirm=\"onClickConfirm\"\r\n    :close-btn=\"true\"\r\n  >\r\n    <t-row v-if=\"currentHandler\" :gutter=\"10\" style=\"height: 100%\">\r\n      <t-col :span=\"4\" style=\"height: 100%\">\r\n        <t-form label-align=\"top\">\r\n          <t-form-item label=\"电路元件\" name=\"name\">\r\n            <t-select\r\n              v-model=\"currentHandler.tags\"\r\n              :options=\"tagOptions\"\r\n              placeholder=\"按标签选择\"\r\n              multiple\r\n              :minCollapsedNum=\"10\"\r\n              clearable\r\n            ></t-select>\r\n          </t-form-item>\r\n          <t-form-item label=\"图元标签\" name=\"tag\">\r\n            <t-input\r\n              v-model=\"currentHandler._tag\"\r\n              placeholder=\"输入自定义的标签进行查询，不做保存\"\r\n              clearable\r\n            ></t-input>\r\n          </t-form-item>\r\n          <t-form-item>\r\n            <t-button block @click=\"findPens\">查询</t-button>\r\n          </t-form-item>\r\n          <t-form-item>\r\n            <t-tooltip content=\"符合条件的图元数量大时，会出现卡顿\">\r\n              <t-button block theme=\"warning\" @click=\"activePens\"\r\n                >选中图元</t-button\r\n              >\r\n            </t-tooltip>\r\n          </t-form-item>\r\n        </t-form>\r\n      </t-col>\r\n      <t-col :span=\"7\" style=\"height: 100%\">\r\n        <t-table\r\n          v-if=\"currentHandler\"\r\n          class=\"meta-table\"\r\n          row-key=\"id\"\r\n          :columns=\"columns\"\r\n          :data=\"penList.value\"\r\n          :selected-row-keys=\"currentHandler.ids\"\r\n          :scroll=\"{ type: 'virtual', rowHeight: 48, bufferSize: 30 }\"\r\n          style=\"height: 100%\"\r\n          @select-change=\"rehandleSelectChange\"\r\n        >\r\n        </t-table>\r\n      </t-col>\r\n    </t-row>\r\n  </t-drawer>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { defineProps, ref, shallowReactive } from \"vue\";\r\nimport { EventAction, EventConfig } from \"../types/Event\";\r\nimport { MessagePlugin } from \"tdesign-vue-next\";\r\nimport ConfigList from \"../utils/electric-config.json\";\r\nimport { s12 } from \"@meta2d/core\";\r\n\r\nconst props = defineProps({\r\n  wsMsgFields: {\r\n    type: Array<any>,\r\n    default: () => [],\r\n  },\r\n  wsMsgHandlers: {\r\n    type: Array<any>,\r\n    default: () => [],\r\n  },\r\n});\r\n\r\nconst handlers = ref<any>(props.wsMsgHandlers);\r\n\r\nconst insert = () => {\r\n  handlers.value.push({\r\n    id: s12(),\r\n    action: EventAction.SetProps,\r\n    params: {\r\n      tags: [],\r\n      ids: [],\r\n    },\r\n    value: {},\r\n    where: {\r\n      key: \"\",\r\n      value: \"\",\r\n      comparison: \"\",\r\n    },\r\n  });\r\n};\r\n\r\nconst deleteEvent = (item: any) => {\r\n  handlers.value.splice(handlers.value.indexOf(item), 1);\r\n  eventChange();\r\n};\r\nconst emit = defineEmits([\"change\"]);\r\nconst eventChange = () => {\r\n  emit(\"change\", handlers.value);\r\n};\r\n\r\nconst eventActionOptions = [\r\n  {\r\n    label: \"更改属性\",\r\n    value: EventAction.SetProps,\r\n  },\r\n  {\r\n    label: \"执行动画\",\r\n    value: EventAction.StartAnimate,\r\n  },\r\n  {\r\n    label: \"暂停动画\",\r\n    value: EventAction.PauseAnimate,\r\n  },\r\n  {\r\n    label: \"停止动画\",\r\n    value: EventAction.StopAnimate,\r\n  },\r\n];\r\n\r\nconst propOptions = [\r\n  {\r\n    label: \"背景颜色\",\r\n    value: \"background\",\r\n  },\r\n  {\r\n    label: \"颜色\",\r\n    value: \"color\",\r\n  },\r\n  {\r\n    label: \"文字\",\r\n    value: \"text\",\r\n  },\r\n  {\r\n    label: \"进度\",\r\n    value: \"progress\",\r\n  },\r\n  {\r\n    label: \"显示\",\r\n    value: \"visible\",\r\n  },\r\n  {\r\n    label: \"状态\",\r\n    value: \"showChild\",\r\n  },\r\n];\r\nconst propList = ref<any>([]);\r\nconst addProp = () => {\r\n  if (propList.value.length >= 6) {\r\n    MessagePlugin.warning(\"最多只能添加6个属性\");\r\n    return;\r\n  }\r\n  propList.value.push({\r\n    prop: \"\",\r\n    value: \"\",\r\n  });\r\n};\r\n\r\nconst deleteProp = (item: any, event: EventConfig) => {\r\n  const index = propList.value.indexOf(item);\r\n  propList.value.splice(index, 1);\r\n  propChange(event)\r\n};\r\n\r\nconst propChange = (event: EventConfig) => {\r\n  const value: any = {};\r\n  propList.value.forEach((item: any) => {\r\n    value[item.prop] = item.value;\r\n  });\r\n  event.value = value;\r\n  emit(\"change\", handlers.value);\r\nconsole.log('prop change: ', event, handlers.value)\r\n};\r\n\r\nconst updatePropList = (index: number[]) => {\r\n  const event = handlers.value[Number(index)];\r\n  if (event.value && typeof event.value === \"object\") {\r\n    propList.value = Object.keys(event.value).map((key: string) => {\r\n      return {\r\n        prop: key,\r\n        value: event.value[key],\r\n      };\r\n    });\r\n  }\r\n};\r\n\r\nconst comparisonOptions = [\r\n  {\r\n    label: \"大于\",\r\n    value: \">\",\r\n  },\r\n  {\r\n    label: \"大于等于\",\r\n    value: \">=\",\r\n  },\r\n  {\r\n    label: \"小于\",\r\n    value: \"<\",\r\n  },\r\n  {\r\n    label: \"小于等于\",\r\n    value: \"<=\",\r\n  },\r\n  {\r\n    label: \"等于\",\r\n    value: \"=\",\r\n  },\r\n  {\r\n    label: \"不等于\",\r\n    value: \"!=\",\r\n  },\r\n];\r\n\r\nconst drawerVisible = ref(false);\r\n\r\nconst showSelect = (index: number) => {\r\n  changeHandler([index]);\r\n  drawerVisible.value = true;\r\n};\r\n\r\nconst currentHandler = shallowReactive<any>({\r\n  tags: [],\r\n  ids: [],\r\n  id: \"\",\r\n});\r\n\r\n/**\r\n * @description 点击折叠面板\r\n * @param value\r\n */\r\nconst changeHandler = (value: number[]) => {\r\n  if (!value.length) return;\r\n  // 拷贝\r\n  const item = JSON.parse(JSON.stringify(handlers.value[value[0]]));\r\n  if (item) {\r\n    currentHandler.tags = item.params.tags;\r\n    currentHandler.ids = filterIds(item.params.ids);\r\n    currentHandler.id = item.id;\r\n    updatePropList(value);\r\n    findPens();\r\n  }\r\n};\r\n\r\nconst tagOptions = ConfigList.map((item) => {\r\n  return {\r\n    label: item.释义,\r\n    value: item.元件类型,\r\n  };\r\n});\r\n\r\n// 清空不存在的图元ID\r\nfunction filterIds(ids: string[]) {\r\n  return ids.filter((id: string) => {\r\n    return !!meta2d.findOne(id);\r\n  });\r\n}\r\n\r\nconst onClickConfirm = () => {\r\n  drawerVisible.value = false;\r\n  // 更新 handlers\r\n  const item = handlers.value.find(\r\n    (item: any) => item.id === currentHandler.id,\r\n  );\r\n  if (item) {\r\n    item.params.tags = currentHandler.tags;\r\n    item.params.ids = filterIds(currentHandler.ids);\r\n    eventChange();\r\n  }\r\n};\r\n\r\nconst penList = shallowReactive<any>({\r\n  value: [],\r\n});\r\nconst columns = [\r\n  {\r\n    title: \"ID\",\r\n    colKey: \"id\",\r\n    type: \"multiple\",\r\n  },\r\n  {\r\n    title: \"图元名称\",\r\n    colKey: \"name\",\r\n  },\r\n  {\r\n    title: \"标签\",\r\n    colKey: \"tags\",\r\n  },\r\n  {\r\n    title: \"文字\",\r\n    colKey: \"text\",\r\n  },\r\n  {\r\n    title: \"描述\",\r\n    colKey: \"description\",\r\n  },\r\n];\r\nconst findPens = () => {\r\n  const data = meta2d.data();\r\n  if (currentHandler) {\r\n    if (currentHandler._tag) {\r\n      penList.value = meta2d.find(currentHandler._tag);\r\n      return;\r\n    } else if (currentHandler.tags.length) {\r\n      const pens: any[] = [];\r\n      currentHandler.tags.forEach((tag: string) => {\r\n        const list = meta2d.find(tag);\r\n        pens.push(...list);\r\n      });\r\n      // pens 去重\r\n      const sets = [...new Set(pens)];\r\n      // console.log(\"sets\", sets, pens);\r\n      setTimeout(() => {\r\n        penList.value = sets;\r\n      }, 1000);\r\n      return;\r\n    }\r\n  }\r\n  setTimeout(() => {\r\n    penList.value = data.pens;\r\n  }, 1000);\r\n};\r\n\r\nconst rehandleSelectChange = (value: string[], ctx: any) => {\r\n  currentHandler.ids = value;\r\n};\r\n\r\nconst activePens = () => {\r\n  if (currentHandler.ids.length) {\r\n    // 根据ID设置选中\r\n    const pens = currentHandler.ids\r\n      .map((id) => {\r\n        return meta2d.findOne(id);\r\n      })\r\n      .filter((pen) => !!pen);\r\n    meta2d.active(pens);\r\n  } else {\r\n    // 按标签查询图元\r\n    meta2d.active(penList.value);\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped></style>\r\n","<template>\r\n  <div>\r\n    <PropsTab :tabs=\"tabs\">\r\n      <template #pen-props>\r\n        <div class=\"props-panel\">\r\n          <t-form label-align=\"left\">\r\n            <t-form-item label=\"名称\" name=\"name\">\r\n              <t-input v-model=\"data.name\" @change=\"onChangeData\" />\r\n            </t-form-item>\r\n            <t-divider />\r\n            <t-form-item label=\"网格\" name=\"grid\">\r\n              <t-switch v-model=\"data.grid\" @change=\"onChangeData\" />\r\n            </t-form-item>\r\n            <t-form-item label=\"网格大小\" name=\"gridSize\">\r\n              <t-input-number\r\n                v-model=\"data.gridSize\"\r\n                :min=\"0\"\r\n                @change=\"onChangeData\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"网格角度\" name=\"gridRotate\">\r\n              <t-input-number\r\n                v-model.number=\"data.gridRotate\"\r\n                @change=\"onChangeData\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"网格颜色\" name=\"gridColor\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"data.gridColor\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['monochrome']\"\r\n                clearable\r\n                @change=\"onChangeData\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-divider />\r\n\r\n            <t-form-item label=\"标尺\" name=\"rule\">\r\n              <t-switch v-model=\"data.rule\" @change=\"onChangeData\" />\r\n            </t-form-item>\r\n            <t-form-item label=\"标尺颜色\" name=\"ruleColor\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"data.ruleColor\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['monochrome']\"\r\n                clearable\r\n                @change=\"onChangeData\"\r\n              />\r\n            </t-form-item>\r\n            <t-divider />\r\n\r\n            <t-form-item label=\"背景颜色\" name=\"background\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"data.background\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['monochrome']\"\r\n                clearable\r\n                @change=\"onChangeData\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"图元默认颜色\" name=\"color\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"data.color\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                clearable\r\n                :color-modes=\"['monochrome']\"\r\n                @change=\"onChangeData\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"背景图片\">\r\n              <t-upload\r\n                ref=\"uploadRef\"\r\n                v-model=\"uploadValue\"\r\n                :action=\"\r\n                  $attrs.uploadUrl ||\r\n                  'https://service-bv448zsw-1257786608.gz.apigw.tencentcs.com/api/upload-demo'\r\n                \"\r\n                :headers=\"headers\"\r\n                name=\"object\"\r\n                :sizeLimit=\"sizeLimit\"\r\n                theme=\"image\"\r\n                tips=\"请选择单张小于1MB的图片上传\"\r\n                accept=\"image/*\"\r\n                @fail=\"handleFail\"\r\n                @success=\"handleSuccess\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"背景图片地址\" name=\"bkImage\">\r\n              <t-input\r\n                v-model=\"data.bkImage\"\r\n                clearable\r\n                @change=\"onChangeData('bkImage')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <!-- 连线相交弯曲  -->\r\n            <t-form-item label=\"连线相交弯曲\" name=\"lineCross\">\r\n              <t-tooltip\r\n                content=\"当直线或折线两两相交时，其中相交的交点会自动弯曲显示\"\r\n              >\r\n                <t-switch v-model=\"data.lineCross\" @change=\"onChangeData\" />\r\n              </t-tooltip>\r\n            </t-form-item>\r\n          </t-form>\r\n        </div>\r\n      </template>\r\n\r\n      <template #struct-props>\r\n        <slot name=\"struct\"></slot>\r\n      </template>\r\n\r\n      <template #comm-props>\r\n        <div class=\"props-panel\">\r\n          <t-collapse defaultExpandAll class=\"meta-collapse\">\r\n            <t-collapse-panel value=\"0\" header=\"WebSocket\">\r\n              <t-form\r\n                :data=\"data\"\r\n                label-align=\"left\"\r\n                size=\"small\"\r\n                labelWidth=\"80px\"\r\n              >\r\n                <t-form-item label=\"地址\" name=\"wsUrl\">\r\n                  <t-input\r\n                    v-model=\"data.wsUrl\"\r\n                    clearable\r\n                    placeholder=\"ws:// 开头，不符合则不保存\"\r\n                    @blur=\"changeConnectProp('wsUrl')\"\r\n                  />\r\n                </t-form-item>\r\n                <t-form-item label=\"消息名称\" name=\"busName\">\r\n                  <t-input\r\n                    v-model=\"data.busName\"\r\n                    clearable\r\n                    @change=\"changeConnectProp('busName')\"\r\n                  />\r\n                </t-form-item>\r\n\r\n                <t-form-item label=\"消息类型\" name=\"msgTypes\">\r\n                  <t-tag-input\r\n                    v-model=\"data.msgTypes\"\r\n                    clearable\r\n                    placeholder=\"消息类型, 数字, 回车添加\"\r\n                    @change=\"changeConnectProp('msgTypes')\"\r\n                  />\r\n                </t-form-item>\r\n\r\n                <t-divider />\r\n                <t-space>\r\n                  <t-button @click=\"testConnect\">测试连接</t-button>\r\n                </t-space>\r\n              </t-form>\r\n            </t-collapse-panel>\r\n            <t-collapse-panel header=\"消息处理代码\">\r\n              <t-button block @click=\"showCodeEditor\">编辑代码</t-button>\r\n            </t-collapse-panel>\r\n            <t-collapse-panel header=\"消息状态字段\">\r\n              <t-button block @click=\"addWsMsgField\">新增</t-button>\r\n              <template #headerRightContent>\r\n                <t-tooltip\r\n                  content=\"用于消息处理器的触发条件\"\r\n                  placement=\"top-right\"\r\n                >\r\n                  <t-button variant=\"text\">\r\n                    <t-icon name=\"help\"></t-icon>\r\n                  </t-button>\r\n                </t-tooltip>\r\n              </template>\r\n              <br />\r\n              <t-row\r\n                v-for=\"(item, index) in data.wsMsgFields\"\r\n                :key=\"index\"\r\n                justify=\"start\"\r\n                style=\"margin-bottom: 4px\"\r\n              >\r\n                <t-col :span=\"10\">\r\n                  <t-input\r\n                    v-model=\"item.value\"\r\n                    @change=\"wsMsgFieldsChange\"\r\n                  ></t-input>\r\n                </t-col>\r\n                <t-col :span=\"2\">\r\n                  <t-button variant=\"text\" @click=\"deleteWsMsgField(index)\">\r\n                    <t-icon name=\"delete\"></t-icon>\r\n                  </t-button>\r\n                </t-col>\r\n              </t-row>\r\n            </t-collapse-panel>\r\n            <t-collapse-panel header=\"消息处理队列\">\r\n              <MessageHandlers\r\n                :wsMsgFields=\"data.wsMsgFields\"\r\n                :wsMsgHandlers=\"data.wsMsgHandlers\"\r\n                @change=\"wsHandlersChange\"\r\n              />\r\n              <template #headerRightContent>\r\n                <t-tooltip\r\n                  content=\"【消息处理代码】存在时，此处的设置无效\"\r\n                  placement=\"top-right\"\r\n                >\r\n                  <t-button variant=\"text\">\r\n                    <t-icon name=\"help\"></t-icon>\r\n                  </t-button>\r\n                </t-tooltip>\r\n              </template>\r\n            </t-collapse-panel>\r\n          </t-collapse>\r\n        </div>\r\n      </template>\r\n    </PropsTab>\r\n    <CodeEditor ref=\"codeEditor\" @confirm=\"saveJsStr\" />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { onMounted, reactive, ref, useAttrs } from \"vue\";\r\nimport { lineCross, clearLineCross } from \"@meta2d/utils\";\r\nimport PropsTab from \"./PropsTab.vue\";\r\nimport { useUpload } from \"../services/useUpload\";\r\nimport { WebSocketClient } from \"@qs/websocket-client\";\r\nimport { NotifyPlugin } from \"tdesign-vue-next\";\r\nimport CodeEditor from \"./CodeEditor.vue\";\r\nimport MessageHandlers from \"./MessageHandlers.vue\";\r\nimport { useWsHandlers } from \"../services/useHandlers\";\r\n\r\n// 图纸数据\r\nconst data = reactive<any>({\r\n  name: \"\",\r\n  background: undefined,\r\n  color: undefined,\r\n  lineCross: false,\r\n  wsUrl: \"\",\r\n  busName: \"\",\r\n  msgTypes: [],\r\n  backgroundImage: \"\",\r\n  grid: false,\r\n  gridSize: 10,\r\n  gridRotate: undefined,\r\n  gridColor: undefined,\r\n  rule: true,\r\n  ruleColor: undefined,\r\n  wsMsgFields: [],\r\n  wsMsgHandlers: [],\r\n});\r\n\r\n// 画布选项\r\nconst options = reactive<any>({\r\n  grid: false,\r\n  gridSize: 10,\r\n  gridRotate: undefined,\r\n  gridColor: undefined,\r\n  rule: true,\r\n});\r\n\r\nconst tabs = [\r\n  {\r\n    label: \"图纸\",\r\n    value: 1,\r\n    slot: \"pen-props\",\r\n  },\r\n  {\r\n    label: \"结构\",\r\n    value: 2,\r\n    slot: \"struct-props\",\r\n  },\r\n  {\r\n    label: \"通信\",\r\n    value: 3,\r\n    slot: \"comm-props\",\r\n  },\r\n];\r\n\r\nonMounted(() => {\r\n  const d: any = meta2d.data();\r\n  data.name = d.name || \"\";\r\n  data.background = d.background;\r\n  data.color = d.color;\r\n  data.lineCross = d.lineCross;\r\n  data.backgroundImage = d.backgroundImage;\r\n  data.grid = d.grid;\r\n  data.gridSize = d.gridSize;\r\n  data.gridRotate = d.gridRotate;\r\n  data.gridColor = d.gridColor;\r\n  data.rule = d.rule;\r\n  data.ruleColor = d.ruleColor;\r\n  data.bkImage = d.bkImage;\r\n  data.wsUrl = d.wsUrl;\r\n  data.busName = d.busName;\r\n  data.msgTypes = d.msgTypes || [];\r\n  data.onMessageJsCode = d.onMessageJsCode;\r\n  data.wsMsgFields = d.wsMsgFields || [];\r\n  data.wsMsgHandlers = d.wsMsgHandlers || [];\r\n\r\n  Object.assign(options, meta2d.getOptions());\r\n});\r\n\r\n/**\r\n * @description 针对单个图纸修改\r\n */\r\nconst onChangeData = (prop?: string) => {\r\n  if (data.lineCross) {\r\n    lineCross(true);\r\n  } else {\r\n    clearLineCross();\r\n  }\r\n\r\n  Object.assign(meta2d.store.data, data);\r\n  meta2d.store.patchFlagsBackground = true;\r\n\r\n  meta2d.setGrid({\r\n    grid: data.grid,\r\n    gridSize: data.gridSize,\r\n    gridRotate: data.gridRotate,\r\n    gridColor: data.gridColor,\r\n  });\r\n  meta2d.setRule({\r\n    rule: data.rule,\r\n    ruleColor: data.ruleColor,\r\n  });\r\n\r\n  if (prop == \"bkImage\") {\r\n    meta2d.setBackgroundImage(data.bkImage);\r\n  }\r\n\r\n  meta2d.render();\r\n};\r\n\r\nconst uploadRef = ref();\r\nconst { uploadValue, sizeLimit, headers } = useUpload();\r\n\r\nconst handleSuccess = (context: any) => {\r\n  console.log(\"upload success: \", context);\r\n  if (context.response) {\r\n    data.bkImage = context.response.url || context.response.data?.fileurl;\r\n    onChangeData(\"bkImage\");\r\n  }\r\n};\r\n\r\nconst handleFail = (e: any) => {\r\n  console.log(\"upload fail: \", e);\r\n};\r\n\r\nconst changeConnectProp = (prop: string) => {\r\n  const value = data[prop];\r\n  if (prop == \"wsUrl\") {\r\n    if (!value?.startsWith(\"ws://\")) {\r\n      data[prop] = \"\";\r\n      return;\r\n    }\r\n  }\r\n  Object.assign(meta2d.store.data, data);\r\n};\r\n\r\nconst { resolver } = useWsHandlers(data);\r\nconst testConnect = () => {\r\n  const msgTypes = data.msgTypes\r\n    .map((item: string) => {\r\n      return Number(item);\r\n    })\r\n    .filter((item: number) => {\r\n      return !isNaN(item);\r\n    });\r\n\r\n  const wsClient = WebSocketClient.getInstance(data.wsUrl, {\r\n    busName: data.busName,\r\n    msgTypes,\r\n    enableLog: false,\r\n    onReady: () => {\r\n      // 绿色文字提示\r\n      console.log(\"%c连接成功！\", \"color: green; font-weight: bold;\");\r\n      NotifyPlugin.success({\r\n        title: \"连接成功！\",\r\n      });\r\n    },\r\n  });\r\n  wsClient.connect();\r\n  // console.log(\"ws client: \", wsClient);\r\n  const jsStr = data.onMessageJsCode;\r\n  wsClient.subscribe(data.busName, msgTypes, (response) => {\r\n    try {\r\n      if (jsStr) {\r\n        const fn = new Function(\"data\", jsStr);\r\n        fn(response);\r\n      } else {\r\n        // 消息处理器的封装\r\n        resolver(response);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error: \", error);\r\n    }\r\n  });\r\n};\r\n\r\nconst codeEditor = ref();\r\nconst showCodeEditor = () => {\r\n  if (codeEditor.value) {\r\n    codeEditor.value.open(data.onMessageJsCode);\r\n  }\r\n};\r\n\r\nconst saveJsStr = (jsStr: string) => {\r\n  data.onMessageJsCode = jsStr;\r\n  changeConnectProp(\"onMessageJsCode\");\r\n};\r\n\r\n// * 自定义消息字段\r\nconst addWsMsgField = () => {\r\n  data.wsMsgFields.push({\r\n    label: \"\",\r\n    value: \"\",\r\n  });\r\n};\r\nconst deleteWsMsgField = (index: number) => {\r\n  data.wsMsgFields.splice(index, 1);\r\n};\r\nconst wsMsgFieldsChange = () => {\r\n  changeConnectProp(\"wsMsgFields\");\r\n};\r\n\r\nconst wsHandlersChange = (handlers: any) => {\r\n  console.log(\"handlers: \", handlers);\r\n  data.wsMsgHandlers = handlers;\r\n  changeConnectProp(\"wsMsgHandlers\");\r\n};\r\n</script>\r\n<style lang=\"postcss\" scoped>\r\n.props-panel {\r\n  padding: 10px;\r\n\r\n  :deep(.t-form) {\r\n    .t-form__item {\r\n      margin-bottom: 8px;\r\n    }\r\n    .t-form__label {\r\n      padding-right: 8px;\r\n    }\r\n\r\n    .t-divider {\r\n      margin: 12px 0;\r\n    }\r\n\r\n    .t-input--auto-width {\r\n      width: 100%;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","// 左右偏移20移动\r\nconst moveXFrames = [\r\n  { x: -10, duration: 100 },\r\n  { x: 10, duration: 80 },\r\n  { x: -10, duration: 50 },\r\n  { x: 10, duration: 30 },\r\n  { x: 0, duration: 300 },\r\n];\r\n\r\n// 上下跳动\r\nconst moveYFrames = [\r\n  { y: -10, duration: 100 },\r\n  { y: 10, duration: 80 },\r\n  { y: -10, duration: 50 },\r\n  { y: 10, duration: 30 },\r\n  { y: 0, duration: 300 },\r\n];\r\n\r\n// 左右摇摆\r\nconst rotateXFrames = [\r\n  {\r\n    duration: 100,\r\n    rotate: -10,\r\n  },\r\n  {\r\n    duration: 100,\r\n    rotate: 10,\r\n  },\r\n  {\r\n    duration: 100,\r\n    rotate: 0,\r\n  },\r\n];\r\n\r\n// 缩放\r\nconst scaleFrames = [\r\n  {\r\n    duration: 100,\r\n    scale: 0.8,\r\n  },\r\n  {\r\n    duration: 400,\r\n    scale: 1,\r\n  },\r\n  {\r\n    duration: 100,\r\n    scale: 1.2,\r\n  },\r\n];\r\n\r\nconst rotateFrames = [\r\n  {\r\n    duration: 1000,\r\n    rotate: 360,\r\n  }\r\n]\r\n\r\nconst rotateFrames2 = [\r\n    {\r\n        duration: 1000,\r\n        rotate: -360,\r\n    }\r\n]\r\n\r\n\r\n// 上述动画所列属性是相对变化\r\n\r\n// 其他数字属性匀速渐变\r\n// 进度变化\r\nconst processFrames = [\r\n//   {\r\n//     duration: 1000,\r\n//     progress: 0.5,\r\n//   },\r\n  {\r\n    duration: 2000,\r\n    progress: 1,\r\n  },\r\n];\r\n// 非数字类型，直接变化\r\nconst colorFrames = [\r\n  {\r\n    duration: 1000,\r\n    color: 'green',\r\n  },\r\n  {\r\n    duration: 2000,\r\n    color: 'red',\r\n  },\r\n];\r\n\r\nexport const PenFrameOptions = [\r\n  {\r\n    label: '上下跳动',\r\n    value: 'moveYFrames',\r\n  },\r\n  {\r\n    label: '左右跳动',\r\n    value: 'moveXFrames',\r\n  },\r\n\r\n  {\r\n    label: '心跳',\r\n    value: 'scaleFrames',\r\n  },\r\n  {\r\n    label: '摇摆',\r\n    value: 'rotateXFrames',\r\n  },\r\n\r\n  {\r\n    label: '旋转',\r\n    value: 'rotateFrames',\r\n  },\r\n  {\r\n    label: '反向旋转',\r\n    value: 'rotateFrames2',\r\n  },\r\n\r\n  {\r\n    label: '进度',\r\n    value: 'processFrames',\r\n  },\r\n\r\n  {\r\n    label: '自定义',\r\n    value: 'x-custom',\r\n  },\r\n\r\n  \r\n\r\n];\r\n\r\nexport const LineAnimateOption = [\r\n  {\r\n    label: \"水流\",\r\n    value: 0,\r\n  },\r\n  {\r\n    label: \"水珠滚动\",\r\n    value: 1,\r\n  },\r\n  {\r\n    label: \"圆点\",\r\n    value: 2,\r\n  },\r\n  {\r\n    label: \"箭头\",\r\n    value: 3,\r\n  },\r\n  {\r\n    label: \"水滴\",\r\n    value: 4,\r\n  },\r\n];\r\n\r\nexport const PenFrames = {\r\n  moveXFrames,\r\n  moveYFrames,\r\n  rotateXFrames,\r\n  scaleFrames,\r\n  processFrames,\r\n  colorFrames,\r\n  rotateFrames,\r\n  rotateFrames2,\r\n};\r\n","<template>\r\n  <div class=\"props-panel__editor\">\r\n    <t-form label-align=\"left\">\r\n      <!-- 时长 -->\r\n      <t-form-item label=\"时长(ms)\" name=\"duration\">\r\n        <t-input-number\r\n          v-model=\"data.duration\"\r\n          :min=\"0\"\r\n          @change=\"changeValue('duration')\"\r\n        />\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"颜色\" name=\"color\">\r\n        <t-color-picker\r\n          class=\"w-full\"\r\n          v-model=\"data.color\"\r\n          :show-primary-color-preview=\"false\"\r\n          format=\"CSS\"\r\n          :color-modes=\"['monochrome']\"\r\n          clearable\r\n          @change=\"changeValue('color')\"\r\n        />\r\n      </t-form-item>\r\n      <t-form-item label=\"浮动颜色\" name=\"hoverColor\">\r\n        <t-color-picker\r\n          class=\"w-full\"\r\n          v-model=\"data.hoverColor\"\r\n          :show-primary-color-preview=\"false\"\r\n          format=\"CSS\"\r\n          :color-modes=\"['monochrome']\"\r\n          clearable\r\n          @change=\"changeValue('hoverColor')\"\r\n        />\r\n      </t-form-item>\r\n      <t-form-item label=\"选中颜色\" name=\"activeColor\">\r\n        <t-color-picker\r\n          class=\"w-full\"\r\n          v-model=\"data.activeColor\"\r\n          :show-primary-color-preview=\"false\"\r\n          format=\"CSS\"\r\n          :color-modes=\"['monochrome']\"\r\n          clearable\r\n          @change=\"changeValue('activeColor')\"\r\n        />\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"背景\" name=\"background\">\r\n        <t-color-picker\r\n          class=\"w-full\"\r\n          v-model=\"data.background\"\r\n          :show-primary-color-preview=\"false\"\r\n          format=\"CSS\"\r\n          :color-modes=\"['monochrome']\"\r\n          clearable\r\n          @change=\"changeValue('background')\"\r\n        />\r\n      </t-form-item>\r\n      <t-form-item label=\"线条\" name=\"dash\">\r\n        <t-select v-model=\"data.dash\" @change=\"changeValue('dash')\">\r\n          <t-option :key=\"0\" :value=\"0\" label=\"实线\"></t-option>\r\n          <t-option :key=\"1\" :value=\"1\" label=\"虚线\"></t-option>\r\n        </t-select>\r\n      </t-form-item>\r\n      <t-form-item label=\"线条宽度\" name=\"lineWidth\">\r\n        <t-input-number\r\n          v-model=\"data.lineWidth\"\r\n          @change=\"changeValue('lineWidth')\"\r\n        />\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"圆角\" name=\"borderRadius\">\r\n        <t-input-number\r\n          :min=\"0\"\r\n          :max=\"1\"\r\n          :step=\"0.01\"\r\n          v-model=\"data.borderRadius\"\r\n          @change=\"changeValue('borderRadius')\"\r\n        />\r\n      </t-form-item>\r\n      <t-form-item label=\"不透明度\" name=\"globalAlpha\">\r\n        <t-slider\r\n          v-model=\"data.globalAlpha\"\r\n          :min=\"0\"\r\n          :max=\"1\"\r\n          :step=\"0.01\"\r\n          @change=\"changeValue('globalAlpha')\"\r\n        />\r\n        <span class=\"ml-16\" style=\"width: 50px; line-height: 30px\">\r\n          {{ data.globalAlpha }}\r\n        </span>\r\n      </t-form-item>\r\n      <t-form-item label=\"阴影颜色\" name=\"shadowColor\">\r\n        <t-color-picker\r\n          class=\"w-full\"\r\n          v-model=\"data.shadowColor\"\r\n          :show-primary-color-preview=\"false\"\r\n          format=\"CSS\"\r\n          :color-modes=\"['monochrome']\"\r\n          clearable\r\n          @change=\"changeValue('shadowColor')\"\r\n        />\r\n      </t-form-item>\r\n      <t-form-item label=\"阴影模糊\" name=\"shadowBlur\">\r\n        <t-input-number\r\n          v-model=\"data.shadowBlur\"\r\n          :min=\"0\"\r\n          @change=\"changeValue('shadowBlur')\"\r\n        />\r\n      </t-form-item>\r\n      <t-form-item label=\"阴影X偏移\" name=\"shadowOffsetX\">\r\n        <t-input-number\r\n          v-model=\"data.shadowOffsetX\"\r\n          @change=\"changeValue('shadowOffsetX')\"\r\n        />\r\n      </t-form-item>\r\n      <t-form-item label=\"阴影Y偏移\" name=\"shadowOffsetY\">\r\n        <t-input-number\r\n          v-model=\"data.shadowOffsetY\"\r\n          @change=\"changeValue('shadowOffsetY')\"\r\n        />\r\n      </t-form-item>\r\n\r\n      <t-divider />\r\n      <t-form-item label=\"文字阴影\" name=\"textHasShadow\">\r\n        <t-switch\r\n          v-model=\"data.textHasShadow\"\r\n          @change=\"changeValue('textHasShadow')\"\r\n        />\r\n      </t-form-item>\r\n      <t-form-item label=\"文本\" name=\"text\">\r\n        <t-input v-model=\"data.text\" clearable @change=\"changeValue('text')\" />\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"字体\" name=\"fontSize\">\r\n        <t-input-number\r\n          v-model=\"data.fontSize\"\r\n          @change=\"changeValue('fontSize')\"\r\n        />\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"文字颜色类型\" name=\"textType\">\r\n        <t-select v-model=\"data.textType\" @change=\"changeValue('textType')\">\r\n          <t-option key=\"hex\" :value=\"0\" label=\"纯色\"></t-option>\r\n          <t-option key=\"rgb\" :value=\"1\" label=\"线性渐变\"></t-option>\r\n          <t-option key=\"rgba\" :value=\"2\" label=\"径向渐变\"></t-option>\r\n        </t-select>\r\n      </t-form-item>\r\n\r\n      <t-form-item\r\n        v-if=\"[1, 2].includes(data.textType)\"\r\n        label=\"文字渐变\"\r\n        name=\"textGradientColors\"\r\n      >\r\n        <t-color-picker\r\n          class=\"w-full\"\r\n          v-model=\"data.textGradientColors\"\r\n          :show-primary-color-preview=\"false\"\r\n          format=\"CSS\"\r\n          :color-modes=\"['linear-gradient']\"\r\n          clearable\r\n          @change=\"changeValue('textGradientColors')\"\r\n        />\r\n      </t-form-item>\r\n\r\n      <t-form-item v-else label=\"文字颜色\" name=\"textColor\">\r\n        <t-color-picker\r\n          class=\"w-full\"\r\n          v-model=\"data.textColor\"\r\n          :show-primary-color-preview=\"false\"\r\n          format=\"CSS\"\r\n          :color-modes=\"['monochrome']\"\r\n          clearable\r\n          @change=\"changeValue('textColor')\"\r\n        />\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"文本风格\" name=\"fontStyle\">\r\n        <t-select v-model=\"data.fontStyle\" @change=\"changeValue('fontStyle')\">\r\n          <t-option key=\"normal\" value=\"normal\" label=\"常规\"></t-option>\r\n          <t-option key=\"italic\" value=\"italic\" label=\"斜体\"></t-option>\r\n        </t-select>\r\n      </t-form-item>\r\n\r\n      <!-- 加粗 -->\r\n      <t-form-item label=\"文本粗细\" name=\"fontWeight\">\r\n        <t-select v-model=\"data.fontWeight\" @change=\"changeValue('fontWeight')\">\r\n          <t-option key=\"normal\" value=\"normal\" label=\"常规\"></t-option>\r\n          <t-option key=\"bold\" value=\"bold\" label=\"加粗\"></t-option>\r\n          <t-option key=\"lighter\" value=\"lighter\" label=\"更细\"></t-option>\r\n        </t-select>\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"换行\" name=\"whiteSpace\">\r\n        <t-select v-model=\"data.whiteSpace\" @change=\"changeValue('whiteSpace')\">\r\n          <t-option key=\"normal\" value=\"normal\" label=\"常规\"></t-option>\r\n          <t-option key=\"nowrap\" value=\"nowrap\" label=\"不换行\"></t-option>\r\n          <t-option\r\n            key=\"pre-line\"\r\n            value=\"pre-line\"\r\n            label=\"换行符换行\"\r\n          ></t-option>\r\n          <t-option\r\n            key=\"break-all\"\r\n            value=\"break-all\"\r\n            label=\"永远换行\"\r\n          ></t-option>\r\n        </t-select>\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"超出省略\" name=\"ellipsis\">\r\n        <t-switch v-model=\"data.ellipsis\" @change=\"changeValue('ellipsis')\">\r\n        </t-switch>\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"下划线\" name=\"textDecoration\">\r\n        <t-switch\r\n          v-model=\"data.textDecoration\"\r\n          @change=\"changeValue('textDecoration')\"\r\n        />\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"下划线颜色\" name=\"textDecorationColor\">\r\n        <t-color-picker\r\n          class=\"w-full\"\r\n          v-model=\"data.textDecorationColor\"\r\n          :show-primary-color-preview=\"false\"\r\n          format=\"CSS\"\r\n          :color-modes=\"['monochrome']\"\r\n          clearable\r\n          @change=\"changeValue('textDecorationColor')\"\r\n        />\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"删除线\" name=\"textStrickout\">\r\n        <t-switch\r\n          v-model=\"data.textStrickout\"\r\n          @change=\"changeValue('textStrickout')\"\r\n        />\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"删除线颜色\" name=\"textStrickoutColor\">\r\n        <t-color-picker\r\n          class=\"w-full\"\r\n          v-model=\"data.textStrickoutColor\"\r\n          :show-primary-color-preview=\"false\"\r\n          format=\"CSS\"\r\n          :color-modes=\"['monochrome']\"\r\n          clearable\r\n          @change=\"changeValue('textStrickoutColor')\"\r\n        />\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"文字水平对齐\" name=\"textAlign\">\r\n        <t-select v-model=\"data.textAlign\" @change=\"changeValue('textAlign')\">\r\n          <t-option key=\"left\" value=\"left\" label=\"左对齐\"></t-option>\r\n          <t-option key=\"center\" value=\"center\" label=\"居中\"></t-option>\r\n          <t-option key=\"right\" value=\"right\" label=\"右对齐\"></t-option>\r\n        </t-select>\r\n      </t-form-item>\r\n      <t-form-item label=\"文字垂直对齐\" name=\"textBaseline\">\r\n        <t-select\r\n          v-model=\"data.textBaseline\"\r\n          @change=\"changeValue('textBaseline')\"\r\n        >\r\n          <t-option key=\"top\" value=\"top\" label=\"顶部对齐\"></t-option>\r\n          <t-option key=\"middle\" value=\"middle\" label=\"居中\"></t-option>\r\n          <t-option key=\"bottom\" value=\"bottom\" label=\"底部对齐\"></t-option>\r\n        </t-select>\r\n      </t-form-item>\r\n\r\n      <t-divider />\r\n\r\n      <t-form-item label=\"宽\" name=\"width\">\r\n        <t-input-number v-model=\"data.width\" @change=\"changeRect('width')\" />\r\n      </t-form-item>\r\n      <t-form-item label=\"高\" name=\"height\">\r\n        <t-input-number v-model=\"data.height\" @change=\"changeRect('height')\" />\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"旋转角度\" name=\"rotate\">\r\n        <t-input-number v-model=\"data.rotate\" @change=\"changeValue('rotate')\" />\r\n      </t-form-item>\r\n\r\n      <t-divider />\r\n      <t-form-item label=\"进度\" name=\"progress\">\r\n        <t-input-number\r\n          v-model=\"data.progress\"\r\n          :step=\"0.1\"\r\n          :min=\"0\"\r\n          :max=\"1\"\r\n          @change=\"changeValue('progress')\"\r\n        />\r\n      </t-form-item>\r\n      <t-form-item label=\"进度颜色\" name=\"progressColor\">\r\n        <t-color-picker\r\n          class=\"w-full\"\r\n          v-model=\"data.progressColor\"\r\n          :show-primary-color-preview=\"false\"\r\n          format=\"CSS\"\r\n          :color-modes=\"['monochrome']\"\r\n          clearable\r\n          @change=\"changeValue('progressColor')\"\r\n        />\r\n      </t-form-item>\r\n      <t-form-item label=\"渐变颜色\" name=\"progressGradientColors\">\r\n        <t-color-picker\r\n          class=\"w-full\"\r\n          v-model=\"data.progressGradientColors\"\r\n          :show-primary-color-preview=\"false\"\r\n          clearable\r\n          format=\"CSS\"\r\n          :color-modes=\"['linear-gradient']\"\r\n          @change=\"changeValue('progressGradientColors')\"\r\n        />\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"垂直进度\" name=\"verticalProgress\">\r\n        <t-switch\r\n          v-model=\"data.verticalProgress\"\r\n          @change=\"changeValue('verticalProgress')\"\r\n        />\r\n      </t-form-item>\r\n      <t-form-item label=\"反向进度\" name=\"reverseProgress\">\r\n        <t-switch\r\n          v-model=\"data.reverseProgress\"\r\n          @change=\"changeValue('reverseProgress')\"\r\n        />\r\n      </t-form-item>\r\n      <t-form-item label=\"水平翻转\" name=\"flipX\">\r\n        <t-switch v-model=\"data.flipX\" @change=\"changeValue('flipX')\" />\r\n      </t-form-item>\r\n\r\n      <t-form-item label=\"垂直翻转\" name=\"flipY\">\r\n        <t-switch v-model=\"data.flipY\" @change=\"changeValue('flipY')\" />\r\n      </t-form-item>\r\n\r\n      <t-divider />\r\n\r\n      <t-form-item v-if=\"data.penName == 'combine'\" label=\"状态\" name=\"status\">\r\n        <t-select v-model=\"data.showChild\" @change=\"changeValue('showChild')\">\r\n          <t-option\r\n            v-for=\"(item, index) in statusList\"\r\n            :key=\"item.value\"\r\n            :value=\"index\"\r\n            :label=\"item.label\"\r\n          ></t-option>\r\n        </t-select>\r\n      </t-form-item>\r\n    </t-form>\r\n  </div>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { defineProps } from \"vue\";\r\nconst props = defineProps({\r\n  data: {\r\n    type: Object,\r\n    default: () => ({}),\r\n  },\r\n  statusList: {\r\n    type: Array,\r\n    default: () => [],\r\n  }\r\n});\r\n\r\nconst emit = defineEmits([\"propChange\"]);\r\n\r\nconst changeValue = (key: string) => {\r\n  // * 不需要即时响应\r\n  emit(\"propChange\", key);\r\n};\r\n\r\nconst changeRect = (key: string) => {\r\n  // * 不需要即时响应\r\n  emit(\"propChange\", key);\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.props-panel__editor {\r\n  padding: 10px;\r\n  background-color: white;\r\n  // --td-comp-margin-xxl: 10px;\r\n}\r\n</style>\r\n","<template>\r\n  <br />\r\n  <t-button block theme=\"primary\" @click=\"insert\">添加事件</t-button>\r\n  <t-collapse class=\"meta-collapse\" expand-mutex @change=\"updatePropList\">\r\n    <t-collapse-panel v-for=\"item in events\" header=\"事件\">\r\n      <t-form labelAlign=\"left\">\r\n        <t-form-item label=\"事件类型\">\r\n          <t-select\r\n            v-model=\"item.name\"\r\n            :options=\"eventTypeOptions\"\r\n            @change=\"eventChange\"\r\n          ></t-select>\r\n        </t-form-item>\r\n        <t-form-item label=\"事件行为\">\r\n          <t-select\r\n            v-model=\"item.action\"\r\n            :options=\"eventActionOptions\"\r\n            @change=\"eventChange\"\r\n          ></t-select>\r\n        </t-form-item>\r\n        <t-form-item v-if=\"item.action === EventAction.Link\" label=\"链接地址\">\r\n          <t-input\r\n            v-model=\"item.value\"\r\n            clearable\r\n            @change=\"eventChange\"\r\n          ></t-input>\r\n        </t-form-item>\r\n        <template v-if=\"item.action === EventAction.SetProps\">\r\n          <t-form-item label=\"目标\">\r\n            <t-input\r\n              v-model=\"item.params\"\r\n              placeholder=\"可输入目标图元的ID/Tag\"\r\n              clearable\r\n              @change=\"eventChange\"\r\n            ></t-input>\r\n          </t-form-item>\r\n          <!-- 属性列表修改 -->\r\n          <t-row justify=\"start\">\r\n            <t-col :span=\"5\">\r\n              <div>属性</div>\r\n            </t-col>\r\n            <t-col :span=\"5\">\r\n              <div>值</div>\r\n            </t-col>\r\n            <t-col :span=\"2\">\r\n              <t-button variant=\"text\" @click=\"addProp\">\r\n                <t-icon name=\"add\"></t-icon>\r\n              </t-button>\r\n            </t-col>\r\n          </t-row>\r\n          <t-row\r\n            v-for=\"(propItem, index) in propList\"\r\n            :key=\"index\"\r\n            justify=\"start\"\r\n            :gutter=\"4\"\r\n            style=\"margin-bottom: 4px\"\r\n          >\r\n            <t-col :span=\"5\">\r\n              <t-select\r\n                v-model=\"propItem.prop\"\r\n                :options=\"propOptions\"\r\n                @change=\"propChange(item)\"\r\n              ></t-select>\r\n            </t-col>\r\n            <t-col :span=\"5\">\r\n              <t-input\r\n                v-model=\"propItem.value\"\r\n                @change=\"propChange(item)\"\r\n              ></t-input>\r\n            </t-col>\r\n            <t-col :span=\"2\">\r\n              <t-button variant=\"text\" @click=\"deleteProp(propItem)\">\r\n                <t-icon name=\"delete\"></t-icon>\r\n              </t-button>\r\n            </t-col>\r\n          </t-row>\r\n        </template>\r\n        <t-form-item\r\n          v-if=\"\r\n            [\r\n              EventAction.PauseAnimate,\r\n              EventAction.StopAnimate,\r\n              EventAction.StartAnimate,\r\n            ].includes(item.action)\r\n          \"\r\n          label=\"目标\"\r\n        >\r\n          <t-input\r\n            v-model=\"item.value\"\r\n            placeholder=\"可输入目标图元的ID/Tag\"\r\n            clearable\r\n            @change=\"eventChange\"\r\n          ></t-input>\r\n        </t-form-item>\r\n      </t-form>\r\n      <template #headerRightContent>\r\n        <t-button\r\n          size=\"small\"\r\n          variant=\"outline\"\r\n          theme=\"danger\"\r\n          :style=\"{ marginLeft: '8px' }\"\r\n          @click=\"deleteEvent(item)\"\r\n        >\r\n          <t-icon name=\"delete\"></t-icon>\r\n        </t-button>\r\n      </template>\r\n    </t-collapse-panel>\r\n  </t-collapse>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { defineProps, ref } from \"vue\";\r\nimport { MessagePlugin } from \"tdesign-vue-next\";\r\nimport { EventAction, EventConfig } from '../types/Event'\r\nconst props = defineProps({\r\n  defaultEventsValue: {\r\n    type: Array,\r\n    default: () => [],\r\n  },\r\n});\r\n\r\nconst events = ref<Array<EventConfig>>(\r\n  props.defaultEventsValue as EventConfig[]\r\n);\r\n\r\nconst eventTypeOptions = [\r\n  {\r\n    label: \"单击\",\r\n    value: \"click\",\r\n  },\r\n  {\r\n    label: \"双击\",\r\n    value: \"dblclick\",\r\n  },\r\n  {\r\n    label: \"鼠标按下\",\r\n    value: \"mousedown\",\r\n  },\r\n  {\r\n    label: \"鼠标抬起\",\r\n    value: \"mouseup\",\r\n  },\r\n  {\r\n    label: \"鼠标进入\",\r\n    value: \"enter\",\r\n  },\r\n  {\r\n    label: \"鼠标离开\",\r\n    value: \"leave\",\r\n  },\r\n//   {\r\n//     label: \"选中\",\r\n//     value: \"active\",\r\n//   },\r\n//   {\r\n//     label: \"取消选中\",\r\n//     value: \"inactive\",\r\n//   },\r\n];\r\n\r\nconst eventActionOptions = [\r\n  {\r\n    label: \"打开链接\",\r\n    value: EventAction.Link,\r\n  },\r\n  {\r\n    label: \"更改属性\",\r\n    value: EventAction.SetProps,\r\n  },\r\n  {\r\n    label: \"执行动画\",\r\n    value: EventAction.StartAnimate,\r\n  },\r\n  {\r\n    label: \"暂停动画\",\r\n    value: EventAction.PauseAnimate,\r\n  },\r\n  {\r\n    label: \"停止动画\",\r\n    value: EventAction.StopAnimate,\r\n  },\r\n  //   {\r\n  //     label: \"执行JS代码\",\r\n  //     value: EventAction.JS,\r\n  //   },\r\n  //   {\r\n  //     label: \"执行全局函数\",\r\n  //     value: EventAction.GlobalFn,\r\n  //   },\r\n  //   {\r\n  //     label: \"发送消息\",\r\n  //     value: EventAction.Emit,\r\n  //   },\r\n  //   {\r\n  //     label: \"播放视频\",\r\n  //     value: EventAction.StartVideo,\r\n  //   },\r\n  //   {\r\n  //     label: \"暂停视频\",\r\n  //     value: EventAction.PauseVideo,\r\n  //   },\r\n  //   {\r\n  //     label: \"停止视频\",\r\n  //     value: EventAction.StopVideo,\r\n  //   },\r\n  //   {\r\n  //     label: \"发送图元数据\",\r\n  //     value: EventAction.SendPropData,\r\n  //   },\r\n  //   {\r\n  //     label: \"发送绑定变量\",\r\n  //     value: EventAction.SendVarData,\r\n  //   },\r\n];\r\n\r\nconst insert = () => {\r\n  events.value.push({\r\n    name: \"\",\r\n    action: 0,\r\n    value: \"\",\r\n    params: \"\",\r\n    where: {},\r\n  });\r\n};\r\nconst deleteEvent = (event: any) => {\r\n  events.value = events.value.filter((item: any) => item !== event);\r\n};\r\n\r\nconst emit = defineEmits([\"change\"]);\r\nconst eventChange = () => {\r\n  emit(\"change\", events.value);\r\n};\r\n\r\nconst propOptions = [\r\n  {\r\n    label: \"背景颜色\",\r\n    value: \"background\",\r\n  },\r\n  {\r\n    label: \"颜色\",\r\n    value: \"color\",\r\n  },\r\n  {\r\n    label: \"文字\",\r\n    value: \"text\",\r\n  },\r\n  {\r\n    label: \"进度\",\r\n    value: \"progress\",\r\n  },\r\n  {\r\n    label: \"显示\",\r\n    value: \"visible\",\r\n  },\r\n  {\r\n    label: \"状态\",\r\n    value: \"showChild\",\r\n  },\r\n];\r\nconst propList = ref<any>([]);\r\nconst addProp = () => {\r\n  if (propList.value.length >= 6) {\r\n    MessagePlugin.warning(\"最多只能添加6个属性\");\r\n    return;\r\n  }\r\n  propList.value.push({\r\n    prop: \"\",\r\n    value: \"\",\r\n  });\r\n};\r\n\r\nconst deleteProp = (item: any) => {\r\n  const index = propList.value.indexOf(item);\r\n  propList.value.splice(index, 1);\r\n};\r\n\r\nconst propChange = (event: EventConfig) => {\r\n  const value: any = {};\r\n  propList.value.forEach((item: any) => {\r\n    value[item.prop] = item.value;\r\n  });\r\n  event.value = value;\r\n  emit(\"change\", events.value);\r\n};\r\n\r\nconst updatePropList = (index: number[]) => {\r\n  const event = events.value[Number(index)];\r\n  if (event.value && typeof event.value === \"object\") {\r\n    propList.value = Object.keys(event.value).map((key: string) => {\r\n      return {\r\n        prop: key,\r\n        value: event.value[key],\r\n      };\r\n    });\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped></style>\r\n","<template>\r\n  <div class=\"\">\r\n    <PropsTab v-if=\"pen\" :tabs=\"tabs\" :defaultValue=\"activePanel\">\r\n      <template #pen>\r\n        <div class=\"props-panel\">\r\n          <t-form label-align=\"left\">\r\n            <t-form-item label=\"颜色\" name=\"color\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"pen.color\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['monochrome']\"\r\n                clearable\r\n                @change=\"changeValue('color')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"浮动颜色\" name=\"hoverColor\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"pen.hoverColor\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['monochrome']\"\r\n                clearable\r\n                @change=\"changeValue('hoverColor')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"选中颜色\" name=\"activeColor\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"pen.activeColor\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['monochrome']\"\r\n                clearable\r\n                @change=\"changeValue('activeColor')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"背景\" name=\"background\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"pen.background\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['monochrome']\"\r\n                clearable\r\n                @change=\"changeValue('background')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"线条\" name=\"dash\">\r\n              <t-select v-model=\"pen.dash\" @change=\"changeValue('dash')\">\r\n                <t-option :key=\"0\" :value=\"0\" label=\"实线\"></t-option>\r\n                <t-option :key=\"1\" :value=\"1\" label=\"虚线\"></t-option>\r\n              </t-select>\r\n            </t-form-item>\r\n            <t-form-item label=\"线条宽度\" name=\"lineWidth\">\r\n              <t-input-number\r\n                v-model=\"pen.lineWidth\"\r\n                @change=\"changeValue('lineWidth')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"圆角\" name=\"borderRadius\">\r\n              <t-input-number\r\n                :min=\"0\"\r\n                :max=\"1\"\r\n                :step=\"0.01\"\r\n                v-model=\"pen.borderRadius\"\r\n                @change=\"changeValue('borderRadius')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"不透明度\" name=\"globalAlpha\">\r\n              <t-slider\r\n                v-model=\"pen.globalAlpha\"\r\n                :min=\"0\"\r\n                :max=\"1\"\r\n                :step=\"0.01\"\r\n                @change=\"changeValue('globalAlpha')\"\r\n              />\r\n              <span class=\"ml-16\" style=\"width: 50px; line-height: 30px\">\r\n                {{ pen.globalAlpha }}\r\n              </span>\r\n            </t-form-item>\r\n            <t-form-item label=\"阴影颜色\" name=\"shadowColor\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"pen.shadowColor\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['monochrome']\"\r\n                clearable\r\n                @change=\"changeValue('shadowColor')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"阴影模糊\" name=\"shadowBlur\">\r\n              <t-input-number\r\n                v-model=\"pen.shadowBlur\"\r\n                :min=\"0\"\r\n                @change=\"changeValue('shadowBlur')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"阴影X偏移\" name=\"shadowOffsetX\">\r\n              <t-input-number\r\n                v-model=\"pen.shadowOffsetX\"\r\n                @change=\"changeValue('shadowOffsetX')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"阴影Y偏移\" name=\"shadowOffsetY\">\r\n              <t-input-number\r\n                v-model=\"pen.shadowOffsetY\"\r\n                @change=\"changeValue('shadowOffsetY')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-divider />\r\n            <t-form-item label=\"文字阴影\" name=\"textHasShadow\">\r\n              <t-switch\r\n                v-model=\"pen.textHasShadow\"\r\n                @change=\"changeValue('textHasShadow')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"文本\" name=\"text\">\r\n              <t-input\r\n                v-model=\"pen.text\"\r\n                clearable\r\n                @change=\"changeValue('text')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"字体\" name=\"fontSize\">\r\n              <t-input-number\r\n                v-model=\"pen.fontSize\"\r\n                @change=\"changeValue('fontSize')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"文字颜色类型\" name=\"textType\">\r\n              <t-select\r\n                v-model=\"pen.textType\"\r\n                @change=\"changeValue('textType')\"\r\n              >\r\n                <t-option key=\"hex\" :value=\"0\" label=\"纯色\"></t-option>\r\n                <t-option key=\"rgb\" :value=\"1\" label=\"线性渐变\"></t-option>\r\n                <t-option key=\"rgba\" :value=\"2\" label=\"径向渐变\"></t-option>\r\n              </t-select>\r\n            </t-form-item>\r\n\r\n            <t-form-item\r\n              v-if=\"[1, 2].includes(pen.textType)\"\r\n              label=\"文字渐变\"\r\n              name=\"textGradientColors\"\r\n            >\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"pen.textGradientColors\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['linear-gradient']\"\r\n                clearable\r\n                @change=\"changeValue('textGradientColors')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item v-else label=\"文字颜色\" name=\"textColor\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"pen.textColor\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['monochrome']\"\r\n                clearable\r\n                @change=\"changeValue('textColor')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"文本风格\" name=\"fontStyle\">\r\n              <t-select\r\n                v-model=\"pen.fontStyle\"\r\n                @change=\"changeValue('fontStyle')\"\r\n              >\r\n                <t-option key=\"normal\" value=\"normal\" label=\"常规\"></t-option>\r\n                <t-option key=\"italic\" value=\"italic\" label=\"斜体\"></t-option>\r\n              </t-select>\r\n            </t-form-item>\r\n\r\n            <!-- 加粗 -->\r\n            <t-form-item label=\"文本粗细\" name=\"fontWeight\">\r\n              <t-select\r\n                v-model=\"pen.fontWeight\"\r\n                @change=\"changeValue('fontWeight')\"\r\n              >\r\n                <t-option key=\"normal\" value=\"normal\" label=\"常规\"></t-option>\r\n                <t-option key=\"bold\" value=\"bold\" label=\"加粗\"></t-option>\r\n                <t-option key=\"lighter\" value=\"lighter\" label=\"更细\"></t-option>\r\n              </t-select>\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"换行\" name=\"whiteSpace\">\r\n              <t-select\r\n                v-model=\"pen.whiteSpace\"\r\n                @change=\"changeValue('whiteSpace')\"\r\n              >\r\n                <t-option key=\"normal\" value=\"normal\" label=\"常规\"></t-option>\r\n                <t-option key=\"nowrap\" value=\"nowrap\" label=\"不换行\"></t-option>\r\n                <t-option\r\n                  key=\"pre-line\"\r\n                  value=\"pre-line\"\r\n                  label=\"换行符换行\"\r\n                ></t-option>\r\n                <t-option\r\n                  key=\"break-all\"\r\n                  value=\"break-all\"\r\n                  label=\"永远换行\"\r\n                ></t-option>\r\n              </t-select>\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"超出省略\" name=\"ellipsis\">\r\n              <t-switch\r\n                v-model=\"pen.ellipsis\"\r\n                @change=\"changeValue('ellipsis')\"\r\n              >\r\n              </t-switch>\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"下划线\" name=\"textDecoration\">\r\n              <t-switch\r\n                v-model=\"pen.textDecoration\"\r\n                @change=\"changeValue('textDecoration')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"下划线颜色\" name=\"textDecorationColor\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"pen.textDecorationColor\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['monochrome']\"\r\n                clearable\r\n                @change=\"changeValue('textDecorationColor')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"删除线\" name=\"textStrickout\">\r\n              <t-switch\r\n                v-model=\"pen.textStrickout\"\r\n                @change=\"changeValue('textStrickout')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"删除线颜色\" name=\"textStrickoutColor\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"pen.textStrickoutColor\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['monochrome']\"\r\n                clearable\r\n                @change=\"changeValue('textStrickoutColor')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"文字水平对齐\" name=\"textAlign\">\r\n              <t-select\r\n                v-model=\"pen.textAlign\"\r\n                @change=\"changeValue('textAlign')\"\r\n              >\r\n                <t-option key=\"left\" value=\"left\" label=\"左对齐\"></t-option>\r\n                <t-option key=\"center\" value=\"center\" label=\"居中\"></t-option>\r\n                <t-option key=\"right\" value=\"right\" label=\"右对齐\"></t-option>\r\n              </t-select>\r\n            </t-form-item>\r\n            <t-form-item label=\"文字垂直对齐\" name=\"textBaseline\">\r\n              <t-select\r\n                v-model=\"pen.textBaseline\"\r\n                @change=\"changeValue('textBaseline')\"\r\n              >\r\n                <t-option key=\"top\" value=\"top\" label=\"顶部对齐\"></t-option>\r\n                <t-option key=\"middle\" value=\"middle\" label=\"居中\"></t-option>\r\n                <t-option\r\n                  key=\"bottom\"\r\n                  value=\"bottom\"\r\n                  label=\"底部对齐\"\r\n                ></t-option>\r\n              </t-select>\r\n            </t-form-item>\r\n\r\n            <t-divider />\r\n\r\n            <t-form-item label=\"X\" name=\"x\">\r\n              <t-input-number v-model=\"rect.x\" @change=\"changeRect('x')\" />\r\n            </t-form-item>\r\n            <t-form-item label=\"Y\" name=\"y\">\r\n              <t-input-number v-model=\"rect.y\" @change=\"changeRect('y')\" />\r\n            </t-form-item>\r\n            <t-form-item label=\"宽\" name=\"width\">\r\n              <t-input-number\r\n                v-model=\"rect.width\"\r\n                @change=\"changeRect('width')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"高\" name=\"height\">\r\n              <t-input-number\r\n                v-model=\"rect.height\"\r\n                @change=\"changeRect('height')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"锁定宽高比\" name=\"ratio\">\r\n              <t-switch v-model=\"pen.ratio\" @change=\"changeValue('ratio')\" />\r\n            </t-form-item>\r\n            <t-form-item label=\"旋转角度\" name=\"rotate\">\r\n              <t-input-number\r\n                v-model=\"pen.rotate\"\r\n                @change=\"changeValue('rotate')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-divider />\r\n            <t-form-item label=\"进度\" name=\"progress\">\r\n              <t-input-number\r\n                v-model=\"pen.progress\"\r\n                :step=\"0.1\"\r\n                :min=\"0\"\r\n                :max=\"1\"\r\n                @change=\"changeValue('progress')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"进度颜色\" name=\"progressColor\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"pen.progressColor\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['monochrome']\"\r\n                clearable\r\n                @change=\"changeValue('progressColor')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"渐变颜色\" name=\"progressGradientColors\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"pen.progressGradientColors\"\r\n                :show-primary-color-preview=\"false\"\r\n                clearable\r\n                format=\"CSS\"\r\n                :color-modes=\"['linear-gradient']\"\r\n                @change=\"changeValue('progressGradientColors')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"垂直进度\" name=\"verticalProgress\">\r\n              <t-switch\r\n                v-model=\"pen.verticalProgress\"\r\n                @change=\"changeValue('verticalProgress')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"反向进度\" name=\"reverseProgress\">\r\n              <t-switch\r\n                v-model=\"pen.reverseProgress\"\r\n                @change=\"changeValue('reverseProgress')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"水平翻转\" name=\"flipX\">\r\n              <t-switch v-model=\"pen.flipX\" @change=\"changeValue('flipX')\" />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"垂直翻转\" name=\"flipY\">\r\n              <t-switch v-model=\"pen.flipY\" @change=\"changeValue('flipY')\" />\r\n            </t-form-item>\r\n\r\n            <t-divider />\r\n\r\n            <template v-if=\"pen.name == 'combine' && pen.showChild != undefined\">\r\n              <t-form-item label=\"状态\" name=\"status\">\r\n                <t-select\r\n                  v-model=\"pen.showChild\"\r\n                  @change=\"changeValue('showChild')\"\r\n                >\r\n                  <t-option\r\n                    v-for=\"(item, index) in statusList\"\r\n                    :key=\"item.value\"\r\n                    :value=\"index\"\r\n                    :label=\"item.label\"\r\n                  ></t-option>\r\n                </t-select>\r\n              </t-form-item>\r\n              <t-divider />\r\n            </template>\r\n\r\n            <t-space size=\"4px\">\r\n              <t-button @click=\"top\">置顶</t-button>\r\n              <t-button @click=\"bottom\">置底</t-button>\r\n              <t-button @click=\"up\">上一层</t-button>\r\n              <t-button @click=\"down\">下一层</t-button>\r\n            </t-space>\r\n          </t-form>\r\n        </div>\r\n      </template>\r\n      <template v-if=\"['image'].includes(pen.name)\" #image>\r\n        <div class=\"props-panel\">\r\n          <t-form label-align=\"left\">\r\n            <t-form-item label=\"图片上传\" name=\"image\">\r\n              <t-upload\r\n                ref=\"uploadRef\"\r\n                v-model=\"uploadValue\"\r\n                :action=\"\r\n                  $attrs.uploadUrl ||\r\n                  'https://service-bv448zsw-1257786608.gz.apigw.tencentcs.com/api/upload-demo'\r\n                \"\r\n                :headers=\"headers\"\r\n                name=\"object\"\r\n                :sizeLimit=\"sizeLimit\"\r\n                theme=\"image\"\r\n                tips=\"请选择单张小于1MB的图片上传\"\r\n                accept=\"image/*\"\r\n                @fail=\"handleFail\"\r\n                @success=\"handleSuccess\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"图片地址\" name=\"image\">\r\n              <t-input\r\n                v-model=\"pen.image\"\r\n                clearable\r\n                @change=\"changeValue('image')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"保持比例\" name=\"imageRatio\">\r\n              <t-switch\r\n                v-model=\"pen.imageRatio\"\r\n                @change=\"changeValue('imageRatio')\"\r\n              />\r\n            </t-form-item>\r\n          </t-form>\r\n        </div>\r\n      </template>\r\n      <template #animate>\r\n        <div class=\"props-panel\">\r\n          <t-form label-align=\"left\">\r\n            <template v-if=\"isLine\">\r\n              <t-form-item label=\"动画效果\" name=\"lineAnimateType\">\r\n                <t-select\r\n                  v-model=\"pen.lineAnimateType\"\r\n                  @change=\"changeValue('lineAnimateType')\"\r\n                >\r\n                  <t-option\r\n                    v-for=\"item in LineAnimateOption\"\r\n                    :key=\"item.value\"\r\n                    :value=\"item.value\"\r\n                    :label=\"item.label\"\r\n                  ></t-option>\r\n                </t-select>\r\n              </t-form-item>\r\n              <t-form-item label=\"反向流动\" name=\"reverse\">\r\n                <t-switch\r\n                  v-model=\"pen.animateReverse\"\r\n                  @change=\"changeValue('animateReverse')\"\r\n                />\r\n              </t-form-item>\r\n              <t-form-item label=\"线宽\" name=\"animateLineWidth\">\r\n                <t-input-number\r\n                  v-model=\"pen.animateLineWidth\"\r\n                  @change=\"changeValue('animateLineWidth')\"\r\n                />\r\n              </t-form-item>\r\n\r\n              <t-form-item label=\"速度\" name=\"animateSpan\">\r\n                <t-input-number\r\n                  v-model=\"pen.animateSpan\"\r\n                  :min=\"1\"\r\n                  :max=\"5\"\r\n                  @change=\"changeValue('animateSpan')\"\r\n                />\r\n              </t-form-item>\r\n              <t-form-item label=\"颜色\" name=\"color\">\r\n                <t-color-picker\r\n                  class=\"w-full\"\r\n                  v-model=\"pen.animateColor\"\r\n                  :show-primary-color-preview=\"false\"\r\n                  format=\"CSS\"\r\n                  :color-modes=\"['monochrome']\"\r\n                  @change=\"changeValue('animateColor')\"\r\n                />\r\n              </t-form-item>\r\n              <t-form-item label=\"动画发光\" name=\"animateShadow\">\r\n                <t-switch\r\n                  v-model=\"pen.animateShadow\"\r\n                  @change=\"changeValue('animateShadow')\"\r\n                />\r\n              </t-form-item>\r\n              <t-form-item label=\"发光颜色\" name=\"animateShadowColor\">\r\n                <t-color-picker\r\n                  class=\"w-full\"\r\n                  v-model=\"pen.animateShadowColor\"\r\n                  :show-primary-color-preview=\"false\"\r\n                  format=\"CSS\"\r\n                  :color-modes=\"['monochrome']\"\r\n                  @change=\"changeValue('animateShadowColor')\"\r\n                />\r\n              </t-form-item>\r\n            </template>\r\n            <template v-else>\r\n              <t-form-item label=\"动画效果\" name=\"animateType\">\r\n                <t-select\r\n                  v-model=\"pen.animateType\"\r\n                  @change=\"changeValue('animateType')\"\r\n                >\r\n                  <t-option\r\n                    v-for=\"item in PenFrameOptions\"\r\n                    :key=\"item.value\"\r\n                    :value=\"item.value\"\r\n                    :label=\"item.label\"\r\n                  ></t-option>\r\n                </t-select>\r\n              </t-form-item>\r\n\r\n              <t-form-item\r\n                v-if=\"pen.animateType == 'x-custom'\"\r\n                label=\"自定义动画帧\"\r\n              >\r\n                <t-button\r\n                  variant=\"text\"\r\n                  theme=\"primary\"\r\n                  @click=\"showFramesDrawer\"\r\n                  >编辑\r\n                </t-button>\r\n              </t-form-item>\r\n            </template>\r\n\r\n            <t-form-item label=\"自动播放\" name=\"autoPlay\">\r\n              <t-switch\r\n                v-model=\"pen.autoPlay\"\r\n                @change=\"changeValue('autoPlay')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-divider />\r\n            <t-space>\r\n              <t-button @click=\"animate(true)\">播放</t-button>\r\n              <t-button @click=\"animate()\">停止</t-button>\r\n            </t-space>\r\n          </t-form>\r\n        </div>\r\n      </template>\r\n\r\n      <template #struct>\r\n        <slot name=\"struct\" :pen=\"pen\"></slot>\r\n      </template>\r\n\r\n      <template #data>\r\n        <div class=\"props-panel\">\r\n          <t-form label-align=\"left\">\r\n            <t-form-item label=\"ID\" name=\"data\">\r\n              <t-tag maxWidth=\"100%\" style=\"flex: 1;width: 0;\">{{ pen.id }}</t-tag>\r\n\r\n              <t-button\r\n                theme=\"primary\"\r\n                variant=\"text\"\r\n                style=\"margin-left: 10px\"\r\n                @click=\"copyId\"\r\n              >\r\n                <t-icon name=\"copy\"></t-icon>\r\n              </t-button>\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"描述\" name=\"description\">\r\n              <t-input\r\n                v-model=\"pen.description\"\r\n                maxlength=\"50\"\r\n                clearable\r\n                @change=\"changeValue('description')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"标签\" name=\"tags\">\r\n              <t-tag-input\r\n                v-model=\"pen.tags\"\r\n                clearable\r\n                placeholder=\"按回车添加标签，最多10个\"\r\n                :max=\"10\"\r\n                @change=\"changeValue('tags')\"\r\n              />\r\n            </t-form-item>\r\n          </t-form>\r\n        </div>\r\n      </template>\r\n\r\n      <template #event>\r\n        <EventEditor :defaultEventsValue=\"pen.events\" @change=\"eventsChange\" />\r\n      </template>\r\n    </PropsTab>\r\n\r\n    <t-drawer\r\n      v-model:visible=\"drawerVisible\"\r\n      header=\"自定义动画帧\"\r\n      size=\"20%\"\r\n      :onConfirm=\"addFrames\"\r\n    >\r\n      <t-button block theme=\"primary\" @click=\"insertFrame\">新增动画帧</t-button>\r\n      <t-collapse class=\"meta-collapse\" expand-mutex>\r\n        <t-collapse-panel v-for=\"item in customFrames\" header=\"动画帧\">\r\n          <prop-editor :data=\"item\" :statusList=\"statusList\"></prop-editor>\r\n          <template #headerRightContent>\r\n            <t-button\r\n              size=\"small\"\r\n              variant=\"outline\"\r\n              theme=\"danger\"\r\n              :style=\"{ marginLeft: '8px' }\"\r\n              @click=\"deleteFrame(item)\"\r\n            >\r\n              <t-icon name=\"delete\"></t-icon>\r\n            </t-button>\r\n          </template>\r\n        </t-collapse-panel>\r\n      </t-collapse>\r\n    </t-drawer>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { onMounted, onUnmounted, ref, watch, computed, nextTick } from \"vue\";\r\nimport { useSelection } from \"../services/selections\";\r\nimport { useUpload } from \"../services/useUpload\";\r\nimport {\r\n  PenFrameOptions,\r\n  PenFrames,\r\n  LineAnimateOption,\r\n} from \"../utils/penFrames.ts\";\r\nimport PropEditor from \"./PropEditor.vue\";\r\nimport { deepClone } from \"@meta2d/core\";\r\nimport { copyToClipboard } from \"../utils/index.ts\";\r\nimport { MessagePlugin } from \"tdesign-vue-next\";\r\nimport PropsTab from \"./PropsTab.vue\";\r\nimport EventEditor from \"./EventEditor.vue\";\r\n\r\nconst tabs = computed(() => {\r\n  return [\r\n    {\r\n      label: \"图元\",\r\n      value: 1,\r\n      slot: \"pen\",\r\n    },\r\n    {\r\n      label: \"图片\",\r\n      value: 2,\r\n      slot: \"image\",\r\n    },\r\n    {\r\n      label: \"动效\",\r\n      value: 3,\r\n      slot: \"animate\",\r\n    },\r\n    {\r\n      label: \"结构\",\r\n      value: 4,\r\n      slot: \"struct\",\r\n    },\r\n    {\r\n      label: \"数据\",\r\n      value: 5,\r\n      slot: \"data\",\r\n    },\r\n    {\r\n      label: \"事件\",\r\n      value: 6,\r\n      slot: \"event\",\r\n    },\r\n  ].filter((item) => {\r\n    if (item.slot == \"image\") {\r\n      return pen.value.name == item.slot;\r\n    }\r\n    return true;\r\n  });\r\n});\r\n\r\nconst { selections } = useSelection();\r\n\r\nconst pen = ref<any>();\r\n// 位置数据。当前版本位置需要动态计算获取\r\nconst rect = ref<any>();\r\nconst activePanel = ref(1);\r\n\r\nconst isLine = computed(() => {\r\n  return pen.value?.name == \"line\";\r\n});\r\n\r\nonMounted(() => {\r\n  activePanel.value = 1;\r\n  getPen();\r\n});\r\n\r\nconst getPen = () => {\r\n  pen.value = selections.pen || {};\r\n  if (pen.value.globalAlpha == undefined) {\r\n    pen.value.globalAlpha = 1;\r\n  }\r\n  if (!pen.value.tags) {\r\n    pen.value.tags = [];\r\n  }\r\n\r\n  rect.value = meta2d.getPenRect(pen.value);\r\n\r\n  if (activePanel.value == 2) {\r\n    // 非 图片\r\n    if (![\"image\"].includes(pen.value.name)) {\r\n      activePanel.value = 1;\r\n    }\r\n  }\r\n};\r\n\r\n// 状态组合列表\r\nconst statusList = computed(() => {\r\n  if (pen.value?.name != \"combine\") return [];\r\n  return pen.value.children.map((id: string, index: number) => {\r\n    return {\r\n      label: `状态${index + 1}`,\r\n      value: id,\r\n    };\r\n  });\r\n});\r\n\r\n// 动画\r\nconst animate = (play: boolean = false) => {\r\n  if (play) {\r\n    meta2d.startAnimate(pen.value.id);\r\n  } else {\r\n    meta2d.stopAnimate(pen.value.id);\r\n  }\r\n};\r\n\r\n// * 自定义动画帧\r\nconst drawerVisible = ref(false);\r\nconst customFrames = ref<any>([]);\r\n\r\nconst showFramesDrawer = () => {\r\n  customFrames.value = deepClone(pen.value.frames || []);\r\n  drawerVisible.value = true;\r\n};\r\nconst addFrames = () => {\r\n  // 动画帧数组\r\n  console.log(\"custom frames: \", customFrames.value);\r\n  pen.value.frames = deepClone(customFrames.value);\r\n  drawerVisible.value = false;\r\n  nextTick(() => {\r\n    customFrames.value = [];\r\n  });\r\n};\r\n\r\nconst insertFrame = () => {\r\n  customFrames.value.push({\r\n    duration: 100,\r\n    globalAlpha: 1,\r\n    penName: pen.value.name,\r\n  });\r\n};\r\n\r\nconst deleteFrame = (frame: any) => {\r\n  const index = customFrames.value.indexOf(frame);\r\n  if (index > -1) {\r\n    customFrames.value.splice(index, 1);\r\n  }\r\n};\r\n\r\n// 监听选中不同图元\r\n// @ts-ignore\r\nconst watcher = watch(() => selections.pen?.id, getPen);\r\n\r\nconst lineDashs = [undefined, [5, 5]];\r\n\r\nconst changeValue = (prop: string) => {\r\n  const v: any = { id: pen.value.id };\r\n  v[prop] = pen.value[prop];\r\n  if (prop === \"dash\") {\r\n    v.lineDash = lineDashs[v[prop]];\r\n  }\r\n  if (prop == \"animateType\") {\r\n    // 补全动画帧\r\n    console.log(\"animate type: \", v);\r\n    const animateType = v.animateType as keyof typeof PenFrames;\r\n    const frames = PenFrames[animateType];\r\n    v.frames = frames;\r\n  }\r\n  meta2d.setValue(v, { render: true });\r\n};\r\n\r\nconst changeRect = (prop: string) => {\r\n  const v: any = { id: pen.value.id };\r\n  v[prop] = rect.value[prop];\r\n  meta2d.setValue(v, { render: true });\r\n};\r\n\r\nconst top = () => {\r\n  meta2d.top();\r\n  meta2d.render();\r\n};\r\nconst bottom = () => {\r\n  meta2d.bottom();\r\n  meta2d.render();\r\n};\r\nconst up = () => {\r\n  meta2d.up();\r\n  meta2d.render();\r\n};\r\nconst down = () => {\r\n  meta2d.down();\r\n  meta2d.render();\r\n};\r\n\r\nonUnmounted(() => {\r\n  watcher();\r\n});\r\n\r\n// * 文件上传\r\nconst uploadRef = ref();\r\nconst { uploadValue, sizeLimit, headers } = useUpload();\r\n\r\nconst handleSuccess = (context: any) => {\r\n  console.log(\"upload success: \", context);\r\n  if (context.response) {\r\n    pen.value.image = context.response.url || context.response.data?.fileurl;\r\n    changeValue(\"image\");\r\n  }\r\n};\r\n\r\nconst handleFail = (e: any) => {\r\n  console.log(\"upload fail: \", e);\r\n};\r\n\r\nconst copyId = () => {\r\n  copyToClipboard(pen.value.id).then((res) => {\r\n    console.log(\"copy id: \", res);\r\n    // 提示\r\n    MessagePlugin.success({ content: \"复制成功\" });\r\n  });\r\n};\r\n\r\n// * 事件处理\r\nconst eventsChange = (events: any) => {\r\n  pen.value.events = events;\r\n};\r\n</script>\r\n<style lang=\"postcss\" scoped>\r\n.props-panel {\r\n  padding: 10px;\r\n\r\n  :deep(.t-form) {\r\n    .t-form__item {\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    .t-form__label {\r\n      padding-right: 8px;\r\n    }\r\n\r\n    .t-divider {\r\n      margin: 12px 0;\r\n    }\r\n\r\n    .t-input--auto-width {\r\n      width: 100%;\r\n    }\r\n\r\n    .t-space {\r\n      gap: 4px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <props-tab :tabs=\"tabs\">\r\n    <template #pen-props>\r\n      <div class=\"props-panel\">\r\n        <t-form label-align=\"left\" v-if=\"pen\">\r\n          <t-form-item label=\"文本\" name=\"text\">\r\n            <t-input v-model=\"pen.text\" @change=\"changeValue('text')\" />\r\n          </t-form-item>\r\n          <t-form-item label=\"颜色\" name=\"color\">\r\n            <t-color-picker\r\n              class=\"w-full\"\r\n              v-model=\"pen.color\"\r\n              :show-primary-color-preview=\"false\"\r\n              format=\"CSS\"\r\n              :color-modes=\"['monochrome']\"\r\n              @change=\"changeValue('color')\"\r\n            />\r\n          </t-form-item>\r\n          <t-form-item label=\"背景\" name=\"background\">\r\n            <t-color-picker\r\n              class=\"w-full\"\r\n              v-model=\"pen.background\"\r\n              :show-primary-color-preview=\"false\"\r\n              format=\"CSS\"\r\n              :color-modes=\"['monochrome']\"\r\n              @change=\"changeValue('background')\"\r\n            />\r\n          </t-form-item>\r\n          <t-form-item label=\"线条\" name=\"dash\">\r\n            <t-select v-model=\"pen.dash\" @change=\"changeValue('dash')\">\r\n              <t-option :key=\"0\" :value=\"0\" label=\"实线\"></t-option>\r\n              <t-option :key=\"1\" :value=\"1\" label=\"虚线\"></t-option>\r\n            </t-select>\r\n          </t-form-item>\r\n          <t-form-item label=\"圆角\" name=\"borderRadius\">\r\n            <t-input-number\r\n              :min=\"0\"\r\n              :max=\"1\"\r\n              :step=\"0.01\"\r\n              v-model=\"pen.borderRadius\"\r\n              @change=\"changeValue('borderRadius')\"\r\n            />\r\n          </t-form-item>\r\n          <t-form-item label=\"不透明度\" name=\"globalAlpha\">\r\n            <t-slider\r\n              v-model=\"pen.globalAlpha\"\r\n              :min=\"0\"\r\n              :max=\"1\"\r\n              :step=\"0.01\"\r\n              @change=\"changeValue('globalAlpha')\"\r\n            />\r\n            <span class=\"ml-16\" style=\"width: 50px; line-height: 30px\">\r\n              {{ pen.globalAlpha }}\r\n            </span>\r\n          </t-form-item>\r\n\r\n          <t-divider />\r\n\r\n          <t-form-item label=\"文字水平对齐\" name=\"textAlign\">\r\n            <t-select\r\n              v-model=\"pen.textAlign\"\r\n              @change=\"changeValue('textAlign')\"\r\n            >\r\n              <t-option key=\"left\" value=\"left\" label=\"左对齐\"></t-option>\r\n              <t-option key=\"center\" value=\"center\" label=\"居中\"></t-option>\r\n              <t-option key=\"right\" value=\"right\" label=\"右对齐\"></t-option>\r\n            </t-select>\r\n          </t-form-item>\r\n          <t-form-item label=\"文字垂直对齐\" name=\"textBaseline\">\r\n            <t-select\r\n              v-model=\"pen.textBaseline\"\r\n              @change=\"changeValue('textBaseline')\"\r\n            >\r\n              <t-option key=\"top\" value=\"top\" label=\"顶部对齐\"></t-option>\r\n              <t-option key=\"middle\" value=\"middle\" label=\"居中\"></t-option>\r\n              <t-option key=\"bottom\" value=\"bottom\" label=\"底部对齐\"></t-option>\r\n            </t-select>\r\n          </t-form-item>\r\n          <t-divider />\r\n          <t-collapse expand-icon borderless defaultExpandAll>\r\n            <t-collapse-panel value=\"0\" header=\"对齐\">\r\n              <t-button\r\n                v-for=\"(item, index) in alginOptions\"\r\n                :key=\"index\"\r\n                shape=\"square\"\r\n                variant=\"outline\"\r\n                style=\"margin-right: 4px\"\r\n                @click=\"align(item)\"\r\n              >\r\n                <t-icon :name=\"item.icon\" />\r\n              </t-button>\r\n            </t-collapse-panel>\r\n          </t-collapse>\r\n          <t-divider />\r\n          <t-space>\r\n            <t-tooltip content=\"清空高亮图元\">\r\n              <t-button @click=\"inactive\">取消选中</t-button>\r\n            </t-tooltip>\r\n          </t-space>\r\n        </t-form>\r\n      </div>\r\n    </template>\r\n    <template #struct-props>\r\n      <slot name=\"struct\" :pen=\"pen\"></slot>\r\n    </template>\r\n    <template #animation-props>\r\n      <div class=\"props-panel\">\r\n        <t-form\r\n          v-if=\"allIsLine || allIsRect\"\r\n          label-width=\"80px\"\r\n          label-align=\"left\"\r\n        >\r\n          <t-space style=\"width: 100%\">\r\n            <t-alert\r\n              theme=\"warning\"\r\n              title=\"批量修改所有图元的动画\"\r\n              message=\"执行了操作后才会修改\"\r\n            >\r\n            </t-alert>\r\n          </t-space>\r\n          <t-divider />\r\n\r\n          <template v-if=\"allIsRect\">\r\n            <t-form-item label=\"动画效果\" name=\"animateType\">\r\n              <t-select\r\n                v-model=\"pen.animateType\"\r\n                @change=\"changeValue('animateType')\"\r\n              >\r\n                <t-option\r\n                  v-for=\"item in PenFrameOptions\"\r\n                  :key=\"item.value\"\r\n                  :value=\"item.value\"\r\n                  :label=\"item.label\"\r\n                ></t-option>\r\n              </t-select>\r\n            </t-form-item>\r\n            <t-form-item\r\n              v-if=\"pen.animateType == 'x-custom'\"\r\n              label=\"自定义动画帧\"\r\n            >\r\n              <t-button variant=\"text\" theme=\"primary\" @click=\"showFramesDrawer\"\r\n                >编辑\r\n              </t-button>\r\n            </t-form-item>\r\n          </template>\r\n\r\n          <template v-else-if=\"allIsLine\">\r\n            <t-form-item label=\"动画效果\" name=\"lineAnimateType\">\r\n              <t-select\r\n                v-model=\"pen.lineAnimateType\"\r\n                @change=\"changeValue('lineAnimateType')\"\r\n              >\r\n                <t-option\r\n                  v-for=\"item in LineAnimateOption\"\r\n                  :key=\"item.value\"\r\n                  :value=\"item.value\"\r\n                  :label=\"item.label\"\r\n                ></t-option>\r\n              </t-select>\r\n            </t-form-item>\r\n            <t-form-item label=\"反向流动\" name=\"reverse\">\r\n              <t-switch\r\n                v-model=\"pen.animateReverse\"\r\n                @change=\"changeValue('animateReverse')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"线宽\" name=\"animateLineWidth\">\r\n              <t-input-number\r\n                v-model=\"pen.animateLineWidth\"\r\n                @change=\"changeValue('animateLineWidth')\"\r\n              />\r\n            </t-form-item>\r\n\r\n            <t-form-item label=\"速度\" name=\"animateSpan\">\r\n              <t-input-number\r\n                v-model=\"pen.animateSpan\"\r\n                :min=\"1\"\r\n                :max=\"5\"\r\n                @change=\"changeValue('animateSpan')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"颜色\" name=\"color\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"pen.animateColor\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['monochrome']\"\r\n                @change=\"changeValue('animateColor')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"动画发光\" name=\"animateShadow\">\r\n              <t-switch\r\n                v-model=\"pen.animateShadow\"\r\n                @change=\"changeValue('animateShadow')\"\r\n              />\r\n            </t-form-item>\r\n            <t-form-item label=\"发光颜色\" name=\"animateShadowColor\">\r\n              <t-color-picker\r\n                class=\"w-full\"\r\n                v-model=\"pen.animateShadowColor\"\r\n                :show-primary-color-preview=\"false\"\r\n                format=\"CSS\"\r\n                :color-modes=\"['monochrome']\"\r\n                @change=\"changeValue('animateShadowColor')\"\r\n              />\r\n            </t-form-item>\r\n          </template>\r\n\r\n          <t-form-item label=\"自动播放\" name=\"autoPlay\">\r\n            <t-switch\r\n              v-model=\"pen.autoPlay\"\r\n              @change=\"changeValue('autoPlay')\"\r\n            />\r\n          </t-form-item>\r\n\r\n          <t-divider />\r\n            <div>\r\n          <t-statistic\r\n            title=\"图元总数\"\r\n            :value=\"pensTotal\"\r\n            trend=\"increase\"\r\n            color=\"orange\"\r\n          />\r\n            </div>\r\n          <t-space>\r\n            <t-tooltip content=\"对大量图元执行动画时存在性能问题，请谨慎操作\">\r\n              <t-button @click=\"animate(true)\">播放</t-button>\r\n            </t-tooltip>\r\n            <t-tooltip content=\"\">\r\n              <t-button @click=\"animate()\">停止</t-button>\r\n            </t-tooltip>\r\n          </t-space>\r\n        </t-form>\r\n        <t-alert v-else theme=\"error\">\r\n          只能对同一类型的图元批量设置动画\r\n        </t-alert>\r\n\r\n        <t-drawer\r\n          v-model:visible=\"drawerVisible\"\r\n          header=\"自定义动画帧\"\r\n          size=\"20%\"\r\n          :onConfirm=\"addFrames\"\r\n        >\r\n          <t-button block theme=\"primary\" @click=\"insertFrame\"\r\n            >新增动画帧</t-button\r\n          >\r\n          <t-collapse class=\"meta-collapse\" expand-mutex>\r\n            <t-collapse-panel v-for=\"item in customFrames\" header=\"动画帧\">\r\n              <prop-editor :data=\"item\"></prop-editor>\r\n              <template #headerRightContent>\r\n                <t-button\r\n                  size=\"small\"\r\n                  variant=\"outline\"\r\n                  theme=\"danger\"\r\n                  :style=\"{ marginLeft: '8px' }\"\r\n                  @click=\"deleteFrame(item)\"\r\n                >\r\n                  <t-icon name=\"delete\"></t-icon>\r\n                </t-button>\r\n              </template>\r\n            </t-collapse-panel>\r\n          </t-collapse>\r\n        </t-drawer>\r\n      </div>\r\n    </template>\r\n  </props-tab>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { onMounted, onUnmounted, ref, watch, computed, nextTick } from \"vue\";\r\nimport { useSelection } from \"../services/selections\";\r\nimport PropsTab from \"./PropsTab.vue\";\r\nimport { Pen } from \"@meta2d/core\";\r\nimport {\r\n  PenFrameOptions,\r\n  LineAnimateOption,\r\n  PenFrames,\r\n} from \"../utils/penFrames\";\r\nimport { deepClone } from \"@meta2d/core\";\r\nimport PropEditor from \"./PropEditor.vue\";\r\n\r\nconst tabs = [\r\n  {\r\n    label: \"图元组\",\r\n    value: 1,\r\n    slot: \"pen-props\",\r\n  },\r\n  {\r\n    label: \"结构\",\r\n    value: 2,\r\n    slot: \"struct-props\",\r\n  },\r\n\r\n  {\r\n    label: \"动效\",\r\n    value: 3,\r\n    slot: \"animation-props\",\r\n  },\r\n];\r\n\r\nconst { selections } = useSelection();\r\n\r\nconst pen = ref<any>({\r\n  globalAlpha: 1,\r\n});\r\n// 位置数据。当前版本位置需要动态计算获取\r\nconst rect = ref<any>();\r\n\r\nonMounted(() => {\r\n  getPen();\r\n});\r\n\r\nconst getPen = () => {\r\n  // console.log(\"get pen: \", allIsLine.value, allIsRect.value);\r\n  rect.value = meta2d.getPenRect(pen.value);\r\n};\r\n\r\nconst allIsLine = computed(() => {\r\n  return selections.pens?.every((pen: any) => pen.type === 1);\r\n});\r\n\r\nconst allIsRect = computed(() => {\r\n  return selections.pens?.every((pen: any) => !pen.type);\r\n});\r\nconst pensTotal = computed(() => {\r\n  return selections.pens?.length || 0;\r\n});\r\n\r\n// 监听选中不同图元\r\n// @ts-ignore\r\nconst watcher = watch(() => selections.pens, getPen);\r\n\r\nconst lineDashs = [undefined, [5, 5]];\r\n\r\nconst changeValue = (prop: string) => {\r\n  // console.log(\"change value: \", prop, pen.value, selections.pens);\r\n  if (selections.pens?.length) {\r\n    const newValue = pen.value[prop];\r\n    selections.pens.forEach((pen: any) => {\r\n      const v: any = { id: pen.id };\r\n      v[prop] = newValue;\r\n      if (prop === \"dash\") {\r\n        v.lineDash = lineDashs[v[prop]];\r\n      } else if (prop == \"animateType\") {\r\n        const animateType = v.animateType as keyof typeof PenFrames;\r\n        const frames = PenFrames[animateType];\r\n        v.frames = frames;\r\n      }\r\n      meta2d.setValue(v, { render: false });\r\n    });\r\n    meta2d.render();\r\n  }\r\n};\r\n\r\nconst animate = (play = false) => {\r\n  // 不传执行所有自动播放的画笔的动画\r\n  // console.log(\"animate: \", play, selections.pens)\r\n\r\n  // ! 使用 Pen[] 有bug，有的不生效\r\n  // if (play) {\r\n  //   meta2d.startAnimate(selections.pens)\r\n  // } else {\r\n  //   meta2d.stopAnimate(selections.pens)\r\n  // }\r\n\r\n  selections.pens?.forEach((pen: any) => {\r\n    if (play) {\r\n      meta2d.startAnimate(pen.id);\r\n    } else {\r\n      meta2d.stopAnimate(pen.id);\r\n    }\r\n  });\r\n};\r\n\r\nconst alginOptions = [\r\n  { label: \"左对齐\", value: \"left\", icon: \"format-vertical-align-left\" },\r\n  { label: \"右对齐\", value: \"right\", icon: \"format-vertical-align-right\" },\r\n  { label: \"顶部对齐\", value: \"top\", icon: \"format-horizontal-align-top\" },\r\n  {\r\n    label: \"底部对齐\",\r\n    value: \"bottom\",\r\n    icon: \"format-horizontal-align-bottom\",\r\n  },\r\n  { label: \"垂直居中\", value: \"center\", icon: \"format-vertical-align-center\" },\r\n  {\r\n    label: \"水平居中\",\r\n    value: \"middle\",\r\n    icon: \"format-horizontal-align-center\",\r\n  },\r\n];\r\n// 对齐方式: left, right, top, bottom, center, middle\r\nconst align = (item: any) => {\r\n  const nodes = selections.pens;\r\n  if (nodes?.length) {\r\n    meta2d.alignNodes(item.value, nodes as Pen[]);\r\n  }\r\n};\r\n\r\nonUnmounted(() => {\r\n  watcher();\r\n});\r\n\r\nconst drawerVisible = ref(false);\r\nconst customFrames = ref<any>([]);\r\n\r\nconst showFramesDrawer = () => {\r\n  customFrames.value = deepClone(pen.value.frames || []);\r\n  drawerVisible.value = true;\r\n};\r\nconst addFrames = () => {\r\n  // 动画帧数组\r\n  pen.value.frames = deepClone(customFrames.value);\r\n  changeValue(\"frames\");\r\n  drawerVisible.value = false;\r\n  nextTick(() => {\r\n    customFrames.value = [];\r\n  });\r\n};\r\n\r\nconst insertFrame = () => {\r\n  customFrames.value.push({\r\n    duration: 100,\r\n    globalAlpha: 1,\r\n  });\r\n};\r\n\r\nconst deleteFrame = (frame: any) => {\r\n  const index = customFrames.value.indexOf(frame);\r\n  if (index > -1) {\r\n    customFrames.value.splice(index, 1);\r\n  }\r\n};\r\n\r\nconst inactive = () => {\r\n  meta2d.inactive();\r\n};\r\n</script>\r\n<style lang=\"postcss\" scoped>\r\n.props-panel {\r\n  padding: 10px;\r\n\r\n  :deep(.t-form) {\r\n    .t-form__item {\r\n      margin-bottom: 8px;\r\n    }\r\n    .t-form__label {\r\n      padding-right: 8px;\r\n    }\r\n\r\n    .t-divider {\r\n      margin: 12px 0;\r\n    }\r\n\r\n    .t-input--auto-width {\r\n      width: 100%;\r\n    }\r\n\r\n    .t-space {\r\n      gap: 4px;\r\n    }\r\n\r\n    .t-collapse-panel__wrapper .t-collapse-panel__content {\r\n      padding-left: 10px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <t-tree\r\n    hover\r\n    line\r\n    expand-all\r\n    :data=\"pensTree\"\r\n    :keys=\"{ label: 'name', value: 'id', children: 'list' }\"\r\n    :icon=\"icon\"\r\n    :scroll=\"{\r\n        rowHeight: 34,\r\n        bufferSize: 30,\r\n        threshold: 50,\r\n        type: 'virtual',\r\n    }\"\r\n    style=\"padding: 10px; height: 100%;\"\r\n  >\r\n    <template #label=\"{ node }\">\r\n      <span @click=\"click(node)\"> {{ node.label }} - {{ node.data.text || node.data.description || node.value }}</span>\r\n    </template>\r\n    <template #operations=\"{ node }\">\r\n      <div class=\"tdesign-demo-block-row\">\r\n        <t-icon\r\n          :name=\"node.data.visible !== false ? 'browse' : 'browse-off'\"\r\n          @click =\"toggleVisible(node)\"\r\n        ></t-icon>\r\n      </div>\r\n    </template>\r\n  </t-tree>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { defineProps, computed, onMounted, ref, onUnmounted, } from \"vue\";\r\nimport { Icon, TreeNodeModel } from \"tdesign-vue-next\";\r\n\r\nconst props = defineProps({});\r\n\r\n// 获取画布组件\r\nlet data = ref(meta2d.data());\r\n\r\nconst pensTree = computed(() => {\r\n  const pens = data.value.pens;\r\n  return pens.filter((pen: any) => {\r\n    if (!pen.parentId) {\r\n      if (pen.children) {\r\n        const children: any[] = [];\r\n        pen.children.forEach((id: string) => {\r\n          const child = pens.find((pen) => pen.id === id);\r\n          if (child) {\r\n            children.push(child);\r\n          }\r\n        });\r\n        pen.list = children;\r\n      }\r\n\r\n      return true;\r\n    }\r\n  });\r\n});\r\n\r\nconst updateData = () => {\r\n  data.value = meta2d.data();\r\n}\r\n\r\nonMounted(() => {\r\n  meta2d.on('add', updateData)\r\n  meta2d.on('delete',updateData)\r\n  meta2d.on('clear', updateData)\r\n})\r\n\r\nonUnmounted(() => {\r\n  meta2d.off('add', updateData)\r\n  meta2d.off('delete',updateData)\r\n})\r\n\r\n\r\n// console.log(\"pens: \", pensTree);\r\nconst icon = (h: Function, node: TreeNodeModel) => {\r\n  const iconMap: Record<string | number, string> = {\r\n    1: \"git-commit\",\r\n    combine: \"folder\",\r\n    image: \"image\",\r\n  };\r\n\r\n  const iconName =\r\n    iconMap[node.data.type] || iconMap[node.data.name] || \"rectangle\";\r\n\r\n  return h(Icon, { name: iconName });\r\n};\r\n\r\nconst toggleVisible = (node: TreeNodeModel) => {\r\n  node.data.visible = node.data.visible === false ? true : false;\r\n  node.setData(node.data);\r\n  meta2d.setValue({\r\n    id: node.data.id,\r\n    visible: node.data.visible,\r\n  });\r\n};\r\n\r\nconst click = (node: TreeNodeModel) => {\r\n  // console.log(context);\r\n  const pen = meta2d.findOne(node.data.id);\r\n  if (pen) {\r\n    meta2d.active([pen]);\r\n    meta2d.render();\r\n    meta2d.gotoView(pen);\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped></style>\r\n","<template>\r\n  <div v-if=\"shouldRender\" class=\"app-props\">\r\n    <FileProps v-show=\"selections.mode === SelectionMode.File\" key=\"file\" class=\"props__file\" v-bind=\"$attrs\">\r\n      <template #struct>\r\n        <Structure v-bind=\"$attrs\" />\r\n      </template>\r\n    </FileProps>\r\n    <PenProps v-show=\"selections.mode === SelectionMode.Pen\" key=\"pen\" class=\"props__pen\" v-bind=\"$attrs\">\r\n      <template #struct>\r\n        <Structure v-bind=\"$attrs\" />\r\n      </template>\r\n    </PenProps>\r\n\r\n    <PensProps v-show=\"selections.mode === SelectionMode.Pens\" key=\"pens\" class=\"props__pens\" v-bind=\"$attrs\">\r\n      <template #struct>\r\n        <Structure v-bind=\"$attrs\" />\r\n      </template>\r\n    </PensProps>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport FileProps from \"./FileProps.vue\";\r\nimport PenProps from \"./PenProps.vue\";\r\nimport PensProps from \"./PensProps.vue\";\r\nimport { useSelection, SelectionMode } from \"../services/selections\";\r\nimport { computed, watch } from \"vue\";\r\nimport Structure from \"./Structure.vue\";\r\n\r\nconst { selections } = useSelection();\r\n\r\nconst shouldRender = computed(() => {\r\n  return [SelectionMode.File, SelectionMode.Pen, SelectionMode.Pens].includes(\r\n    selections.mode\r\n  );\r\n});\r\n\r\n\r\n</script>\r\n<style lang=\"postcss\" scoped>\r\n.app-props {\r\n  padding: 16px;\r\n  border-left: 1px solid var(--color-border);\r\n  z-index: 2;\r\n  height: calc(100vh - 80px);\r\n  overflow-y: auto;\r\n\r\n  .props__file, .props__pen {\r\n    height: 100%;\r\n  }\r\n\r\n  :deep(.t-tabs) {\r\n    height: 100%;\r\n\r\n    .t-tabs__content {\r\n      overflow: auto;\r\n      height: calc(100% - 50px);\r\n\r\n      .t-tab-panel {\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","export const defaultGraphics = [\r\n  {\r\n    name: '基本形状',\r\n    show: true,\r\n    list: [\r\n      {\r\n        name: '正方形',\r\n        icon: 'l-rect',\r\n        id: 1,\r\n        data: {\r\n          width: 100,\r\n          height: 100,\r\n          name: 'square',\r\n        },\r\n      },\r\n      {\r\n        name: '矩形',\r\n        icon: 'l-rectangle',\r\n        id: 2,\r\n        data: {\r\n          width: 200,\r\n          height: 50,\r\n          borderRadius: 0.1,\r\n          name: 'rectangle',\r\n        },\r\n      },\r\n      {\r\n        name: '圆',\r\n        icon: 'l-circle',\r\n        id: 3,\r\n        data: {\r\n          width: 100,\r\n          height: 100,\r\n          name: 'circle',\r\n        },\r\n      },\r\n      {\r\n        name: '三角形',\r\n        icon: 'l-triangle',\r\n        id: 4,\r\n        data: {\r\n          width: 100,\r\n          height: 100,\r\n          name: 'triangle',\r\n        },\r\n      },\r\n      {\r\n        name: '菱形',\r\n        icon: 'l-diamond',\r\n        id: 5,\r\n        data: {\r\n          width: 100,\r\n          height: 100,\r\n          name: 'diamond',\r\n        },\r\n      },\r\n      {\r\n        name: '五边形',\r\n        icon: 'l-pentagon',\r\n        id: 6,\r\n        data: {\r\n          width: 100,\r\n          height: 100,\r\n          name: 'pentagon',\r\n        },\r\n      },\r\n      {\r\n        name: '六边形',\r\n        icon: 'l-hexagon',\r\n        id: 7,\r\n        data: {\r\n          width: 100,\r\n          height: 100,\r\n          name: 'hexagon',\r\n        },\r\n      },\r\n      {\r\n        name: '五角星',\r\n        icon: 'l-pentagram',\r\n        id: 8,\r\n        data: {\r\n          width: 100,\r\n          height: 100,\r\n          name: 'pentagram',\r\n        },\r\n      },\r\n      {\r\n        name: '左箭头',\r\n        icon: 'l-arrow-left',\r\n        id: 9,\r\n        data: {\r\n          width: 120,\r\n          height: 60,\r\n          name: 'leftArrow',\r\n        },\r\n      },\r\n      {\r\n        name: '右箭头',\r\n        icon: 'l-arrow-right',\r\n        id: 10,\r\n        data: {\r\n          width: 120,\r\n          height: 60,\r\n          name: 'rightArrow',\r\n        },\r\n      },\r\n      {\r\n        name: '双向箭头',\r\n        icon: 'l-twoway-arrow',\r\n        id: 11,\r\n        data: {\r\n          width: 150,\r\n          height: 60,\r\n          name: 'twowayArrow',\r\n        },\r\n      },\r\n      {\r\n        name: '云',\r\n        icon: 'l-cloud',\r\n        id: 13,\r\n        data: {\r\n          width: 100,\r\n          height: 100,\r\n          name: 'cloud',\r\n        },\r\n      },\r\n      {\r\n        name: '消息框',\r\n        icon: 'l-msg',\r\n        id: 14,\r\n        data: {\r\n          textTop: -0.1,\r\n          width: 100,\r\n          height: 100,\r\n          name: 'message',\r\n        },\r\n      },\r\n      {\r\n        name: '文件',\r\n        icon: 'l-file',\r\n        id: 15,\r\n        data: {\r\n          width: 80,\r\n          height: 100,\r\n          name: 'file',\r\n        },\r\n      },\r\n      {\r\n        name: '立方体',\r\n        icon: 'l-cube',\r\n        id: 18,\r\n        data: {\r\n          width: 60,\r\n          height: 100,\r\n          name: 'cube',\r\n          z: 0.25,\r\n          props: {\r\n            custom: [\r\n              {\r\n                key: 'z',\r\n                label: 'Z',\r\n                type: 'number',\r\n                min: 0,\r\n                placeholder: '<= 1 即宽度的比例',\r\n              },\r\n              {\r\n                key: 'backgroundFront',\r\n                label: '前背景色',\r\n                type: 'color',\r\n              },\r\n              {\r\n                key: 'backgroundUp',\r\n                label: '顶背景色',\r\n                type: 'color',\r\n              },\r\n              {\r\n                key: 'backgroundRight',\r\n                label: '右背景色',\r\n                type: 'color',\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      },\r\n      {\r\n        name: '人',\r\n        icon: 'l-people',\r\n        id: 19,\r\n        data: {\r\n          width: 70,\r\n          height: 100,\r\n          name: 'people',\r\n        },\r\n      },\r\n      {\r\n        name: '图片',\r\n        icon: 'l-picture',\r\n        id: 20,\r\n        data: {\r\n          width: 100,\r\n          height: 100,\r\n          name: 'image',\r\n          image: '/favicon.ico',\r\n          // crossOrigin: 'undefined', // 没啥用\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: '流程图',\r\n    show: false,\r\n    list: [\r\n      {\r\n        name: '开始/结束',\r\n        icon: 'l-flow-start',\r\n        id: 21,\r\n        data: {\r\n          text: '开始/结束',\r\n          width: 120,\r\n          height: 40,\r\n          borderRadius: 0.5,\r\n          name: 'rectangle',\r\n        },\r\n      },\r\n      {\r\n        name: '流程',\r\n        icon: 'l-rectangle',\r\n        id: 22,\r\n        data: {\r\n          text: '流程',\r\n          width: 120,\r\n          height: 40,\r\n          name: 'rectangle',\r\n        },\r\n      },\r\n      {\r\n        name: '判定',\r\n        icon: 'l-diamond',\r\n        id: 23,\r\n        data: {\r\n          text: '判定',\r\n          width: 120,\r\n          height: 60,\r\n          name: 'diamond',\r\n        },\r\n      },\r\n      {\r\n        name: '数据',\r\n        icon: 'l-flow-data',\r\n        id: 24,\r\n        data: {\r\n          text: '数据',\r\n          width: 120,\r\n          height: 50,\r\n          name: 'flowData',\r\n          offsetX: 0.14,\r\n        },\r\n      },\r\n      {\r\n        name: '准备',\r\n        icon: 'l-flow-ready',\r\n        id: 25,\r\n        data: {\r\n          text: '准备',\r\n          width: 120,\r\n          height: 50,\r\n          name: 'hexagon',\r\n        },\r\n      },\r\n      {\r\n        name: '子流程',\r\n        icon: 'l-flow-subprocess',\r\n        id: 26,\r\n        data: {\r\n          text: '子流程',\r\n          width: 120,\r\n          height: 50,\r\n          name: 'flowSubprocess',\r\n        },\r\n      },\r\n      {\r\n        name: '数据库',\r\n        icon: 'l-db',\r\n        id: 27,\r\n        data: {\r\n          text: '数据库',\r\n          width: 80,\r\n          height: 120,\r\n          name: 'flowDb',\r\n        },\r\n      },\r\n      {\r\n        name: '文档',\r\n        icon: 'l-flow-document',\r\n        id: 28,\r\n        data: {\r\n          text: '文档',\r\n          width: 120,\r\n          height: 100,\r\n          name: 'flowDocument',\r\n        },\r\n      },\r\n      {\r\n        name: '内部存储',\r\n        icon: 'l-internal-storage',\r\n        id: 29,\r\n        data: {\r\n          text: '内部存储',\r\n          width: 120,\r\n          height: 80,\r\n          name: 'flowInternalStorage',\r\n        },\r\n      },\r\n      {\r\n        name: '外部存储',\r\n        icon: 'l-extern-storage',\r\n        id: 30,\r\n        data: {\r\n          text: '外部存储',\r\n          width: 120,\r\n          height: 80,\r\n          name: 'flowExternStorage',\r\n        },\r\n      },\r\n      {\r\n        name: '队列',\r\n        icon: 'l-flow-queue',\r\n        id: 31,\r\n        data: {\r\n          text: '队列',\r\n          width: 100,\r\n          height: 100,\r\n          name: 'flowQueue',\r\n        },\r\n      },\r\n      {\r\n        name: '手动输入',\r\n        icon: 'l-flow-manually',\r\n        id: 32,\r\n        data: {\r\n          text: '手动输入',\r\n          width: 120,\r\n          height: 80,\r\n          name: 'flowManually',\r\n        },\r\n      },\r\n      {\r\n        name: '展示',\r\n        icon: 'l-flow-display',\r\n        id: 33,\r\n        data: {\r\n          text: '展示',\r\n          width: 120,\r\n          height: 80,\r\n          name: 'flowDisplay',\r\n        },\r\n      },\r\n      {\r\n        name: '并行模式',\r\n        icon: 'l-flow-parallel',\r\n        id: 34,\r\n        data: {\r\n          text: '并行模式',\r\n          width: 120,\r\n          height: 50,\r\n          name: 'flowParallel',\r\n        },\r\n      },\r\n      {\r\n        name: '注释',\r\n        icon: 'l-flow-comment',\r\n        id: 35,\r\n        data: {\r\n          text: '注释',\r\n          width: 100,\r\n          height: 100,\r\n          name: 'flowComment',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: '活动图',\r\n    show: false,\r\n    list: [\r\n      {\r\n        name: '开始',\r\n        icon: 'l-inital',\r\n        id: 36,\r\n        data: {\r\n          text: '',\r\n          width: 30,\r\n          height: 30,\r\n          name: 'circle',\r\n          background: '#555',\r\n          lineWidth: 0,\r\n        },\r\n      },\r\n      {\r\n        name: '结束',\r\n        icon: 'l-final',\r\n        id: 37,\r\n        data: {\r\n          width: 30,\r\n          height: 30,\r\n          name: 'activityFinal',\r\n        },\r\n      },\r\n      {\r\n        name: '活动',\r\n        icon: 'l-action',\r\n        id: 38,\r\n        data: {\r\n          text: '活动',\r\n          width: 120,\r\n          height: 50,\r\n          borderRadius: 0.25,\r\n          name: 'rectangle',\r\n        },\r\n      },\r\n      {\r\n        name: '决策/合并',\r\n        icon: 'l-diamond',\r\n        id: 39,\r\n        data: {\r\n          text: '决策/合并',\r\n          width: 120,\r\n          height: 50,\r\n          name: 'diamond',\r\n        },\r\n      },\r\n      {\r\n        name: '垂直泳道',\r\n        icon: 'l-swimlane-v',\r\n        id: 40,\r\n        data: {\r\n          text: '垂直泳道',\r\n          width: 200,\r\n          height: 500,\r\n          name: 'swimlaneV',\r\n          textBaseline: 'top',\r\n          textTop: 20,\r\n          // textHeight: ,\r\n          lineTop: 0.08,\r\n        },\r\n      },\r\n      {\r\n        name: '水平泳道',\r\n        icon: 'l-swimlane-h',\r\n        id: 41,\r\n        data: {\r\n          text: '水平泳道',\r\n          width: 500,\r\n          height: 200,\r\n          name: 'swimlaneH',\r\n          textWidth: 0.01,\r\n          textLeft: 0.04,\r\n          textAlign: 'left',\r\n          lineLeft: 0.08,\r\n        },\r\n      },\r\n      {\r\n        name: '垂直分岔/汇合',\r\n        icon: 'l-fork-v',\r\n        id: 42,\r\n        data: {\r\n          text: '垂直分岔/汇合',\r\n          width: 10,\r\n          height: 150,\r\n          name: 'forkV',\r\n          fillStyle: '#555',\r\n          strokeStyle: 'transparent',\r\n        },\r\n      },\r\n      {\r\n        name: '水平分岔/汇合',\r\n        icon: 'l-fork',\r\n        id: 43,\r\n        data: {\r\n          text: '水平分岔/汇合',\r\n          width: 150,\r\n          height: 10,\r\n          name: 'forkH',\r\n          fillStyle: '#555',\r\n          strokeStyle: 'transparent',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: '时序图和类图',\r\n    show: false,\r\n    list: [\r\n      {\r\n        name: '生命线',\r\n        icon: 'l-lifeline',\r\n        id: 44,\r\n        data: {\r\n          text: '生命线',\r\n          width: 150,\r\n          height: 400,\r\n          textHeight: 50,\r\n          name: 'lifeline',\r\n        },\r\n      },\r\n      {\r\n        name: '激活',\r\n        icon: 'l-focus',\r\n        id: 45,\r\n        data: {\r\n          text: '激活',\r\n          width: 12,\r\n          height: 200,\r\n          name: 'sequenceFocus',\r\n        },\r\n      },\r\n      {\r\n        name: '简单类',\r\n        icon: 'l-simple-class',\r\n        id: 46,\r\n        data: {\r\n          text: 'Topolgoy',\r\n          width: 270,\r\n          height: 200,\r\n          textHeight: 200,\r\n          name: 'simpleClass',\r\n          textAlign: 'center',\r\n          textBaseline: 'top',\r\n          textTop: 10,\r\n          list: [\r\n            {\r\n              text: '- name: string\\n+ setName(name: string): void',\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        name: '类',\r\n        icon: 'l-class',\r\n        id: 47,\r\n        data: {\r\n          text: 'Topolgoy',\r\n          width: 270,\r\n          height: 200,\r\n          textHeight: 200,\r\n          name: 'interfaceClass',\r\n          textAlign: 'center',\r\n          textBaseline: 'top',\r\n          textTop: 10,\r\n          list: [\r\n            {\r\n              text: '- name: string',\r\n            },\r\n            {\r\n              text: '+ setName(name: string): void',\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: '故障树',\r\n    show: false,\r\n    list: [\r\n      {\r\n        name: '与门',\r\n        icon: 'l-ANDmen',\r\n        data: {\r\n          name: 'andGate',\r\n          width: 100,\r\n          height: 150,\r\n        },\r\n      },\r\n      {\r\n        name: '基本事件',\r\n        icon: 'l-jibenshijian',\r\n        data: {\r\n          name: 'basicEvent',\r\n          width: 100,\r\n          height: 150,\r\n        },\r\n      },\r\n      {\r\n        name: '未展开事件',\r\n        icon: 'l-weizhankaishijian',\r\n        data: {\r\n          name: 'unexpandedEvent',\r\n          width: 100,\r\n          height: 150,\r\n        },\r\n      },\r\n      {\r\n        name: '优先AND门',\r\n        icon: 'l-youxianANDmen',\r\n        data: {\r\n          name: 'priorityAndGate',\r\n          width: 100,\r\n          height: 150,\r\n        },\r\n      },\r\n      {\r\n        name: '禁止门',\r\n        icon: 'l-jinzhimen',\r\n        data: {\r\n          name: 'forbiddenGate',\r\n          width: 100,\r\n          height: 150,\r\n        },\r\n      },\r\n      {\r\n        name: '事件',\r\n        icon: 'l-shijian',\r\n        data: {\r\n          name: 'event',\r\n          width: 100,\r\n          height: 150,\r\n        },\r\n      },\r\n      {\r\n        name: '开关事件',\r\n        icon: 'l-kaiguanshijian',\r\n        data: {\r\n          name: 'switchEvent',\r\n          width: 100,\r\n          height: 150,\r\n        },\r\n      },\r\n      {\r\n        name: '条件事件',\r\n        icon: 'l-tiaojianshijian',\r\n        data: {\r\n          name: 'conditionalEvent',\r\n          width: 150,\r\n          height: 100,\r\n        },\r\n      },\r\n      {\r\n        name: '转移符号',\r\n        icon: 'l-zhuanyifuhao',\r\n        data: {\r\n          name: 'transferSymbol',\r\n          width: 100,\r\n          height: 150,\r\n        },\r\n      },\r\n      {\r\n        name: '或门',\r\n        icon: 'l-ORmen',\r\n        data: {\r\n          name: 'orGate',\r\n          width: 100,\r\n          height: 150,\r\n        },\r\n      },\r\n      {\r\n        name: '异或门',\r\n        icon: 'l-yihuomen',\r\n        data: {\r\n          name: 'xorGate',\r\n          width: 100,\r\n          height: 150,\r\n        },\r\n      },\r\n      {\r\n        name: '表决门',\r\n        icon: 'l-biaojuemen',\r\n        data: {\r\n          name: 'votingGate',\r\n          width: 100,\r\n          height: 150,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: '脑图',\r\n    show: true,\r\n    list: [\r\n      {\r\n        name: '主题',\r\n        icon: 'l-zhuti',\r\n        data: {\r\n          text: '主题',\r\n          width: 200,\r\n          height: 50,\r\n          name: 'mindNode',\r\n          borderRadius: 0.5,\r\n        },\r\n      },\r\n      {\r\n        name: '子主题',\r\n        icon: 'l-zizhuti',\r\n        data: {\r\n          text: '子主题',\r\n          width: 160,\r\n          height: 40,\r\n          name: 'mindLine',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n\r\n];\r\n","<template>\r\n  <div class=\"graphics\">\r\n    <t-collapse :defaultValue=\"[0, 6]\">\r\n      <t-collapse-panel\r\n        :header=\"item.name\"\r\n        v-for=\"item in graphicGroups\"\r\n        :key=\"item.name\"\r\n        :class=\"{\r\n          'has--group': item.style == 'group',\r\n        }\"\r\n      >\r\n        <t-collapse v-if=\"item.style === 'group'\" :header=\"item.name\">\r\n          <t-collapse-panel\r\n            v-for=\"panel in item.list\"\r\n            class=\"is--subpanel\"\r\n            :header=\"panel.name\"\r\n          >\r\n            <template #headerRightContent>\r\n              <t-tag theme=\"success\">{{ panel.children.length }}</t-tag>\r\n            </template>\r\n            <div\r\n              v-for=\"elem in panel.children\"\r\n              :key=\"elem.name\"\r\n              class=\"graphic\"\r\n              :draggable=\"true\"\r\n              @dragstart=\"dragStart($event, elem)\"\r\n            >\r\n              <t-tooltip :content=\"elem.name\">\r\n                <img\r\n                  v-if=\"elem.icon?.endsWith('svg')\"\r\n                  :src=\"elem.icon\"\r\n                  style=\"width: 100%; height: 48px\"\r\n                />\r\n                <svg v-else class=\"l-icon\" aria-hidden=\"true\">\r\n                  <use :xlink:href=\"'#' + elem.icon\"></use>\r\n                </svg>\r\n              </t-tooltip>\r\n            </div>\r\n          </t-collapse-panel>\r\n        </t-collapse>\r\n        <template v-else>\r\n          <div\r\n            v-for=\"elem in item.list\"\r\n            :key=\"elem.name\"\r\n            class=\"graphic\"\r\n            :draggable=\"true\"\r\n            @dragstart=\"dragStart($event, elem)\"\r\n          >\r\n            <t-tooltip :content=\"elem.name\">\r\n              <img\r\n                v-if=\"elem.icon?.endsWith('svg')\"\r\n                class=\"icon__image\"\r\n                :src=\"elem.icon\"\r\n                alt=\"\"\r\n                srcset=\"\"\r\n              />\r\n              <svg v-else class=\"l-icon\" aria-hidden=\"true\">\r\n                <use :xlink:href=\"'#' + elem.icon\"></use>\r\n              </svg>\r\n              <p>{{ elem.name }}</p>\r\n            </t-tooltip>\r\n          </div>\r\n        </template>\r\n      </t-collapse-panel>\r\n    </t-collapse>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { parseSvgStr, loadSvg } from \"../utils/svgParser\";\r\nimport {\r\n  electricSvgList,\r\n  electricCombineList,\r\n} from \"../utils/svgConfigList.ts\";\r\nimport { computed } from \"vue\";\r\nimport { defaultGraphics } from \"../utils/graphicConfig.ts\";\r\nimport SwitchCombinesData from \"../utils/switch-combines.json\";\r\nimport { deepClone } from \"@meta2d/core\";\r\n\r\n// 根据名称增加分组\r\nconst electricList = computed(() => {\r\n  const list = [];\r\n\r\n  electricSvgList.forEach((el) => {\r\n    const arr = el.name.split(\"-\");\r\n    let groupName = \"其他\";\r\n    if (arr.length > 1) {\r\n      groupName = arr[0];\r\n    }\r\n    const group = list.find((v) => v.name == groupName);\r\n    if (group) {\r\n      group.children.push(el);\r\n    } else {\r\n      list.push({\r\n        name: groupName,\r\n        children: [el],\r\n      });\r\n    }\r\n  });\r\n\r\n  return list;\r\n});\r\n\r\nconst graphicGroups = [\r\n  ...defaultGraphics,\r\n  {\r\n    name: \"电路元件分组\",\r\n    show: true,\r\n    style: \"group\",\r\n    list: electricList.value,\r\n  },\r\n  {\r\n    name: \"电路元件组合(包含状态)\",\r\n    show: true,\r\n    style: \"group\",\r\n    list: electricCombineList,\r\n  },\r\n];\r\n\r\nfunction findChildren(parent, list) {\r\n  if (!parent) return;\r\n  if (!list) return;\r\n  const result = [];\r\n  const queue = [parent];\r\n\r\n  while (queue.length) {\r\n    const current = queue.shift();\r\n    result.push(current);\r\n    for (const data of list) {\r\n      if (data.parentId == current.id) {\r\n        queue.push(data);\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nconst dragStart = (e: any, elem: any) => {\r\n  if (!elem) {\r\n    return;\r\n  }\r\n  e.stopPropagation();\r\n  if (elem.icon.endsWith(\"svg\")) {\r\n    if (elem.type == \"combine-json\") {\r\n      // 加载预设\r\n      console.log(\"load json: \", elem, SwitchCombinesData);\r\n      const parent = SwitchCombinesData.pens.find((v) => {\r\n        if (v.description == elem.name && !v.parentId) {\r\n          // parent\r\n          return true;\r\n        }\r\n      });\r\n      const pens = findChildren(parent, SwitchCombinesData.pens);\r\n      console.log(\"combine pens: \", parent, pens);\r\n      if (pens) {\r\n        elem.data = deepClone(pens);\r\n      }\r\n    } else {\r\n      // 创建 svg 图元对象\r\n      loadSvg(elem.icon, elem);\r\n      return;\r\n    }\r\n  }\r\n  console.log(\"elem: \", elem);\r\n  // 拖拽事件\r\n  if (e instanceof DragEvent) {\r\n    // 设置拖拽数据\r\n    e.dataTransfer?.setData(\"Meta2d\", JSON.stringify(elem.data));\r\n  } else {\r\n    // 支持单击添加图元。平板模式\r\n    // 需要单击画布\r\n    // ! 有问题，ID 不会修改\r\n    meta2d.canvas.addCaches = [elem.data];\r\n  }\r\n};\r\n</script>\r\n<style lang=\"postcss\" scoped>\r\n.graphics {\r\n  height: calc(100vh - 80px - 50px);\r\n  overflow-y: auto;\r\n  border-right: 1px solid var(--color-border);\r\n  z-index: 2;\r\n\r\n  :deep(.t-collapse) {\r\n    border-top: none;\r\n\r\n    .t-collapse-panel__content {\r\n      background-color: var(--color-background-active);\r\n      padding: 20px 4px;\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr 1fr 1fr;\r\n      grid-row-gap: 12px;\r\n    }\r\n\r\n    .t-collapse-panel {\r\n      &.has--group {\r\n        .t-collapse-panel__content {\r\n          display: block;\r\n        }\r\n      }\r\n      &.is--subpanel {\r\n        .t-collapse-panel__content {\r\n          display: grid;\r\n        }\r\n        .graphic {\r\n          padding: 10px;\r\n        }\r\n      }\r\n    }\r\n    .graphic {\r\n      position: relative;\r\n      padding: 10px 0;\r\n      border-radius: 2px;\r\n      border: 1px solid transparent;\r\n\r\n      &:hover {\r\n        cursor: pointer;\r\n        border-color: var(--color-primary);\r\n      }\r\n      p {\r\n        margin-top: 6px;\r\n        padding: 0 8px;\r\n        text-align: center;\r\n        font-size: 12px;\r\n        height: 12px;\r\n        line-height: 1;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        display: -webkit-box;\r\n        -webkit-line-clamp: 1;\r\n        word-break: break-all;\r\n        -webkit-box-orient: vertical;\r\n      }\r\n\r\n      svg {\r\n        color: var(--color);\r\n        height: 28px;\r\n        width: 100%;\r\n        margin: auto;\r\n      }\r\n\r\n      .icon__image {\r\n        height: 28px;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <PropsTab v-model=\"activeTab\" :tabs=\"tabs\" @change=\"tabChange\">\r\n    <template #graphics>\r\n      <Graphics />\r\n    </template>\r\n\r\n    <template #diagrams>\r\n      <div class=\"panel__wrapper\">\r\n        <t-button block variant=\"outline\" @click=\"showAddFolder('paper')\">\r\n          <t-icon name=\"add\" slot=\"icon\"></t-icon>\r\n          新建目录\r\n        </t-button>\r\n        <br />\r\n        <t-collapse v-if=\"blueprintList.length\" defaultExpandAll>\r\n          <t-collapse-panel\r\n            v-for=\"item in blueprintList\"\r\n            :value=\"item.id\"\r\n            :header=\"item.dictName\"\r\n          >\r\n            <template #headerRightContent>\r\n              <t-tooltip content=\"新建图纸，将清空画布\">\r\n                <t-button\r\n                  size=\"small\"\r\n                  variant=\"outline\"\r\n                  :style=\"{ marginLeft: '8px' }\"\r\n                  @click=\"addDiagram(item)\"\r\n                >\r\n                  <t-icon name=\"chart-add\"></t-icon>\r\n                </t-button>\r\n              </t-tooltip>\r\n\r\n              <t-tooltip content=\"删除目录\">\r\n                <t-popconfirm\r\n                  theme=\"danger\"\r\n                  content=\"操作后无法恢复, 确定要删除吗?\"\r\n                  @confirm=\"deleteFolder(item, 'paper')\"\r\n                >\r\n                  <t-button\r\n                    size=\"small\"\r\n                    variant=\"outline\"\r\n                    theme=\"danger\"\r\n                    :style=\"{ marginLeft: '8px' }\"\r\n                  >\r\n                    <t-icon name=\"delete\"></t-icon>\r\n                  </t-button>\r\n                </t-popconfirm>\r\n              </t-tooltip>\r\n            </template>\r\n\r\n            <t-row v-if=\"item.data.length\" :gutter=\"[10, 10]\">\r\n              <t-col\r\n                v-for=\"(v, index) in item.data\"\r\n                :key=\"index\"\r\n                :span=\"6\"\r\n                @click=\"openDiagram(v)\"\r\n              >\r\n                <t-tooltip content=\"单击打开图纸\">\r\n                  <t-image\r\n                    overlayTrigger=\"hover\"\r\n                    :src=\"v.cover\"\r\n                    fit=\"contain\"\r\n                    :style=\"{ width: '100px', height: '100px' }\"\r\n                  >\r\n                    <template #overlayContent>\r\n                      <t-popconfirm\r\n                        theme=\"danger\"\r\n                        content=\"操作后无法恢复, 确定要删除吗?\"\r\n                        @confirm=\"deleteMyPen(v, 'paper')\"\r\n                      >\r\n                        <t-button\r\n                          size=\"small\"\r\n                          variant=\"outline\"\r\n                          theme=\"danger\"\r\n                          :style=\"{ float: 'right' }\"\r\n                          @click.stop=\"() => null\"\r\n                        >\r\n                          <t-icon name=\"delete\"></t-icon>\r\n                        </t-button>\r\n                      </t-popconfirm>\r\n                    </template>\r\n                  </t-image>\r\n                </t-tooltip>\r\n              </t-col>\r\n            </t-row>\r\n\r\n            <t-empty v-else description=\"\"></t-empty>\r\n          </t-collapse-panel>\r\n        </t-collapse>\r\n        <t-empty v-else description=\"\"></t-empty>\r\n      </div>\r\n    </template>\r\n\r\n    <template #my-pens>\r\n      <div class=\"panel__wrapper\">\r\n        <t-button block variant=\"outline\" @click=\"showAddFolder('component')\">\r\n          <t-icon name=\"add\" slot=\"icon\"></t-icon>\r\n          新建目录\r\n        </t-button>\r\n        <br />\r\n        <t-collapse v-if=\"componentList.length\" defaultExpandAll>\r\n          <t-collapse-panel\r\n            v-for=\"item in componentList\"\r\n            :value=\"item.id\"\r\n            :header=\"item.dictName\"\r\n          >\r\n            <template #headerRightContent>\r\n              <t-upload\r\n                ref=\"uploadRef\"\r\n                v-model=\"uploadValue\"\r\n                :action=\"\r\n                  $attrs.uploadUrl ||\r\n                  'https://service-bv448zsw-1257786608.gz.apigw.tencentcs.com/api/upload-demo'\r\n                \"\r\n                :headers=\"headers\"\r\n                :sizeLimit=\"sizeLimit\"\r\n                name=\"object\"\r\n                theme=\"custom\"\r\n                accept=\"image/*\"\r\n                style=\"display: inline-flex\"\r\n                @fail=\"handleFail\"\r\n                @success=\"handleSuccess\"\r\n              >\r\n                <t-tooltip content=\"请选择单张小于1MB的图片上传\">\r\n                  <t-button\r\n                    size=\"small\"\r\n                    variant=\"outline\"\r\n                    :style=\"{ marginLeft: '8px' }\"\r\n                    @click=\"setFolder(item)\"\r\n                  >\r\n                    <t-icon name=\"upload\"></t-icon>\r\n                  </t-button>\r\n                </t-tooltip>\r\n              </t-upload>\r\n\r\n              <t-tooltip content=\"删除目录\">\r\n                <t-popconfirm\r\n                  theme=\"danger\"\r\n                  content=\"操作后无法恢复, 确定要删除吗?\"\r\n                  @confirm=\"deleteFolder(item, 'component')\"\r\n                >\r\n                  <t-button\r\n                    size=\"small\"\r\n                    variant=\"outline\"\r\n                    theme=\"danger\"\r\n                    :style=\"{ marginLeft: '8px' }\"\r\n                  >\r\n                    <t-icon name=\"delete\"></t-icon>\r\n                  </t-button>\r\n                </t-popconfirm>\r\n              </t-tooltip>\r\n              <!-- <t-tooltip content=\"公开目录下的所有组件\">\r\n                  <t-button\r\n                    size=\"small\"\r\n                    variant=\"outline\"\r\n                    theme=\"primary\"\r\n                    :style=\"{ marginLeft: '8px' }\"\r\n                  >\r\n                    <t-icon name=\"folder-shared\"></t-icon>\r\n                  </t-button>\r\n              </t-tooltip> -->\r\n            </template>\r\n\r\n            <t-row v-if=\"item.data.length\" :gutter=\"[10, 10]\">\r\n              <t-col\r\n                v-for=\"(v, index) in item.data\"\r\n                :key=\"index\"\r\n                :span=\"6\"\r\n                :draggable=\"true\"\r\n                @dragstart=\"dragStart($event, v)\"\r\n              >\r\n                <t-tooltip :content=\"v.name\">\r\n                  <t-image\r\n                    :src=\"v.cover\"\r\n                    overlayTrigger=\"hover\"\r\n                    fit=\"contain\"\r\n                    :style=\"{ width: '100px', height: '100px' }\"\r\n                  >\r\n                    <template #overlayContent>\r\n                      \r\n                      <t-popconfirm\r\n                        theme=\"danger\"\r\n                        content=\"操作后无法恢复, 确定要删除吗?\"\r\n                        @confirm=\"deleteMyPen(v, 'component')\"\r\n                      >\r\n                        <t-button\r\n                          size=\"small\"\r\n                          variant=\"outline\"\r\n                          theme=\"danger\"\r\n                          :style=\"{ float: 'right' }\"\r\n                          @click.stop=\"() => null\"\r\n                        >\r\n                          <t-icon name=\"delete\"></t-icon>\r\n                        </t-button>\r\n                      </t-popconfirm>\r\n                      <!-- <t-tooltip\r\n                        content=\"公开组件给所有人\"\r\n                        @confirm=\"deleteMyPen(v, 'component')\"\r\n                      >\r\n                        <t-button\r\n                          size=\"small\"\r\n                          variant=\"outline\"\r\n                          theme=\"primary\"\r\n                          :style=\"{ float: 'right', marginRight: '4px' }\"\r\n                          @click.stop=\"shareMyPen(v)\"\r\n                        >\r\n                          <t-icon name=\"share\"></t-icon>\r\n                        </t-button>\r\n                      </t-tooltip> -->\r\n                    </template>\r\n                  </t-image>\r\n                </t-tooltip>\r\n              </t-col>\r\n            </t-row>\r\n            <t-empty v-else></t-empty>\r\n          </t-collapse-panel>\r\n        </t-collapse>\r\n        <t-empty v-else description=\"\"></t-empty>\r\n      </div>\r\n    </template>\r\n  </PropsTab>\r\n\r\n  <t-dialog\r\n    v-model:visible=\"visible\"\r\n    :header=\"selectMode ? '选择目录' : '新建目录'\"\r\n    @confirm=\"confirm\"\r\n    @closed=\"close\"\r\n  >\r\n    <t-input\r\n      v-if=\"!selectMode\"\r\n      v-model=\"folderName\"\r\n      placeholder=\"请输入目录名称\"\r\n      maxlength=\"20\"\r\n      clearable\r\n    ></t-input>\r\n    <template v-else>\r\n      <t-select v-model=\"folderName\" :options=\"folderOptions\"></t-select>\r\n      <br />\r\n      <t-input v-model=\"fileName\" placeholder=\"请输入图纸/组件名称\"></t-input>\r\n    </template>\r\n  </t-dialog>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { computed, defineProps, reactive, ref } from \"vue\";\r\nimport Graphics from \"./Graphics.vue\";\r\nimport PropsTab from \"./PropsTab.vue\";\r\nimport { useData } from \"../services/useGraphics\";\r\nimport { useUpload } from \"../services/useUpload\";\r\nimport { NotifyPlugin, Button } from \"tdesign-vue-next\";\r\n\r\nconst props = defineProps({});\r\n\r\nconst tabs = [\r\n  {\r\n    label: \"图纸\",\r\n    value: 1,\r\n    slot: \"diagrams\",\r\n    code: \"paper\",\r\n  },\r\n  {\r\n    label: \"内置组件\",\r\n    value: 2,\r\n    slot: \"graphics\",\r\n  },\r\n  {\r\n    label: \"我的组件\",\r\n    value: 3,\r\n    slot: \"my-pens\",\r\n    code: \"component\",\r\n  },\r\n];\r\nconst activeTab = ref(2);\r\n\r\nconst {\r\n  blueprintList,\r\n  componentList,\r\n  visible,\r\n  folderName,\r\n  showAddFolder,\r\n  deleteMyPen,\r\n  confirm,\r\n  close,\r\n  selectMode,\r\n  selectType,\r\n  deleteFolder,\r\n  getTree,\r\n  fileName,\r\n  saveImageComponent,\r\n} = useData();\r\n\r\nconst tabChange = (value: number) => {\r\n  const tab = tabs.find((item) => item.value === value);\r\n  if (tab && tab.code) {\r\n    const code = tab.code;\r\n    getTree(code);\r\n  }\r\n};\r\n\r\nconst folderOptions = computed(() => {\r\n  let list = [];\r\n  if (selectType.value == \"paper\") {\r\n    list = blueprintList.value;\r\n  } else {\r\n    list = componentList.value;\r\n  }\r\n  return list.map((item: any) => {\r\n    return {\r\n      label: item.dictName,\r\n      value: item.id,\r\n    };\r\n  });\r\n});\r\n\r\nconst { uploadValue, headers, sizeLimit, handleFail } = useUpload();\r\n\r\nlet targetFolder: any = null;\r\nconst setFolder = (data: any) => {\r\n  console.log(\"set folder: \", data);\r\n  targetFolder = data;\r\n};\r\nconst handleSuccess = (context: any) => {\r\n  if (context.response) {\r\n    // 创建 pen\r\n    const image = context.response.url || context.response.data?.fileurl;\r\n    const data = {\r\n      name: \"image\",\r\n      image,\r\n      relativePath: context.response.data?.relativePath,\r\n      fileName: context.response.data?.fileName,\r\n      width: 100,\r\n      height: 100,\r\n      x: 100,\r\n      y: 100,\r\n    };\r\n\r\n    saveImageComponent(targetFolder, data);\r\n  }\r\n};\r\n\r\n/**\r\n * @description 我的组件，拖拽\r\n * @param e\r\n * @param elem 图片或组合\r\n */\r\nconst dragStart = async (e: any, elem: any) => {\r\n  if (!elem || !elem.data) {\r\n    return;\r\n  }\r\n  e.stopPropagation();\r\n  // console.log(\"dragStart elem: \", elem);\r\n  let data;\r\n  try {\r\n    if (typeof elem.data === \"string\") {\r\n      data = JSON.parse(elem.data);\r\n    } else if (typeof elem.data === \"object\") {\r\n      data = elem.data;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"dragStart error: \", error);\r\n  }\r\n\r\n  if (!data) return;\r\n\r\n  // 拖拽事件\r\n  if (e instanceof DragEvent) {\r\n    // 设置拖拽数据\r\n    e.dataTransfer?.setData(\"Meta2d\", JSON.stringify(data));\r\n  } else {\r\n    // 支持单击添加图元。平板模式\r\n    // 需要单击画布\r\n    meta2d.canvas.addCaches = [data];\r\n  }\r\n};\r\n\r\nconst addDiagram = (item: any) => {\r\n  console.log(\"addDiagram: \", item);\r\n  if (!item.children) {\r\n    item.children = [];\r\n  }\r\n  meta2d.clear();\r\n  meta2d.emit(\"clear\");\r\n};\r\n\r\nconst openDiagram = (item: any) => {\r\n  const p = NotifyPlugin(\"warning\", {\r\n    content: \"系统可能不会保存您所做的更改，是否继续？\",\r\n    title: \"提示\",\r\n    placement: \"top-right\",\r\n    duration: 0,\r\n    closeBtn: true,\r\n    footer(h) {\r\n      return h(\r\n        \"div\",\r\n        {\r\n          style: \"text-align: right\",\r\n        },\r\n        [\r\n          h(\r\n            Button,\r\n            {\r\n              onClick: () => {\r\n                let json;\r\n                try {\r\n                  json = JSON.parse(item.data);\r\n                } catch (error) {\r\n                  console.log(\"open diagram error: \", error);\r\n                }\r\n                meta2d.open(json);\r\n                meta2d.emit(\"clear\");\r\n                meta2d.fitView();\r\n                p.then((instance) => {\r\n                  instance.close();\r\n                  meta2d.render(true);\r\n                });\r\n              },\r\n            },\r\n            \"确定\",\r\n          ),\r\n        ],\r\n      );\r\n    },\r\n  });\r\n};\r\n\r\n\r\nconst shareMyPen = (item: any) => {\r\n  console.log(\"shareMyPen: \", item);\r\n  \r\n}\r\n</script>\r\n<style lang=\"postcss\" scoped>\r\n.panel__wrapper {\r\n  padding: 10px;\r\n\r\n  :deep(.t-button) .t-button__text {\r\n    align-items: center;\r\n  }\r\n  .t-image__wrapper {\r\n    border: #eee 1px solid;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"app-page\">\r\n    <Header v-if=\"renderProps\" v-bind=\"$attrs\" @view=\"toView\" />\r\n\r\n    <div class=\"designer\">\r\n      <GraphicsManager v-bind=\"$attrs\" />\r\n      <View v-bind=\"$attrs\" @ready=\"ready\" />\r\n      <Props v-if=\"renderProps\" v-bind=\"$attrs\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { onMounted, defineEmits, ref } from \"vue\";\r\nimport Header from \"../components/Header.vue\";\r\nimport View from \"../components/View.vue\";\r\nimport Props from \"../components/Props.vue\";\r\nimport GraphicsManager from \"../components/GraphicsManager.vue\";\r\n\r\nlet timer: any;\r\n\r\nfunction save() {\r\n  if (timer) {\r\n    clearTimeout(timer);\r\n  }\r\n  timer = setTimeout(() => {\r\n    const data: any = meta2d.data();\r\n    localStorage.setItem(\"meta2d\", JSON.stringify(data));\r\n    timer = undefined;\r\n  }, 100);\r\n}\r\n\r\nconst emit = defineEmits([\"view\", \"ready\"]);\r\nconst toView = (data: any) => {\r\n  emit(\"view\", data);\r\n};\r\n\r\nconst renderProps = ref(false);\r\n\r\nconst ready = (data: any) => {\r\n  emit(\"ready\", data);\r\n  renderProps.value = true;\r\n};\r\n\r\nonMounted(() => {\r\n  meta2d.on(\"scale\", save);\r\n  meta2d.on(\"add\", save);\r\n  meta2d.on(\"opened\", save);\r\n  meta2d.on(\"undo\", save);\r\n  meta2d.on(\"redo\", save);\r\n  meta2d.on(\"add\", save);\r\n  meta2d.on(\"delete\", save);\r\n  meta2d.on(\"rotatePens\", save);\r\n  meta2d.on(\"translatePens\", save);\r\n});\r\n</script>\r\n\r\n<style lang=\"postcss\" scoped>\r\n.app-page {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n\r\n  .designer {\r\n    display: grid;\r\n    grid-template-columns: 300px 1fr 350px;\r\n    height: calc(100vh - 80px);\r\n  }\r\n}\r\n</style>\r\n"],"names":["_imports_0","NavigationType","NavigationDirection","NavigationFailureType","routerKey","useRouter","inject","a","b","this","c","d","g","e","f","global","h","i","j","k","l","m","module","emit","__emit","assets","reactive","visible","ref","onVisibleChange","val","context","assetClick","item","loadElectricJson","isDrawLine","scale","onMounted","timer","scaleSubscriber","drawLine","lineTypes","currentLineType","changeLineType","value","_a","pen","fromArrow","fromArrows","toArrow","toArrows","changeFromArrow","PenType","changeToArrow","newFile","readFile","file","resolve","reject","reader","openFile","input","event","elem","text","downloadJson","data","FileSaver","downloadPng","name","isShowChild","store","selfPen","oldPen","showChildIndex","downloadSvg","MessagePlugin","rect","ctx","mySerializedSVG","urlObject","export_blob","url","evt","onUndo","onRedo","onCut","onCopy","onPaste","onAll","onDelete","saveBlueprintShow","useData","customToolbarClick","code","readSVGFile","res","parseSvgStr","onAddShape","deepClone","onScaleDefault","onScaleWindow","onView","selectPens","type","pens","penList","radius","dotHitOffset","anchorOffsetXY","anchors","downToUpFlag","isDefaultCross","crossLines","lineCross","defaultCross","mouseUp","mouseDown","add","active","opened","handleLineCross","flag","clearIntersect","worldAnchors","ls","actives","el","ll","an","passiveL","v","element","anchor","line","otherIndex","connect","lines","initiativeAnchors","l1","l11","passiveAnchors","n","l2","l22","onLine1","onLine2","x","y","checkLineIntersection","lineFromPoints","ret","inteceptCircleLineSeg","k1","deltaX1","deltaY1","p4","p5","l3","u","u1","u11","calcIsInsideThickLineSegment","an1","s8","an2","getDistance","comparedIds","neighbourIds","gapOverFlag","len","brother","otherBrother","index","brotherIndex","p","o","lastIndex","count","clearLineCross","line1","line2","pnt","lineThickness","L2","r","s","circle","u2","retP1","retP2","v1","v2","p1","p2","x1","y1","x2","y2","line1StartX","line1StartY","line1EndX","line1EndY","line2StartX","line2StartY","line2EndX","line2EndY","denominator","numerator1","numerator2","result","activePanel","__props","changeValue","onConfirmAnother","close","onCancel","__expose","jsStr","MONACO_EDITOR_OPTIONS","editorRef","shallowRef","handleMount","editor","handlers","insert","s12","EventAction","deleteEvent","eventChange","eventActionOptions","propOptions","propList","addProp","deleteProp","propChange","updatePropList","key","comparisonOptions","drawerVisible","showSelect","changeHandler","currentHandler","shallowReactive","filterIds","findPens","tagOptions","ConfigList","ids","id","onClickConfirm","columns","tag","list","sets","rehandleSelectChange","activePens","options","tabs","onChangeData","prop","uploadRef","uploadValue","sizeLimit","headers","useUpload","handleSuccess","handleFail","changeConnectProp","resolver","useWsHandlers","testConnect","msgTypes","wsClient","WebSocketClient","NotifyPlugin","response","error","codeEditor","showCodeEditor","saveJsStr","addWsMsgField","deleteWsMsgField","wsMsgFieldsChange","wsHandlersChange","moveXFrames","moveYFrames","rotateXFrames","scaleFrames","rotateFrames","rotateFrames2","processFrames","colorFrames","PenFrameOptions","LineAnimateOption","PenFrames","changeRect","events","eventTypeOptions","computed","selections","useSelection","isLine","getPen","statusList","animate","play","customFrames","showFramesDrawer","addFrames","nextTick","insertFrame","deleteFrame","frame","watcher","watch","lineDashs","animateType","frames","top","bottom","up","down","onUnmounted","copyId","copyToClipboard","eventsChange","allIsLine","allIsRect","pensTotal","newValue","alginOptions","align","nodes","inactive","pensTree","children","child","updateData","icon","node","iconMap","iconName","Icon","toggleVisible","click","shouldRender","SelectionMode","defaultGraphics","electricList","electricSvgList","arr","groupName","group","graphicGroups","electricCombineList","findChildren","parent","queue","current","dragStart","SwitchCombinesData","loadSvg","activeTab","blueprintList","componentList","folderName","showAddFolder","deleteMyPen","confirm","selectMode","selectType","deleteFolder","getTree","fileName","saveImageComponent","tabChange","tab","folderOptions","targetFolder","setFolder","_b","_c","addDiagram","openDiagram","Button","json","instance","save","toView","renderProps","ready"],"mappings":"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","x_google_ignoreList":[1,2]}